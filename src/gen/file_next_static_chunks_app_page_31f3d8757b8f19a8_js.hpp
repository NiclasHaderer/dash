
#pragma once
#include "files.hpp"
namespace duckdb {
const File FILE_NEXT_STATIC_CHUNKS_APP_PAGE_31F3D8757B8F19A8_JS = {
     // Content
     "(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[931],{28235:function(e,t,a){Promise.resolve().then(a.bind(a,27967))},27967:function(e,t,a){"use strict";a.r(t),a.d(t,{default:function(){return e$}});var n=a(46499),r=a(10331);function s(e){let{className:t,onDrop:a,onOverUpdate:s,children:l}=e,[i,o]=(0,r.useState)(!1),c=e=>Array.from(e.dataTransfer.items).some(e=>"file"===e.kind);return(0,n.jsx)("div",{className:t,onDragOver:e=>{e.preventDefault(),c(e)&&!i&&(o(!0),s&&s(!0,Array.from(e.dataTransfer.files)))},onDragLeave:e=>{e.preventDefault(),!e.currentTarget.contains(e.relatedTarget)&&i&&(o(!1),s&&s(!1,Array.from(e.dataTransfer.files)))},onDrop:e=>{e.preventDefault(),o(!1),s&&s(!1,Array.from(e.dataTransfer.files));let t=Array.from(e.dataTransfer.files);t.length&&a(t)},children:l})}var l=a(40440),i=a(99556);function o(e){(0,l.Rx)(e=>e.showRelationFromSource);let[t,a]=r.useState("idle");async function o(e){a("uploading");try{for(let t of(i.Am.error("Importing file via Drag and Drop is not yet supported. Please use the CLI to import files."),e));a("done")}catch(e){console.error("Failed to import file",e),a("error")}}return(0,n.jsxs)(s,{className:e.className,onDrop:o,onOverUpdate:(e,n)=>{e?"idle"===t&&a("hovering"):a("idle")},children:[e.children,("hovering"===t||"error"===t)&&(0,n.jsx)(c,{state:t,onErrorConfirm:()=>{a("idle")}})]})}function c(e){let t=e.state;return(0,n.jsxs)("div",{className:"fixed top-0 left-0 w-screen h-screen flex items-center justify-center z-50 pointer-events-none",style:{backgroundColor:"rgba(255,255,255,0.7)"},children:["hovering"===t&&(0,n.jsx)("h1",{className:"text-sm",children:"DROP FILES HERE"}),"uploading"===t&&(0,n.jsx)("h1",{className:"text-sm",children:"Importing files ..."}),"done"===t&&(0,n.jsx)("h1",{className:"text-sm",children:"Files imported successfully"}),"error"===t&&(0,n.jsxs)("div",{className:"bg-white p-4 rounded-md pointer-events-auto flex flex-col items-center",children:[(0,n.jsx)("h1",{className:"text-sm",children:"Sorry, but we failed to import the file :("}),(0,n.jsx)("button",{className:"bg-red-500 text-white px-4 py-2 rounded-md pointer-events-auto mt-2",onClick:e.onErrorConfirm,children:"OK"})]})]})}var d=a(53314);a(44506);var u=a(86042),x=a(17036),h=a(90818),m=a(92692),f=a(4980),p=a(68264),j=a(6467),v=a(10296),g=a(91864),w=a(44058),y=a(58694);function b(e){var t,a,s,l,i,o;let c=void 0!==e.tree.children,d=null===e.tree.children,u=null!==(l=e.enableDnd)&&void 0!==l&&l,x=e.parent_id_path.length,h=e.tree.id,m=e.parent_id_path.concat(e.tree.id),[f,p]=(0,r.useState)(null!==(i=e.tree.expanded)&&void 0!==i&&i),{listeners:N,setNodeRef:S}=(0,y.O1)({id:h}),{setNodeRef:C,isOver:k}=(0,y.Zj)({id:h,data:{path:m,canHaveChildren:!d}});r.useEffect(()=>{var t;p(null!==(t=e.tree.expanded)&&void 0!==t&&t)},[e.tree.expanded]);let R="#9a9a9a",z=null!==(o=e.tree.children)&&void 0!==o?o:[];e.orderBy&&z.sort(e.orderBy);let D=null===(t=e.selectedIds)||void 0===t?void 0:t.some(t=>1===t.length&&t[0]===e.tree.id),I=null===(s=e.selectedIds)||void 0===s?void 0:null===(a=s.filter(e=>e.length>1))||void 0===a?void 0:a.map(e=>e.slice(1)),Z=D?"active"===e.selectionMode?"bg-[rgba(0,96,255,0.04)] hover:bg-[rgba(0,96,255,0.08)]":"bg-[hsl(var(--muted-light))] hover:bg-[hsl(var(--muted))]":"active"===e.selectionMode?"hover:bg-[rgba(0,96,255,0.08)]":"hover:bg-[hsl(var(--muted))]";return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(j.xV,{children:[(0,n.jsx)(j.W4,{disabled:!e.contextMenuFactory,children:(0,n.jsx)("div",{className:(0,v.cn)(""),onClick:function(t){e.onClick(m,e.tree,t)},ref:C,onDoubleClick:function(t){e.onDoubleClick?e.onDoubleClick(m,e.tree):c&&p(!f)},onMouseDown:e=>e.preventDefault(),onPointerDown:t=>{var a;return null===(a=e.onPointerDown)||void 0===a?void 0:a.call(e,m,e.tree,t)},children:(0,n.jsxs)("div",{style:{paddingLeft:"".concat(1.5*x,"rem")},className:(0,v.cn)("flex items-center p-0.5 rounded-md",Z,k&&u?"border border-primary bg-[rgba(0,96,255,0.08)]":"border border-transparent"),ref:S,...N,children:[(0,n.jsx)("div",{onClick:t=>{var a;t.preventDefault(),t.stopPropagation(),!c&&e.loadChildren&&e.loadChildren(m);let n=!f;p(n),null===(a=e.onExpandedChange)||void 0===a||a.call(e,m,e.tree,n)},className:"cursor-pointer flex-shrink-0 flex items-center",style:{width:"1.5rem"},children:!d&&(f?(0,n.jsx)(g.Z,{size:16,color:R}):(0,n.jsx)(w.Z,{size:16,color:R}))}),(0,n.jsx)("div",{className:"flex-shrink-0 flex items-center",style:{width:"1.5rem"},children:e.iconFactory(e.tree.type)}),(0,n.jsx)("div",{className:"flex-grow whitespace-nowrap break-words",children:e.tree.name})]})})}),(0,n.jsx)(j.h_,{className:"min-w-40",children:e.contextMenuFactory&&e.contextMenuFactory(m,e.tree)})]}),f&&(c?(0,n.jsx)(n.Fragment,{children:z.map((t,a)=>(0,r.createElement)(b,{...e,enableDnd:u,selectedIds:I,key:a,tree:t,parent_id_path:m}))}):(0,n.jsx)("div",{className:"pl-2",children:(0,n.jsx)(b,{tree:{id:"",name:"Loading...",type:"loading",children:[]},enableDnd:!1,iconFactory:e.iconFactory,parent_id_path:m,onClick:e.onClick,selectionMode:e.selectionMode})}))]})}var N=a(31943);function S(e){var t;let a;let s=(0,l.Rx)(e=>e.applyEditorElementsActions),[i,o]=(0,r.useState)(null),[c,d]=(0,r.useState)(null),u=(0,y.Dy)((0,y.VT)(y.we,{activationConstraint:{distance:5}}));if(!e.enabled)return e.children;let x=null!==(t=e.selectedIds)&&void 0!==t?t:[],h=(0,N.IJ)(e.tree,x).filter(e=>void 0!==e);return a=!i&&c?x.map(e=>c.length):x.map(e=>e.length),(0,n.jsxs)(y.LB,{sensors:u,onDragStart:function(e){o(!0)},onDragEnd:function(t){var a,n;let r=t.over;if(!r){o(null);return}let l=null===(a=r.data.current)||void 0===a?void 0:a.path,i=null===(n=r.data.current)||void 0===n?void 0:n.canHaveChildren;if(!l||!e.selectedIds)return;let c=i?l:l.slice(0,-1);d(c),s(e.selectedIds.map(e=>({type:"move",id_path:e,target_id_path:c}))),o(null)},children:[e.children,(0,n.jsx)(y.y9,{adjustScale:!1,dropAnimation:{duration:300,sideEffects:e=>{let{active:t,dragOverlay:a}=e,n=a.node.children[0].children[0];n.style.paddingLeft=c?"".concat((c.length+1)*1.5,"rem"):"0",n.style.opacity="0",n.style.transition="padding-left 0.3s cubic-bezier(0.18, 0.67, 0.6, 1.22), opacity 0.15s cubic-bezier(0.18, 0.67, 0.6, 1.22) 0.15s"}},children:i&&(0,n.jsx)("div",{children:h.map((t,r)=>(0,n.jsxs)("div",{className:(0,v.cn)("flex flex-row items-center w-fit h-fit"),style:{paddingLeft:"".concat(1.5*a[r],"rem")},children:[(0,n.jsx)("div",{className:"flex-shrink-0 flex items-center",style:{width:"1.5rem"},children:e.iconFactory(t.type)}),(0,n.jsx)("span",{children:t.name})]},r))})})]})}function C(e){let{tree:t,iconFactory:a,onPointerDown:s,onClick:l,onDoubleClick:i,loadChildren:o,contextMenuFactory:c,onExpandedChange:d,orderBy:u,selectedIds:x,enableDnd:h=!0}=e,m=Array.isArray(t)?t:[t],f=u?m.sort(u):m,p=(0,r.useRef)(null),[j,v]=(0,r.useState)("passive");return(0,r.useEffect)(()=>{function e(e){p.current&&p.current.contains(e.target)?v("active"):v("passive")}return document.addEventListener("pointerdown",e,!0),()=>{document.removeEventListener("pointerdown",e,!0)}},[]),(0,n.jsx)("div",{className:"h-fit",ref:p,children:(0,n.jsx)(S,{enabled:h,tree:f,selectedIds:x,iconFactory:a,children:f.map((e,t)=>(0,n.jsx)(b,{orderBy:u,parent_id_path:[],tree:e,loadChildren:o,onPointerDown:s,onClick:l,onDoubleClick:i,iconFactory:a,contextMenuFactory:c,onExpandedChange:d,enableDnd:h,selectedIds:x,selectionMode:void 0===x?"passive":j},t))})})}var k=a(17322),R=a(97072),z=a(49334),D=a(52537),I=a(33056),Z=a(67835),F=a(57968);let E=e=>{switch(e){case"loading":return(0,n.jsx)(k.Z,{size:16});case"file":case"local-filesystem":return(0,n.jsx)(R.Z,{size:16});case"relation":return(0,n.jsx)(u.Z,{size:16});case"folder":return(0,n.jsx)(f.Z,{size:16});case"database":case"duckdb-wasm":case"duckdb-over-http":return(0,n.jsx)(x.Z,{size:16});case"dashboard":return(0,n.jsx)(h.Z,{size:16});case"schema":return(0,n.jsx)(m.Z,{size:16});case"Integer":case"Float":return(0,n.jsx)(z.Z,{size:16});case"String":return(0,n.jsx)(D.Z,{size:16});case"Boolean":return(0,n.jsx)(I.Z,{size:16});case"Timestamp":return(0,n.jsx)(Z.Z,{size:16});default:return(0,n.jsx)(F.Z,{size:16})}};var A=a(61283),O=a(99185),P=a(69808);function T(e){var t;let a=(0,p.g)(e=>e.refreshConnection),r=(0,p.g)(e=>e.loadChildrenForDataSource);async function s(e,t){O.I.getInstance().getSourceConnection(e).onDataSourceClick(t)}async function l(e,t){await r(e,t)}async function i(){await a(e.connection.id)}return(0,n.jsxs)("li",{className:"px-4 pr-0 py-2 pt-0 text-primary text-s h-fit relative group",children:[(0,n.jsxs)("div",{className:"flex pr-3 items-center justify-between",children:[(0,n.jsxs)("div",{className:"flex items-center space-x-2 text-nowrap font-semibold",children:[(0,n.jsx)("span",{children:e.connection.config.name}),(0,n.jsx)(_,{connectionId:e.connection.id})]}),(0,n.jsx)("div",{className:"flex space-x-2 opacity-0 group-hover:opacity-100 transition-opacity",children:(0,n.jsx)(P.z,{variant:"ghost",size:"icon",onClick:i,className:"h-8 w-8",children:(0,n.jsx)(A.Z,{size:12})})})]}),(0,n.jsx)("div",{className:"pr-4",children:(0,n.jsx)(C,{enableDnd:!1,tree:e.connection.dataSources,iconFactory:E,contextMenuFactory:(t=e.connection.id,O.I.getInstance().getSourceConnection(t).dataSourceContextMenuFactory),onClick:t=>s(e.connection.id,t),loadChildren:t=>l(e.connection.id,t)})})]})}function _(e){let t=(0,p.g)(t=>t.getConnectionState(e.connectionId)),a=t.message;return"connected"===t.state?(0,n.jsx)("span",{className:"text-green-500",children:"●"}):"disconnected"===t.state?(0,n.jsx)("span",{className:"text-gray-500",children:"●"}):"error"===t.state?(0,n.jsx)("span",{className:"text-red-500",title:a,children:"●"}):"connecting"===t.state?(0,n.jsx)("span",{className:"text-blue-500",children:"●"}):void 0}var L=a(25195),B=a(9190);function V(){let e=(0,p.g)(e=>e.connections);return(0,n.jsxs)("div",{className:"h-full w-full flex flex-col",children:[(0,n.jsxs)("div",{className:"pl-4 pt-3 pr-3 pb-2 flex flex-row items-center justify-between",children:[(0,n.jsx)(L.H5,{className:"text-primary text-nowrap",children:"Data Sources"}),(0,n.jsx)(P.z,{disabled:!0,variant:"ghost",size:"icon",className:"h-8 w-8",children:(0,n.jsx)(B.Z,{size:20})})]}),(0,n.jsx)("div",{className:"flex-1 overflow-y-auto",children:(0,n.jsx)("ul",{children:Object.values(e).map((e,t)=>(0,n.jsx)(r.Fragment,{children:(0,n.jsx)(T,{connection:e},t)},t))})})]})}var M=a(16244),W=a(32173),X=a(58034),q=a(78701);function Y(e){return(0,n.jsxs)("div",{className:"border border-gray-200 rounded w-72 h-fit",children:[(0,n.jsx)("div",{className:"w-full flex items-center justify-between border-b border-gray-200 px-4 py-1",children:(0,n.jsxs)("div",{className:"flex items-center justify-between space-x-2 w-full",children:[(0,n.jsx)(L.H5,{className:"text-md font-semibold flex-1 overflow-hidden text-ellipsis whitespace-nowrap",children:e.header}),(0,n.jsx)("div",{children:e.headerButtons})]})}),(0,n.jsx)("div",{className:"py-2",children:e.children})]})}var H=a(47916),Q=a(85718);function U(e){let t=(0,l.Rx)(e=>e.showRelationFromSource);return(0,n.jsx)(Y,{header:(0,n.jsxs)("div",{className:"flex items-center",children:[(0,n.jsx)(u.Z,{size:16,className:"mr-2"}),e.table.name]}),headerButtons:(0,n.jsx)(q.Z,{size:16,className:"text-gray-500 hover:text-gray-700 flex-shrink-0",onClick:function(){let a={type:"table",database:e.schema.databaseId,schema:e.schema.id,tableName:e.table.name};t(e.schema.connectionId,a,Q.zT)}}),children:(0,n.jsx)("div",{className:"flex flex-col space-y-0.5",children:e.table.children.map(e=>(0,n.jsxs)("div",{className:"flex items-center justify-between px-4 py-0.5 border-gray-100",children:[(0,n.jsxs)("div",{className:"flex-1 flex items-center space-x-2 overflow-hidden pr-1",children:[(0,n.jsx)(H.s,{type:e.type}),(0,n.jsx)("span",{className:"flex-1 overflow-hidden text-ellipsis whitespace-nowrap",title:e.name,children:e.name})]}),(0,n.jsx)("span",{className:"flex-shrink-0 text-gray-500 text-s",children:e.type})]},e.name))})})}var G=a(45453);function K(e){let t=(0,l.Rx)(t=>t.getSchemaState(e.schemaId),X.X);return t?(0,n.jsxs)("div",{className:"w-full h-full flex flex-col",children:[(0,n.jsx)(W.t,{title:t.name,path:(0,G.A)(t)}),(0,n.jsx)("div",{className:"p-4 flex overflow-auto space-x-4 flex-row w-full h-full",children:t.children.map((e,a)=>(0,n.jsx)(U,{schema:t,table:e},a))})]}):(0,n.jsxs)("div",{children:["Schema not found: ",e.schemaId]})}function $(e){let t=(0,l.Rx)(e=>e.showRelationFromSource),a=(0,l.Rx)(e=>e.showSchema);return(0,n.jsx)(Y,{header:(0,n.jsxs)("div",{className:"flex items-center",children:[(0,n.jsx)(m.Z,{size:16,className:"mr-2"}),e.schema.name]}),headerButtons:(0,n.jsx)(q.Z,{size:16,className:"text-gray-500 hover:text-gray-700 flex-shrink-0",onClick:function(){a(e.connectionId,e.databaseName,e.schema)}}),children:(0,n.jsx)("div",{className:"flex flex-col space-y-0.5",children:e.schema.children.map((a,r)=>(0,n.jsxs)("div",{className:"group flex items-center justify-between px-4 py-0.5 border-gray-100",children:[(0,n.jsxs)("div",{className:"flex-1 flex items-center space-x-2 overflow-hidden pr-1",children:[(0,n.jsx)(x.Z,{size:16}),(0,n.jsx)("span",{className:"flex-1 overflow-hidden text-ellipsis whitespace-nowrap",title:a.name,children:a.name})]}),(0,n.jsx)(q.Z,{size:16,className:"text-gray-500 hover:text-gray-700 flex-shrink-0 opacity-0 group-hover:opacity-100 transition-opacity",onClick:()=>(function(a){let n={type:"table",database:e.databaseName,schema:e.schema.name,tableName:a};t(e.connectionId,n,Q.zT)})(a.name)})]},a.name))})})}var J=a(56283);function ee(e){let t=(0,l.Rx)(t=>t.getDatabaseState(e.databaseId),X.X);return t?(0,n.jsxs)("div",{className:"w-full h-full flex flex-col",children:[(0,n.jsx)(W.t,{title:t.name,path:(0,J._)(t)}),(0,n.jsx)("div",{className:"p-4 flex overflow-auto space-x-4 flex-row w-full h-full",children:t.children.map((a,r)=>(0,n.jsx)($,{connectionId:t.connectionId,databaseId:e.databaseId,databaseName:t.name,schema:a},r))})]}):(0,n.jsxs)("div",{children:["Database not found: ",e.databaseId]})}function et(e){return(0,n.jsx)("div",{className:"w-full h-full flex flex-col"})}let ea=(0,a(77514).default)(()=>Promise.all([a.e(193),a.e(606),a.e(313),a.e(584)]).then(a.bind(a,34584)),{loadableGenerated:{webpack:()=>[34584]},ssr:!1});function en(e){let t=e.dashboard,a=(0,l.Rx)(e=>e.setDashboardStateUnsafe);return(0,n.jsx)("div",{className:"p-4 pl-1 overflow-auto w-full h-full bg-inherit flex flex-col items-center justify-start",children:(0,n.jsx)(ea,{id:t.id,initialData:t.elementState,onSaved:function(e){let n=l.Rx.getState().getDashboardState(t.id);a(t.id,{...n,elementState:e})}})})}function er(e){let t=(0,l.Rx)(t=>t.getDashboardState(e.dashboardId),X.X);return t?(0,n.jsx)("div",{className:"w-full h-full flex flex-col",children:(0,n.jsx)("div",{className:"flex-1 overflow-auto relative",children:(0,n.jsx)(en,{dashboard:t})})}):(0,n.jsxs)("div",{children:["Dashboard not found: ",e.dashboardId]})}var es=a(40940),el=a(39890);function ei(e){let[t,a]=r.useState(e.currentName);return r.useEffect(()=>{a(e.currentName)},[e.currentName]),(0,n.jsx)(es.Vq,{open:e.isOpen,onOpenChange:e.onOpenChange,children:(0,n.jsxs)(es.cZ,{children:[(0,n.jsxs)(es.fK,{children:[(0,n.jsx)(es.$N,{children:e.title}),e.description&&(0,n.jsx)(es.Be,{children:e.description})]}),(0,n.jsx)("div",{className:"space-y-4",children:(0,n.jsx)(el.I,{placeholder:"Enter new name",value:t,onChange:e=>a(e.target.value)})}),(0,n.jsxs)(es.cN,{children:[(0,n.jsx)(P.z,{variant:"secondary",onClick:()=>e.onOpenChange(!1),children:"Cancel"}),(0,n.jsx)(P.z,{onClick:function(){e.onRename(t),e.onOpenChange(!1)},children:"Confirm"})]})]})})}function eo(e){return(0,n.jsx)(es.Vq,{open:e.isOpen,onOpenChange:e.onOpenChange,children:(0,n.jsxs)(es.cZ,{children:[(0,n.jsxs)(es.fK,{children:[e.title&&(0,n.jsx)(es.$N,{children:e.title}),e.description&&(0,n.jsx)(es.Be,{children:e.description})]}),(0,n.jsxs)(es.cN,{children:[(0,n.jsx)(P.z,{variant:"secondary",onClick:()=>e.onOpenChange(!1),children:"Cancel"}),(0,n.jsx)(P.z,{onClick:function(){e.onDelete(),e.onOpenChange(!1)},variant:"destructive",children:"Delete"})]})]})})}var ec=a(23141),ed=a(52914),eu=a(86792),ex=a(56944);function eh(e){return(0,n.jsx)(ex.m5,{open:e.open,onOpenChange:e.setOpen,children:(0,n.jsxs)(ex.mY,{className:"min-h-[300px]",children:[(0,n.jsx)(ex.sZ,{placeholder:"Search for Dashboards ..."}),(0,n.jsxs)(ex.e8,{children:[(0,n.jsx)(ex.rb,{children:"No Dashboards found"}),(0,n.jsx)(ex.fu,{children:e.dashboards.map(t=>(0,n.jsx)(ex.di,{onSelect:()=>{e.onDashboardSelected(t),e.setOpen(!1)},children:t.viewState.displayName},t.id))})]})]})})}var em=a(57666),ef=a(97491),ep=a(24557),ej=a(46661),ev=a(4908),eg=a(63906),ew=a(60718),ey=a(12442);let eb=ey.zt,eN=ey.fC,eS=ey.xz,eC=r.forwardRef((e,t)=>{let{className:a,sideOffset:r=4,...s}=e;return(0,n.jsx)(ey.h_,{children:(0,n.jsx)(ey.VY,{ref:t,sideOffset:r,className:(0,v.cn)("z-50 overflow-hidden rounded-md bg-primary px-3 py-1.5 text-xs text-primary-foreground animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",a),...s})})});function ek(){let[e,t]=(0,r.useState)(null),[a,s]=(0,r.useState)({isOpen:!1}),[o,c]=(0,r.useState)({isOpen:!1}),[d,x]=(0,r.useState)([]),[m,p]=(0,r.useState)({open:!1}),v=(0,l.Rx)(e=>e.relations),g=(0,l.Rx)(e=>e.dashboards),w=(0,l.Rx)(e=>e.editorElements),y=(0,l.Rx)(e=>e.showRelationFromId),b=(0,l.Rx)(e=>e.deleteRelation),S=(0,l.Rx)(e=>e.updateRelationViewState),k=(0,l.Rx)(e=>e.addNewRelation),R=(0,l.Rx)(e=>e.updateDashboardViewState),z=(0,l.Rx)(e=>e.showDashboardFromId),D=(0,l.Rx)(e=>e.addNewDashboard),I=(0,l.Rx)(e=>e.setDashboardStateUnsafe),Z=(0,l.Rx)(e=>e.deleteDashboard),F=(0,l.Rx)(e=>e.updateEditorElements),A=(0,l.Rx)(e=>e.removeEditorElement),T=(0,l.Rx)(e=>e.applyEditorElementsActions);function _(e,t){T((0,eg.G4)(e||[],t))}return(0,l.Rx)(e=>e.resetEditorElements),(0,r.useEffect)(()=>{(0,ew.At)(Q.Sg,O.I.getInstance().getDatabaseConnection()).then(e=>{t(e),console.log("Storage Info",e)})},[]),(0,n.jsxs)("div",{className:"h-full w-full flex flex-col",children:[(0,n.jsxs)("div",{className:"p-4 pt-3 pb-2 pr-3 flex flex-row items-center justify-between",children:[(0,n.jsxs)(L.H5,{className:"text-primary text-nowrap flex flex-row space-x-1 items-center",children:["Editor ",(null==e?void 0:e.databaseReadonly)||(null==e?void 0:e.databaseStatus)=="temporary"?(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)("div",{className:"w-1"}),(0,n.jsx)(eb,{children:(0,n.jsxs)(eN,{children:[(0,n.jsx)(eS,{asChild:!0,children:(0,n.jsx)("div",{style:{fontSize:14},className:"h-6 flex items-center space-x-1 text-orange-400 border border-orange-300 px-1 font-semibold rounded-md cursor-pointer",children:(null==e?void 0:e.databaseReadonly)?"Read-Only":"Temporary"})}),(0,n.jsxs)(eC,{style:{fontSize:14},className:"bg-primary text-primary-foreground p-0.5 rounded-md",children:[(0,n.jsxs)("p",{children:["The editor state is stored in the ",(null==e?void 0:e.databaseReadonly)?"Read-Only":"Temporary"," database."]}),(0,n.jsx)("p",{children:"New Dashboards etc. will not be stored permanently."}),(0,n.jsxs)("p",{children:["(Storage Destination = ",null==e?void 0:e.destination.databaseName,".",null==e?void 0:e.destination.schemaName,".",null==e?void 0:e.destination.tableName,")"]})]})]})})]}):null]}),(0,n.jsxs)(eu.h_,{children:[(0,n.jsx)(eu.$F,{asChild:!0,children:(0,n.jsx)(P.z,{variant:"ghost",size:"icon",className:"h-8 w-8",children:(0,n.jsx)(B.Z,{size:16})})}),(0,n.jsxs)(eu.AW,{children:[(0,n.jsxs)(eu.Xi,{onClick:()=>_(),children:[(0,n.jsx)(f.Z,{size:16,className:"mr-2"}),(0,n.jsx)("span",{children:"New Folder"})]}),(0,n.jsxs)(eu.Xi,{onClick:()=>k(Q.BC,[],void 0),children:[(0,n.jsx)(u.Z,{size:16,className:"mr-2"}),(0,n.jsx)("span",{children:"New Query"})]}),(0,n.jsxs)(eu.Xi,{onClick:()=>D(Q.BC,[],void 0),children:[(0,n.jsx)(h.Z,{size:16,className:"mr-2"}),(0,n.jsx)("span",{children:"New Dashboard"})]}),!1]})]})]}),(0,n.jsx)("div",{className:"overflow-y-auto h-full px-3",children:(0,n.jsx)(C,{selectedIds:d,orderBy:eR,tree:w,iconFactory:E,onPointerDown:function(e,t,a){a.shiftKey?d.some(t=>t.join()===e.join())?x(d.filter(t=>t.join()!==e.join())):x([...d,e]):x([e])},onClick:function(e,t,a){a.shiftKey||("relation"===t.type?y(t.id,e):"dashboard"===t.type&&z(t.id,e))},onExpandedChange:function(e,t,a){T([{id_path:e,node:{...t,expanded:a},type:"update"}])},contextMenuFactory:(e,t)=>(0,n.jsxs)(n.Fragment,{children:["folder"===t.type&&(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(j.qu,{children:[(0,n.jsxs)(j.xx,{children:[(0,n.jsx)(B.Z,{size:16,className:"mr-2"}),(0,n.jsx)("span",{children:"New ..."})]}),(0,n.jsxs)(j.dp,{className:"max-w-64 truncate text-left",children:[(0,n.jsxs)(j.Zo,{onClick:()=>_(e,t),children:[(0,n.jsx)(f.Z,{size:16,className:"mr-2"}),(0,n.jsx)("span",{children:"Folder"})]}),(0,n.jsxs)(j.Zo,{onClick:()=>{var t,a;return t=e,a=0,void k(Q.BC,t,void 0)},children:[(0,n.jsx)(u.Z,{size:16,className:"mr-2"}),(0,n.jsx)("span",{children:"Query"})]}),(0,n.jsxs)(j.Zo,{onClick:()=>{var t,a;return t=e,a=0,void D(Q.BC,t,void 0)},children:[(0,n.jsx)(h.Z,{size:16,className:"mr-2"}),(0,n.jsx)("span",{children:"Dashboard"})]})]})]}),(0,n.jsx)(j.uP,{})]}),(0,n.jsxs)(j.Zo,{onClick:()=>{var a,n;let r,l,i;return a=e,r=(n=t).name,l="Rename",i="Enter a new name",void("relation"===n.type?(r=n.name,l="Rename Data View",i="Enter a new name for the data view."):"dashboard"===n.type?(r=n.name,l="Rename Dashboard",i="Enter a new name for the dashboard."):"folder"===n.type&&(r=n.name,l="Rename Folder",i="Enter a new name for the folder."),s({title:l,description:i,path:a,isOpen:!0,currentNode:n,currentName:r}))},children:[(0,n.jsx)(ep.Z,{size:16,className:"mr-2"}),(0,n.jsx)("span",{children:"Rename"})]}),(0,n.jsxs)(j.Zo,{onClick:()=>(function(e,t){let a={path:e,isOpen:!0,currentNode:t};if("relation"===t.type){let e=v[t.id];c({...a,title:"Delete Data View",description:'Are you sure you want to delete the data view "'.concat(e.viewState.displayName,'"? This action cannot be undone.')});return}if("dashboard"===t.type){let e=g[t.id];c({...a,title:"Delete Dashboard",description:'Are you sure you want to delete the dashboard "'.concat(e.viewState.displayName,'"? This action cannot be undone.')});return}if("folder"===t.type){let e=[],n=[];(0,N.QR)([t],t=>{"dashboard"===t.type?e.push(t.name):"relation"===t.type&&n.push(t.name)});let r='Are you sure you want to delete the folder "'.concat(t.name,'" and all its contents? This action cannot be undone. The folder contains ').concat(e.length," dashboards and ").concat(n.length," data views:\n").concat(e.join(", "),"\n").concat(n.join(", "));c({...a,title:"Delete Folder with Contents",description:r});return}})(e,t),children:[(0,n.jsx)(ej.Z,{size:16,className:"mr-2"}),(0,n.jsx)("span",{children:"Delete"})]}),"folder"!==t.type&&(0,n.jsxs)(j.Zo,{onClick:()=>(function(e,t){let a=e.slice(0,e.length-1);if("relation"===t.type){let e=v[t.id],n={type:"query",id:(0,ec.w)(),name:"New Query",baseQuery:e.query.baseQuery},r={...e,id:(0,ed.uJ)(e.connectionId,n),name:e.name+" (Copy)",viewState:{...e.viewState,displayName:e.viewState.displayName+" (Copy)"},source:n};k(Q.BC,a,r)}else if("dashboard"===t.type){let e=g[t.id],n={...e,id:"dashboard-".concat((0,ec.w)()),name:e.viewState.displayName+" (Copy)",viewState:{...e.viewState,displayName:e.viewState.displayName+" (Copy)"}};D(Q.BC,a,n)}})(e,t),children:[(0,n.jsx)(ev.Z,{size:16,className:"mr-2"}),(0,n.jsx)("span",{children:"Duplicate"})]}),"relation"===t.type&&(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(j.uP,{}),(0,n.jsxs)(j.Zo,{onClick:()=>{var e,a;return e=0,void("relation"===(a=t).type&&p({open:!0,relation:v[a.id]}))},children:[(0,n.jsx)(h.Z,{size:16,className:"mr-2"}),(0,n.jsx)("span",{children:"Add to Dashboard"})]})]})]})})}),(0,n.jsx)(ei,{title:a.title||"Rename",description:a.description,isOpen:a.isOpen,onOpenChange:e=>s({...a,isOpen:e}),onRename:function(e){var t,n,r;if((null===(t=a.currentNode)||void 0===t?void 0:t.type)==="relation")S(a.currentNode.id,{displayName:e},a.path);else if((null===(n=a.currentNode)||void 0===n?void 0:n.type)==="dashboard")R(a.currentNode.id,{displayName:e},a.path);else if((null===(r=a.currentNode)||void 0===r?void 0:r.type)==="folder"){let t={...a.currentNode,name:e};F(a.path,t)}},currentName:a.currentName||""}),(0,n.jsx)(eo,{title:o.title,description:o.description,isOpen:o.isOpen,onOpenChange:e=>c({...o,isOpen:e}),onDelete:function(){var e,t,a;(null===(e=o.currentNode)||void 0===e?void 0:e.type)==="relation"?b(o.currentNode.id,o.path):(null===(t=o.currentNode)||void 0===t?void 0:t.type)==="dashboard"?Z(o.currentNode.id,o.path):(null===(a=o.currentNode)||void 0===a?void 0:a.type)==="folder"&&A(o.path)}}),(0,n.jsx)(eh,{dashboards:Object.values(g),open:m.open,setOpen:e=>p({...m,open:e}),onDashboardSelected:e=>(function(e,t){var a;e.viewState.codeFenceState.layout="row",e.viewState.codeFenceState.show=!1;let n={...e,viewState:{...e.viewState,chartState:{...e.viewState.chartState,view:{...e.viewState.chartState.view,showConfig:!1}},codeFenceState:{sizePercentage:.5,layout:"row",show:!1}}},r={...t,elementState:{blocks:[...(null===(a=t.elementState)||void 0===a?void 0:a.blocks)||[],{type:em.X,data:n,id:(0,ec.w)()}]}},s=(0,ef.E)(),l=t.id;if(s.hasEditor(l)){let e=s.getEditor(l),t=e.blocks.getBlocksCount();e.blocks.insert(em.X,n,void 0,t)}else I(t.id,r);i.Am.success('Added "'.concat(e.viewState.displayName,'" to "').concat(t.viewState.displayName,'"'),{duration:2e3})})(m.relation,e)})]})}function eR(e,t){if(e.type===t.type)return e.name.localeCompare(t.name);{let a=e.type,n=t.type;return"folder"===a?-1:"folder"===n?1:"dashboard"===a?-1:1}}eC.displayName=ey.VY.displayName;var ez=a(59952),eD=a(99077),eI=a(49358),eZ=a(68929);let eF=r.forwardRef((e,t)=>{let{className:a,...r}=e;return(0,n.jsx)(eZ.fC,{ref:t,className:(0,v.cn)("relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full",a),...r})});eF.displayName=eZ.fC.displayName;let eE=r.forwardRef((e,t)=>{let{className:a,...r}=e;return(0,n.jsx)(eZ.Ee,{ref:t,className:(0,v.cn)("aspect-square h-full w-full",a),...r})});eE.displayName=eZ.Ee.displayName,r.forwardRef((e,t)=>{let{className:a,...r}=e;return(0,n.jsx)(eZ.NY,{ref:t,className:(0,v.cn)("flex h-full w-full items-center justify-center rounded-full bg-muted",a),...r})}).displayName=eZ.NY.displayName;var eA=a(75668),eO=a(28458);function eP(e){let[t,a]=r.useState(e.initialSelectedTabs||["connections","relations"]),s=(0,eO.m)(e=>e.setConnectionsConfigOpen);return(0,n.jsxs)("div",{className:"w-16 py-4 h-full bg-background border-r border-separate flex flex-col items-center",children:[(0,n.jsx)(eF,{children:(0,n.jsx)(eE,{src:"favicon/web-app-manifest-192x192.png",alt:"Logo"})}),(0,n.jsxs)(eI.t,{type:"multiple",className:"flex flex-col mt-4",value:t,onValueChange:t=>{a(t),e.onSelectedTabsChanged&&e.onSelectedTabsChanged(t)},children:[(0,n.jsx)(eI.G,{size:"lg",className:"mb-2",value:"connections","aria-label":"Toggle Connection",children:(0,n.jsx)(x.Z,{className:"h-10 w-10"})}),(0,n.jsx)(eI.G,{size:"lg",value:"relations","aria-label":"Toggle Relations",children:(0,n.jsx)(f.Z,{className:"h-10 w-10"})})]}),(0,n.jsx)("div",{className:"flex-1"}),(0,n.jsx)(P.z,{variant:"ghost",size:"icon",onClick:()=>s(!0),children:(0,n.jsx)(eD.Z,{})})]})}function eT(e){let t=(0,eA.C)(e=>e.sideBarTabsSizeRatio),a=(0,eA.C)(e=>e.setSideBarTabsSizeRatio);return(0,n.jsx)("div",{className:"flex-1 h-screen overflow-auto",children:(0,n.jsx)(ez.pO,{direction:"vertical",children:e.selectedTabs.toSorted().map((e,r)=>(0,n.jsxs)(n.Fragment,{children:[r>0&&(0,n.jsx)(ez.Dp,{}),(0,n.jsx)(ez.ee,{style:{overflow:"auto"},onResize:e=>a(e),defaultSize:1===r?t:100-t,children:function(e){switch(e){case"connections":return(0,n.jsx)(V,{});case"relations":return(0,n.jsx)(ek,{})}}(e)},r)]}))})})}var e_=a(88767);function eL(e){let t=e.relationId,a=(0,l.Rx)(e=>e.updateRelationViewState),r=(0,l.Rx)(e=>e.getRelation(t),X.X),s=(0,l.Rx)(e=>e.updateRelationBaseQuery),i=(0,l.Rx)(e=>e.updateRelationDataWithParams);return r?(0,n.jsx)(e_.GA,{relationState:r,updateRelationViewState:a,updateRelationBaseQuery:s,updateRelationDataWithParams:i}):(0,n.jsxs)("div",{children:["Data View not found: ",e.relationId]})}function eB(){let e=(0,eA.C)(e=>e.layoutModel),t=(0,eA.C)(e=>e.selectedSidebarTabs),a=(0,eA.C)(e=>e.setSelectedSidebarTabs),r=t.length>0,s=(0,eA.C)(e=>e.mainBarSizeRatio),l=(0,eA.C)(e=>e.setMainBarSizeRatio);return(0,n.jsx)("div",{className:"relative h-full w-full",children:(0,n.jsxs)("div",{className:"flex flex-row h-full",children:[(0,n.jsx)(eP,{initialSelectedTabs:t,onSelectedTabsChanged:a}),(0,n.jsxs)(ez.pO,{className:"flex-1 h-full",direction:"horizontal",children:[(0,n.jsx)(ez.ee,{defaultSize:s,onResize:l,minSize:8,className:(0,v.cn)(r?"":"hidden",""),children:r&&(0,n.jsx)(eT,{selectedTabs:t})}),(0,n.jsx)(ez.Dp,{className:r?"":"hidden"}),(0,n.jsx)(ez.ee,{defaultSize:r?100-s:100,minSize:40,className:"relative",children:(0,n.jsx)(d.Layout,{font:{size:"14px"},model:e,factory:eV,iconFactory:eM,onAction:M.G_,onModelChange:eA.C.getState().persistState})})]})]})})}let eV=e=>{let t=e.getComponent();return"ConnectionList"===t?(0,n.jsx)(V,{}):"RelationList"===t?(0,n.jsx)(ek,{}):"RelationComponent"===t?(0,n.jsx)(eL,{relationId:e.getConfig().relationId}):"SchemaComponent"===t?(0,n.jsx)(K,{schemaId:e.getConfig().schemaId}):"DatabaseComponent"===t?(0,n.jsx)(ee,{databaseId:e.getConfig().databaseId}):"DirectoryComponent"===t?(0,n.jsx)(et,{directoryId:e.getConfig().directoryId}):"DashboardComponent"===t?(0,n.jsx)(er,{dashboardId:e.getConfig().dashboardId}):null},eM=e=>{let t=e.getComponent();return"RelationList"===t?(0,n.jsx)("div",{style:{width:24,height:24},children:(0,n.jsx)(u.Z,{size:24,style:{transform:"rotate(90deg)"}})}):"ConnectionList"===t?(0,n.jsx)("div",{style:{width:24,height:24},children:(0,n.jsx)(x.Z,{size:24,style:{transform:"rotate(90deg)"}})}):"RelationComponent"===t?(0,n.jsx)("div",{style:{width:16,height:16},children:(0,n.jsx)(u.Z,{size:16})}):"DashboardComponent"===t?(0,n.jsx)("div",{style:{width:16,height:16},children:(0,n.jsx)(h.Z,{size:16})}):"SchemaComponent"===t?(0,n.jsx)("div",{style:{width:16,height:16},children:(0,n.jsx)(m.Z,{size:16})}):"DatabaseComponent"===t?(0,n.jsx)("div",{style:{width:16,height:16},children:(0,n.jsx)(x.Z,{size:16})}):"DirectoryComponent"===t?(0,n.jsx)("div",{style:{width:16,height:16},children:(0,n.jsx)(f.Z,{size:16})}):null};var eW=a(73623);eW.fC,eW.xz;let eX=eW.h_,eq=r.forwardRef((e,t)=>{let{className:a,...r}=e;return(0,n.jsx)(eW.aV,{className:(0,v.cn)("fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",a),...r,ref:t})});eq.displayName=eW.aV.displayName;let eY=r.forwardRef((e,t)=>{let{className:a,...r}=e;return(0,n.jsxs)(eX,{children:[(0,n.jsx)(eq,{}),(0,n.jsx)(eW.VY,{ref:t,className:(0,v.cn)("fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg",a),...r})]})});eY.displayName=eW.VY.displayName;let eH=e=>{let{className:t,...a}=e;return(0,n.jsx)("div",{className:(0,v.cn)("flex flex-col space-y-2 text-center sm:text-left",t),...a})};eH.displayName="AlertDialogHeader";let eQ=e=>{let{className:t,...a}=e;return(0,n.jsx)("div",{className:(0,v.cn)("flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2",t),...a})};eQ.displayName="AlertDialogFooter";let eU=r.forwardRef((e,t)=>{let{className:a,...r}=e;return(0,n.jsx)(eW.Dx,{ref:t,className:(0,v.cn)("text-lg font-semibold",a),...r})});eU.displayName=eW.Dx.displayName;let eG=r.forwardRef((e,t)=>{let{className:a,...r}=e;return(0,n.jsx)(eW.dk,{ref:t,className:(0,v.cn)("text-sm text-muted-foreground",a),...r})});eG.displayName=eW.dk.displayName;let eK=r.forwardRef((e,t)=>{let{className:a,...r}=e;return(0,n.jsx)(eW.aU,{ref:t,className:(0,v.cn)((0,P.d)(),a),...r})});function e$(){let[e,t]=(0,r.useState)(!1),a=(0,l.YT)(e=>e.hydrated);return((0,r.useEffect)(()=>{ew.rQ.getInstance().then(e=>{e.setOnForceReloadCallback(()=>{t(!0)})})}),a)?(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(o,{className:"h-screen w-screen flex flex-col",children:(0,n.jsx)(eB,{})}),(0,n.jsx)(eW.aR,{open:e,children:(0,n.jsxs)(eY,{children:[(0,n.jsxs)(eH,{children:[(0,n.jsx)(eU,{children:"Changes detected!"}),(0,n.jsx)(eG,{children:"Another User or Tab has made changes. To ensure you have the latest data, please reload the page. Otherwise, your changes may be lost."})]}),(0,n.jsx)(eQ,{children:(0,n.jsx)(eK,{onClick:function(){window.location.reload()},children:"Reload"})})]})})]}):(0,n.jsx)("div",{className:"h-screen w-screen flex items-center justify-center",children:(0,n.jsxs)("div",{className:"flex flex-col items-center justify-center space-y-2",children:[(0,n.jsx)(eF,{className:"mt-2",children:(0,n.jsx)(eE,{src:"favicon/web-app-manifest-192x192.png",alt:"Logo"})}),(0,n.jsx)("div",{className:"text-muted-foreground",children:" Loading..."})]})})}eK.displayName=eW.aU.displayName,r.forwardRef((e,t)=>{let{className:a,...r}=e;return(0,n.jsx)(eW.$j,{ref:t,className:(0,v.cn)((0,P.d)({variant:"outline"}),"mt-2 sm:mt-0",a),...r})}).displayName=eW.$j.displayName},32173:function(e,t,a){"use strict";a.d(t,{t:function(){return g}});var n=a(46499),r=a(11393),s=a.n(r),l=a(10331),i=a(85718);function o(e){let{state:t}=e,[a,r]=(0,l.useState)(!1);return(0,l.useEffect)(()=>{let e=null;return"running"===t.state?e=setTimeout(()=>{r(!0)},i.rl):(r(!1),e&&clearTimeout(e)),()=>{e&&clearTimeout(e)}},[t]),(0,n.jsxs)("div",{className:"jsx-ab04bff670607aaa relative w-full h-[1px] bg-border overflow-hidden",children:["running"===t.state&&a?(0,n.jsx)("div",{className:"jsx-ab04bff670607aaa absolute top-0 left-0 w-full h-full bg-secondary animate-loading"}):(0,n.jsx)("div",{className:"jsx-ab04bff670607aaa absolute top-0 left-0 w-full h-full bg-border"}),(0,n.jsx)(s(),{id:"ab04bff670607aaa",children:"@-webkit-keyframes loading{0%{-webkit-transform:translatex(-100%);transform:translatex(-100%)}100%{-webkit-transform:translatex(100%);transform:translatex(100%)}}@-moz-keyframes loading{0%{-moz-transform:translatex(-100%);transform:translatex(-100%)}100%{-moz-transform:translatex(100%);transform:translatex(100%)}}@-o-keyframes loading{0%{-o-transform:translatex(-100%);transform:translatex(-100%)}100%{-o-transform:translatex(100%);transform:translatex(100%)}}@keyframes loading{0%{-webkit-transform:translatex(-100%);-moz-transform:translatex(-100%);-o-transform:translatex(-100%);transform:translatex(-100%)}100%{-webkit-transform:translatex(100%);-moz-transform:translatex(100%);-o-transform:translatex(100%);transform:translatex(100%)}}.animate-loading.jsx-ab04bff670607aaa{background:-webkit-linear-gradient(left,black 0%,rgba(0,0,0,.7)50%,black 100%);background:-moz-linear-gradient(left,black 0%,rgba(0,0,0,.7)50%,black 100%);background:-o-linear-gradient(left,black 0%,rgba(0,0,0,.7)50%,black 100%);background:linear-gradient(90deg,black 0%,rgba(0,0,0,.7)50%,black 100%);-webkit-animation:loading 1.5s infinite;-moz-animation:loading 1.5s infinite;-o-animation:loading 1.5s infinite;animation:loading 1.5s infinite}"})]})}var c=a(25195),d=a(63677),u=(a(44058),a(64923),a(10296));let x=l.forwardRef((e,t)=>{let{...a}=e;return(0,n.jsx)("nav",{ref:t,"aria-label":"breadcrumb",...a})});x.displayName="Breadcrumb";let h=l.forwardRef((e,t)=>{let{className:a,...r}=e;return(0,n.jsx)("ol",{ref:t,className:(0,u.cn)("flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5",a),...r})});h.displayName="BreadcrumbList";let m=l.forwardRef((e,t)=>{let{className:a,...r}=e;return(0,n.jsx)("li",{ref:t,className:(0,u.cn)("inline-flex items-center gap-1.5",a),...r})});m.displayName="BreadcrumbItem";let f=l.forwardRef((e,t)=>{let{asChild:a,className:r,...s}=e,l=a?d.g7:"a";return(0,n.jsx)(l,{ref:t,className:(0,u.cn)("transition-colors hover:text-foreground",r),...s})});function p(e){return(0,n.jsx)(x,{className:"text-muted max-w-full overflow-hidden",children:(0,n.jsx)(h,{className:"gap-x-1.5 sm:gap-x-1.5 gap-y-0.5 sm:gap-y-0.5",children:e.path.map((t,a)=>(0,n.jsxs)(l.Fragment,{children:[0!=a&&(0,n.jsx)("div",{children:"/"}),(0,n.jsx)(m,{children:(0,n.jsx)(f,{className:"cursor-pointer",onClick:()=>{var n;return null==e?void 0:null===(n=e.onClick)||void 0===n?void 0:n.call(e,t,a)},children:t})},a)]},a))})})}function j(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return t?""===e.trim():""===e}function v(e){let[t,a]=(0,l.useState)(e.text),[r,s]=(0,l.useState)(j(e.text)),i=(0,l.useRef)(null),o=e.contentRef||i;(0,l.useEffect)(()=>{var t;e.text!==(null===(t=o.current)||void 0===t?void 0:t.innerText)&&(a(e.text),s(j(e.text)))},[e.text]);let c=e.placeholder||"Enter text",d=e.onlyShowPlaceholderIfFocused||!1,x=r&&(!d||e.focused);return(0,n.jsxs)("div",{className:(0,u.cn)("relative",e.className),children:[(0,n.jsx)("div",{ref:o,className:(0,u.cn)("outline-none w-fit min-w-20",e.className),style:{whiteSpace:"pre-wrap"},contentEditable:!!e.onTextChange,suppressContentEditableWarning:!0,onFocus:e.onFocused,onInput:t=>{var a;let n=(a=t.currentTarget.innerText).endsWith("\n")?a.slice(0,-1):a;s(j(n)),e.onTextChange&&e.onTextChange(n)},children:t}),x&&(0,n.jsx)("span",{className:"text-muted-foreground absolute top-0 left-0 pointer-events-none opacity-50",children:c})]})}function g(e){let{title:t,path:a,actionButtons:r,state:s={state:"not-started"},subtitle:l,onPathClick:i,onTitleChange:d,onSubtitleChange:u}=e;return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)("div",{className:"flex flex-row items-center justify-between w-full h-[48px] pl-4 pr-2",children:[(0,n.jsxs)("div",{className:"flex flex-row items-center flex-1 gap-4",children:[(0,n.jsx)(c.H5,{className:"text-primary overflow-hidden text-ellipsis whitespace-nowrap max-w-[60%]",children:(0,n.jsx)(v,{text:t,onTextChange:d})}),(0,n.jsx)(p,{path:a,onClick:i}),l&&(0,n.jsx)(v,{text:l,onTextChange:u})]}),(0,n.jsx)("div",{className:"flex flex-row items-center space-x-2 justify-end h-full pt-2 pb-2",children:r})]}),(0,n.jsx)(o,{state:s})]})}f.displayName="BreadcrumbLink",l.forwardRef((e,t)=>{let{className:a,...r}=e;return(0,n.jsx)("span",{ref:t,role:"link","aria-disabled":"true","aria-current":"page",className:(0,u.cn)("font-normal text-foreground",a),...r})}).displayName="BreadcrumbPage"},57666:function(e,t,a){"use strict";a.d(t,{X:function(){return x},Z:function(){return f}});var n=a(46499),r=a(68886),s=a(10331),l=a(76731),i=a(72369),o=a(38813);async function c(e,t,a,n){let r=(0,i.U8)(a);n(r);let s=await (0,i.Pw)(r,t);n(await (0,i.BN)(s))}function d(e){function t(t,a){return c(t,a,e.relation,e.onRelationUpdate)}return(0,n.jsx)(l.d,{embedded:!0,relationState:e.relation,updateRelationDataWithParams:t,updateRelationBaseQuery:function(t,a){e.onRelationUpdate({...e.relation,query:{...e.relation.query,baseQuery:a}})},updateRelationViewState:function(a,n){let r=(0,o.I8)(e.relation.viewState);(0,o.Z_)(r,n),e.onRelationUpdate({...e.relation,viewState:r}),n.selectedView&&t(a,{...e.relation.query.viewParameters,type:n.selectedView})}})}var u=a(24715);let x="relation",h='<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-sheet icon-smaller"><rect width="18" height="18" x="3" y="3" rx="2" ry="2"/><line x1="3" x2="21" y1="9" y2="9"/><line x1="3" x2="21" y1="15" y2="15"/><line x1="9" x2="9" y1="9" y2="21"/><line x1="15" x2="15" y1="9" y2="21"/></svg>';function m(e){let{initialData:t,onDataChange:a}=e,[r,l]=(0,s.useState)(t);return(0,s.useEffect)(()=>{l(t)},[t]),(0,n.jsx)(d,{onRelationUpdate:function(e){l(e),a(e)},relation:r})}class f{static get isReadOnlySupported(){return!0}static get toolbox(){return{title:"Data View",icon:h}}static isRelationBlockData(e){return e&&"object"==typeof e&&"viewState"in e}render(){return this.wrapper||(this.wrapper=document.createElement("div"),this.wrapper.style.backgroundColor="inherit",this.reactRoot=(0,r.createRoot)(this.wrapper)),this.reactRoot.render((0,n.jsx)(m,{initialData:this.data,onDataChange:e=>{this.data=e}})),this.wrapper}setShowCodeFence(e){this.data={...this.data,viewState:{...this.data.viewState,codeFenceState:{...this.data.viewState.codeFenceState,show:e}}},this.render()}async setViewType(e){this.data={...this.data,viewState:{...this.data.viewState,selectedView:e}};let t={...this.data.query.viewParameters,type:e};await c(this.data.id,t,this.data,e=>{this.data=e,this.render()})}showChartSettings(e){this.data={...this.data,viewState:{...this.data.viewState,chartState:{...this.data.viewState.chartState,view:{...this.data.viewState.chartState.view,showConfig:e}}}},this.render()}renderSettings(){let e=this.data.viewState.codeFenceState.show,t=this.data.viewState.chartState.view.showConfig,a=this.data.viewState.selectedView;return[{title:e?"Hide Code":"Show Code",closeOnActivate:!0,icon:e?'<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-eye-closed icon-smaller"><path d="m15 18-.722-3.25"/><path d="M2 8a10.645 10.645 0 0 0 20 0"/><path d="m20 15-1.726-2.05"/><path d="m4 15 1.726-2.05"/><path d="m9 18 .722-3.25"/></svg>':'<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-eye icon-smaller"><path d="M2.062 12.348a1 1 0 0 1 0-.696 10.75 10.75 0 0 1 19.876 0 1 1 0 0 1 0 .696 10.75 10.75 0 0 1-19.876 0"/><circle cx="12" cy="12" r="3"/></svg>',onActivate:()=>{this.setShowCodeFence(!e)}},...[{type:"table",label:"View as Table",icon:h},{type:"chart",label:"View as Chart",icon:'<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-chart-spline icon-smaller"><path d="M3 3v16a2 2 0 0 0 2 2h16"/><path d="M7 16c.5-2 1.5-7 4-7 2 0 2 3 4 3 2.5 0 4.5-5 5-7"/></svg>'}].filter(e=>e.type!==a).map(e=>({title:e.label,icon:e.icon,closeOnActivate:!0,onActivate:()=>{this.setViewType(e.type)}})),..."chart"===a?[{title:t?"Hide Chart Settings":"Show Chart Settings",icon:t?'<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-captions-off icon-smaller"><path d="M10.5 5H19a2 2 0 0 1 2 2v8.5"/><path d="M17 11h-.5"/><path d="M19 19H5a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2"/><path d="m2 2 20 20"/><path d="M7 11h4"/><path d="M7 15h2.5"/></svg>':'<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-captions icon-smaller"><rect width="18" height="14" x="3" y="5" rx="2" ry="2"/><path d="M7 15h4M15 15h2M7 11h2M13 11h4"/></svg>',closeOnActivate:!0,onActivate:()=>{this.showChartSettings(!t)}}]:[]]}save(){return this.data}destroy(){this.reactRoot&&this.reactRoot.unmount()}constructor({data:e,api:t,readOnly:a}){this.wrapper=null,this.reactRoot=null,this.api=t,this.readOnly=!!a,f.isRelationBlockData(e)?this.data=e:this.data=(0,u.$)()}}},47916:function(e,t,a){"use strict";a.d(t,{s:function(){return u}});var n=a(46499),r=a(49334),s=a(52537),l=a(33056),i=a(67835),o=a(83041),c=a(49393),d=a(26021);function u(e){let{type:t,size:a}=e,u=a||16;switch(t){case"Integer":case"Float":return(0,n.jsx)(r.Z,{size:u});case"String":return(0,n.jsx)(s.Z,{size:u});case"Boolean":return(0,n.jsx)(l.Z,{size:u});case"Timestamp":return(0,n.jsx)(i.Z,{size:u});case"List":return(0,n.jsx)(o.Z,{size:u});case"Map":case"Struct":return(0,n.jsx)(c.Z,{size:u});default:return console.warn("Unknown column type: ".concat(t)),(0,n.jsx)(d.Z,{size:u})}}a(10331)},76731:function(e,t,a){"use strict";a.d(t,{d:function(){return z}});var n=a(46499),r=a(62260),s=a(40440),l=a(10331),i=a(98042),o=a(17322),c=a(98511);let d=e=>"running"===e.executionState.state?(0,n.jsxs)("div",{className:"flex flex-row items-center h-6",children:[(0,n.jsx)("div",{className:"w-[62px] flex flex-row items-center gap-2 justify-center",children:(0,n.jsx)(o.Z,{size:18,className:"animate-spin"})}),(0,n.jsx)("span",{className:"text-sm",children:e.runText})]}):(0,n.jsxs)("div",{className:"flex flex-row items-center h-6",children:[(0,n.jsx)("div",{className:"w-[62px] flex flex-row items-center gap-2 justify-center text-green-600 hover:text-green-800",children:(0,n.jsx)(c.Z,{size:18})}),(0,n.jsx)("span",{className:"text-sm",children:e.runText})]});function u(e){return(0,n.jsxs)("div",{children:[e.showCopyButton&&(0,n.jsx)("div",{className:"absolute top-4 right-4",children:(0,n.jsx)(i.q,{textToCopy:e.copyCode,size:18})}),e.showRunButton&&(0,n.jsx)("button",{onClick:e.onRun,disabled:void 0==e.onRun,className:"absolute top-4 right-14 hover:text-black text-gray-900",children:d(e)})]})}var x=a(20665),h=a(11467),m=a(77740);function f(e){return(0,n.jsx)(n.Fragment,{children:(0,n.jsxs)("div",{className:"flex h-10 flex-row w-full gap-3 items-center border-b border-border pr-4 py-2",children:[e.showRunButton&&(0,n.jsx)("button",{onClick:e.onRun,disabled:void 0==e.onRun,className:"hover:text-primary text-muted-foreground",children:d(e)}),(0,n.jsx)("div",{className:"flex-1"}),e.showLayoutButton&&("row"==e.currentLayout?(0,n.jsx)("button",{className:"hover:text-primary text-muted-foreground",onClick:()=>{var t;return null===(t=e.onLayoutChange)||void 0===t?void 0:t.call(e,"column")},children:(0,n.jsx)(h.Z,{size:18})}):(0,n.jsx)("button",{className:"hover:text-primary text-muted-foreground",onClick:()=>{var t;return null===(t=e.onLayoutChange)||void 0===t?void 0:t.call(e,"row")},children:(0,n.jsx)(m.Z,{size:18})})),e.showCopyButton&&(0,n.jsx)(i.q,{textToCopy:e.copyCode,size:17})]})})}var p=a(31259);a(59620);let j=(0,a(60981).F)(e=>({editorExists:!1,setEditorExists:t=>e({editorExists:t})}));var v=a(29321);function g(e){let{language:t,displayCode:a,copyCode:r,onRun:s,onCodeChange:i,rounded:o=!1,executionState:c={state:"success"},showLineNumbers:d=!1,showCopyButton:h=!1,showRunButton:m=!1,buttonPosition:g="overlay",runText:w="Run",readOnly:y=!1,height:b="auto",width:N="auto",alwaysConsumeMouseWheel:S=!1,showLayoutButton:C=!1,currentLayout:k="column",onLayoutChange:R}=e;r=r||a;let{resolvedTheme:z}=(0,p.F)(),[D,I]=l.useState(null),Z="dark"===z?"customThemeDark":"customTheme",F={base:"vs",inherit:!0,rules:[],colors:{"editor.background":"#00000000"}},E={base:"vs-dark",inherit:!0,rules:[],colors:{"editor.background":"#00000000"}};return(0,n.jsxs)("div",{className:"flex flex-col h-full w-full relative",children:["panel"===g&&(0,n.jsx)(f,{showLayoutButton:C,currentLayout:k,onLayoutChange:R,showCopyButton:h,copyCode:r,showRunButton:m,onRun:s,runText:w,executionState:c}),(0,n.jsx)(x.ZP,{height:b,width:N,language:"sql",value:a,options:{readOnly:y,minimap:{enabled:!1},lineHeight:20,lineNumbers:d?"on":"off",theme:Z,padding:{top:12,bottom:12},tabSize:2,scrollBeyondLastLine:!1,scrollbar:{alwaysConsumeMouseWheel:S,horizontalScrollbarSize:4,verticalScrollbarSize:4},renderLineHighlight:"none"},onChange:function(e){!y&&e&&i&&i(e)},onMount:function(e,t){t.editor.defineTheme("customTheme",F),t.editor.defineTheme("customThemeDark",E),t.editor.setTheme(Z),function(e,t){if(j.getState().editorExists)return;j.getState().setEditorExists(!0);let a={id:"run-code",label:"Run Code",contextMenuOrder:2,contextMenuGroupId:"1_modification",keybindings:[e.KeyMod.CtrlCmd|e.KeyCode.Enter],run:()=>{t&&t()}};e.editor.addEditorAction(a)}(t,s),t.languages.registerDocumentFormattingEditProvider("sql",{provideDocumentFormattingEdits(e,t){let a=(0,v.WU)(e.getValue());return[{range:e.getFullModelRange(),text:a}]}}),t.languages.registerDocumentRangeFormattingEditProvider("sql",{provideDocumentRangeFormattingEdits(e,t,a){let n=(0,v.WU)(e.getValueInRange(t));return[{range:t,text:n}]}}),I(e)}}),"overlay"===g&&(0,n.jsx)(u,{showCopyButton:h,copyCode:r,showRunButton:m,onRun:s,executionState:c,runText:w})]})}var w=a(72369),y=a(11764);function b(e){var t;let a=e.relationState.viewState.codeFenceState,r=e.relationState.query.baseQuery,l=e.relationState.executionState,i=e.relationState.id;async function o(){await e.updateRelationDataWithParams(i,(0,w.We)(e.relationState.query.viewParameters))}if(!a.show)return null;let c="running"==l.state?void 0:o,d=(0,y.kI)(r).length,u="running"==l.state?"Running...":"Run (".concat(d," Query").concat(d>1?"s":"",")"),x=null!==(t=e.embedded)&&void 0!==t&&t;return(0,n.jsx)("div",{className:"w-full h-full overflow-hidden",children:(0,n.jsx)(g,{alwaysConsumeMouseWheel:!x,buttonPosition:"panel",showLineNumbers:!0,height:"100%",runText:u,language:"sql",displayCode:r,showCopyButton:!0,showRunButton:!0,readOnly:!1,onCodeChange:function(t){e.updateRelationBaseQuery(i,t)},onRun:c,executionState:l,showLayoutButton:!x,currentLayout:a.layout,onLayoutChange:e=>{s.Rx.getState().updateRelationViewState(i,{codeFenceState:{layout:e}})}})})}var N=a(88767),S=a(85718),C=a(92323),k=a(24769);function R(e){var t,a;if((e.minWidth||e.maxWidth)&&"number"!=typeof e.width)throw Error("minWidth and maxWidth can only be set if width is a number");if((e.minHeight||e.maxHeight)&&"number"!=typeof e.height)throw Error("minHeight and maxHeight can only be set if height is a number");let r=(0,l.useRef)(null),[s,i]=(0,l.useState)("number"==typeof e.width?e.width:0),[o,c]=(0,l.useState)("number"==typeof e.height?e.height:0),[d,u]=(0,l.useState)(!0),[x,h]=(0,l.useState)(!0),m=e.resizableElements||["button"],f=null===(t=e.preventDefault)||void 0===t||t,p=null!==(a=e.grabZoneSize)&&void 0!==a?a:8,j=t=>{var a,n;if(f&&t.preventDefault(),!r.current)return;let s=r.current.getBoundingClientRect();if(e.allowResizeX&&d){let n=Math.max(e.minWidth||0,Math.min(e.maxWidth||1/0,t.clientX-s.left));i(n),null===(a=e.onWidthChange)||void 0===a||a.call(e,n)}if(e.allowResizeY&&x){let a=Math.max(e.minHeight||0,Math.min(e.maxHeight||1/0,t.clientY-s.top));c(a),null===(n=e.onHeightChange)||void 0===n||n.call(e,a)}},v=()=>{document.removeEventListener("mousemove",j),document.removeEventListener("mouseup",v)},g=(e,t)=>{switch(e.preventDefault(),t){case"barTop":case"barBottom":h(!0),u(!1);break;case"barLeft":case"barRight":h(!1),u(!0);break;case"button":h(!0),u(!0)}document.addEventListener("mousemove",j),document.addEventListener("mouseup",v)};return(0,n.jsxs)("div",{ref:r,className:"relative",style:{width:"full"===e.width?"100%":"auto"===e.width?"auto":s+"px",height:"full"===e.height?"100%":"auto"===e.height?"auto":o+"px"},children:[e.children,m.includes("button")&&(e.allowResizeX||e.allowResizeY)&&(0,n.jsx)("div",{onMouseDown:e=>g(e,"button"),className:"text-muted-foreground",style:{position:"absolute",right:p,bottom:p,cursor:"nwse-resize"},children:(0,n.jsx)(C.Z,{size:16})}),m.includes("barTop")&&e.allowResizeY&&(0,n.jsx)("div",{style:{position:"absolute",left:0,top:-p+2,width:"100%",height:2*p,cursor:"ns-resize"},className:"flex items-center justify-center",onMouseDown:e=>g(e,"barTop"),children:(0,n.jsx)(k.Z,{orientation:"horizontal"})}),m.includes("barBottom")&&e.allowResizeY&&(0,n.jsx)("div",{style:{position:"absolute",left:0,bottom:-p+2,width:"100%",height:2*p,cursor:"ns-resize"},className:"flex items-center justify-center",onMouseDown:e=>g(e,"barBottom"),children:(0,n.jsx)(k.Z,{orientation:"horizontal"})}),m.includes("barLeft")&&e.allowResizeX&&(0,n.jsx)("div",{style:{position:"absolute",left:-p+2,top:0,width:2*p,height:"100%",cursor:"ew-resize"},className:"flex items-center justify-center",onMouseDown:e=>g(e,"barLeft"),children:(0,n.jsx)(k.Z,{orientation:"vertical"})}),m.includes("barRight")&&e.allowResizeX&&(0,n.jsx)("div",{style:{position:"absolute",right:-p+2,top:0,width:2*p,height:"100%",cursor:"ew-resize"},className:"flex items-center justify-center",onMouseDown:e=>g(e,"barRight"),children:(0,n.jsx)(k.Z,{orientation:"vertical"})})]})}function z(e){var t;let a=e.relationState.executionState,s=e.relationState.viewState.codeFenceState,i=e.relationState.id,[o,c]=(0,l.useState)(!1),[d,u]=(0,l.useState)(192);(0,l.useEffect)(()=>{let e;return"running"===a.state?e=setTimeout(()=>c(!0),S.rl):c(!1),()=>clearTimeout(e)},[a.state]);let x=s.show?100*s.sizePercentage:0,h=s.show,m=null!==(t=e.embedded)&&void 0!==t&&t;return(0,n.jsxs)(n.Fragment,{children:[!m&&(0,n.jsxs)(r.e,{child1Active:h,child2Active:!0,ratio:x/100,onChange:t=>{e.updateRelationViewState(i,{codeFenceState:{...s,sizePercentage:t}})},layout:s.layout,children:[(0,n.jsx)(b,{...e,embedded:e.embedded}),(0,n.jsx)(N.vs,{...e})]}),m&&(0,n.jsxs)("div",{className:"w-full h-fit bg-inherit flex flex-col",children:[h&&(0,n.jsx)(R,{width:"full",height:d,onHeightChange:u,allowResizeY:!0,allowResizeX:!0,resizableElements:["barBottom"],children:(0,n.jsx)(b,{...e,embedded:e.embedded})}),(0,n.jsx)(N.vs,{...e})]}),o&&(0,n.jsx)("div",{className:"absolute top-0 left-0 w-full h-full z-50 flex items-center justify-center bg-background transition-opacity duration-200",style:{opacity:.8},children:"Loading..."})]})}},88767:function(e,t,a){"use strict";a.d(t,{vs:function(){return al},GA:function(){return as}});var n=a(46499),r=a(74896),s=a.n(r),l=a(10331),i=a(98042),o=a(55111);let c=e=>{let{json:t,className:a}=e;return(0,n.jsx)("div",{className:"w-full ".concat(a),children:Object.entries(t).map(e=>{let[t,a]=e;return(0,n.jsxs)("div",{className:"flex pb-1",children:[(0,n.jsxs)("div",{className:"text-sm text-muted-foreground",children:[t,":"]}),(0,n.jsx)("p",{className:"text-sm w-full pl-2 overflow-auto",children:null==a?void 0:a.toString()})]},t)})})},d=e=>"object"==typeof e&&null!==e;function u(e){return(0,n.jsx)(x,{...e,isLast:!0,depth:0,index:0})}function x(e){let{json:t,className:a="",depth:r=0}=e,[s,i]=(0,l.useState)(!0),o=()=>i(!s);if(s&&(Array.isArray(t)||d(t))){Array.isArray(t);let a=JSON.stringify(t);return e.isLast||(a+=","),(0,n.jsx)("div",{className:"w-full cursor-pointer",children:(0,n.jsxs)("div",{onClick:o,children:[e.json_key?'"'+e.json_key+'": ':"",a]})})}let c="bg-gray-"+r%9*100;if(c="",Array.isArray(t))return(0,n.jsx)("div",{className:"w-full ".concat(a," ").concat(c),children:(0,n.jsx)(h,{depth:r,index:e.index,onSeparatorClick:o,json_key:e.json_key,value:t,isLast:e.isLast,children:t.map((e,a)=>(0,n.jsx)(x,{json:e,depth:r+1,index:a,isLast:a===t.length-1}))})});if(d(t)){let s=Object.keys(t);return(0,n.jsx)(h,{depth:r,index:e.index,onSeparatorClick:o,json_key:e.json_key,value:t,isLast:e.isLast,children:(0,n.jsx)("div",{className:"w-full ".concat(a," ").concat(c),children:s.map((e,a)=>{let l=t[e];return(0,n.jsx)(x,{json_key:e,json:l,index:a,depth:r+1,isLast:a===s.length-1},e)})})})}return(0,n.jsx)(h,{depth:r,index:e.index,json_key:e.json_key,value:t,isLast:e.isLast,children:JSON.stringify(t)})}function h(e){let{json_key:t,value:a,children:r,isLast:s=!1}=e,l=!s,i=t?'"'+t+'": ':"",o="group/".concat(e.depth,"-").concat(e.index),c=o+"-hover:text-red-500";return Array.isArray(a)?(0,n.jsxs)("div",{className:"".concat(o),children:[(0,n.jsx)("div",{onClick:e.onSeparatorClick,className:"cursor-pointer",children:i}),(0,n.jsx)("span",{className:c,children:"["}),(0,n.jsx)("div",{className:"pl-4",children:r}),(0,n.jsx)("span",{className:c,children:"]"}),(0,n.jsx)("span",{children:l&&","})]}):d(a)?(0,n.jsxs)("div",{children:[(0,n.jsxs)("div",{onClick:e.onSeparatorClick,className:"cursor-pointer",children:[i,"{"]}),(0,n.jsx)("div",{className:"pl-4",children:r}),(0,n.jsxs)("div",{children:["}",l&&","," "]})]}):(0,n.jsxs)("div",{children:[i,r,l&&","]})}function m(e){var t;let{tableState:a,column:r,element:s}=e,l=null!==(t=a.columnStates[r.name])&&void 0!==t?t:o.y4;l.wrapContent;let c=l.width+"px",d=null==s?"NULL":"object"==typeof s?JSON.stringify(s):s.toString();return(0,n.jsx)("td",{className:"px-4 py-1 group",style:{width:c,overflow:"hidden",whiteSpace:"nowrap",textOverflow:"ellipsis"},title:d,children:(0,n.jsxs)("div",{className:"flex items-center justify-between group-hover:overflow-hidden",children:[(0,n.jsx)("span",{className:"truncate",style:{whiteSpace:"nowrap",overflow:"hidden",textOverflow:"ellipsis"},children:(0,n.jsx)(f,{column:r,element:s,stringElement:d})}),(0,n.jsx)(i.q,{className:"hidden group-hover:block",size:14,textToCopy:d})]})})}function f(e){let{column:t,element:a,stringElement:r}=e;return null==a?(0,n.jsx)("span",{children:"NULL"}):"List"===t.type||"Map"===t.type||"Struct"===t.type?(0,n.jsx)(u,{json:a}):(0,n.jsx)("span",{children:r})}function p(e){let t=e.row,a=e.offset;return(0,n.jsxs)("tr",{className:"".concat(s().className," bg-inherit hover:bg-muted"),style:{boxShadow:"inset 0 -1px 0 0 rgba(0, 0, 0, 0.05)"},children:[(0,n.jsx)("td",{className:"sticky left-0 z-[2] pl-4 bg-inherit text-muted-foreground text-right h-full",style:{boxShadow:"inset 0 -1px 0 0 rgba(0, 0, 0, 0.05)",overflow:"hidden",whiteSpace:"nowrap"},children:(0,n.jsxs)("div",{className:"flex items-center justify-between",children:[(0,n.jsx)("span",{className:"truncate",title:"".concat(a+e.rowIndex+1),children:a+e.rowIndex+1}),(0,n.jsx)("div",{className:"w-0.5 h-full absolute right-0 top-0 z-[3] border-r border-border"})]})}),e.columnViewIndices.map(a=>(0,n.jsx)(m,{tableState:e.tableState,element:t[a],column:e.columns[a]},a))]})}var j=a(42371),v=a(87609),g=a(91864),w=a(51285),y=a(72369),b=a(58694),N=a(47916);function S(e){var t;let{relationId:a,displayState:r,column:s,updateRelationViewState:i}=e,c=(0,l.useRef)(null),d=null!==(t=r.columnStates[s.name])&&void 0!==t?t:o.y4,u=(0,l.useRef)(d.width);function x(e){if(null!==c.current){let t=e.clientX-c.current,n={...r.columnStates};n[s.name]||(n[s.name]={...o.y4}),n[s.name].width=Math.max(u.current+t,50),i(a,{tableState:{...r,columnStates:n}})}}function h(){c.current=null,document.removeEventListener("mousemove",x),document.removeEventListener("mouseup",h)}return(0,n.jsx)("div",{onMouseDown:function(e){var t;e.preventDefault(),c.current=e.clientX,u.current=(null!==(t=r.columnStates[s.name])&&void 0!==t?t:o.y4).width,document.addEventListener("mousemove",x),document.addEventListener("mouseup",h)},className:"absolute right-0 top-0 h-full cursor-col-resize w-2 flex justify-center items-center",style:{marginRight:"4px"},children:(0,n.jsx)("div",{className:"h-3 w-1 border-l border-gray-700 dark:border-gray-700"})})}function C(e){var t;let{column:a}=e,r=e.relationState.viewState.tableState,s=(null!==(t=r.columnStates[a.name])&&void 0!==t?t:o.y4).width+"px",{listeners:l,setNodeRef:i}=(0,b.O1)({id:a.name}),{setNodeRef:c}=(0,b.Zj)({id:a.name}),d=e.relationState.query.viewParameters,u=d.table.sorting[e.column.name],x=!u,h=!u;return(0,n.jsxs)(R,{columnWidth:s,children:[(0,n.jsxs)("div",{ref:c,className:"w-full group flex items-center justify-between pr-6",children:[(0,n.jsxs)("div",{ref:i,onClick:function(){let t=(0,y.Ae)(u),{[e.column.name]:a,...n}=d.table.sorting||{},r={...d,table:{...d.table,sorting:{[e.column.name]:t,...n}}};e.updateRelationDataWithParams(e.relationState.id,r)},className:"flex items-center overflow-hidden cursor-pointer",style:{width:s},...l,children:[(0,n.jsx)("div",{style:{minWidth:"16px",display:"flex",alignItems:"center"},children:(0,n.jsx)(N.s,{type:a.type})}),(0,n.jsx)("div",{className:"ml-2 font-semibold truncate text-nowrap",title:a.name,children:a.name}),(0,n.jsx)("div",{className:"px-1 ".concat(x?"hidden group-hover:block opacity-0 group-hover:opacity-100 transition-opacity duration-200":""," h-4"),children:(0,n.jsx)("button",{className:h?"text-muted-foreground hover:text-primary":"text-primary",children:(0,n.jsx)(k,{sorting:u})})})]}),(0,n.jsx)(j.Z,{size:16,onClick:t=>{var n;return null===(n=e.onColumnMenuClick)||void 0===n?void 0:n.call(e,a,t)},className:"hidden group-hover:block text-muted-foreground hover:text-primary cursor-pointer"})]}),(0,n.jsx)(S,{relationId:e.relationState.id,displayState:r,column:a,updateRelationViewState:e.updateRelationViewState})]})}function k(e){let t=e.iconSize||16;return"ASC"===e.sorting?(0,n.jsx)(v.Z,{size:t}):"DESC"===e.sorting?(0,n.jsx)(g.Z,{size:t}):(0,n.jsx)(w.Z,{size:t})}function R(e){return(0,n.jsx)("th",{scope:"col",style:{width:e.columnWidth,overflow:"hidden"},className:"p-0 m-0 h-full",children:(0,n.jsx)("div",{className:"pl-4 border-b border-border flex items-center bg-inherit relative ",style:{width:"100%",height:"100%"},children:e.children})})}var z=a(86792),D=a(4908),I=a(37852),Z=a(11933),F=a(56944),E=a(10296),A=a(62534);function O(e){let{visible:t,className:a}=e;return t?(0,n.jsx)(I.Z,{className:a}):(0,n.jsx)(A.Z,{className:a})}function P(e){let t=[];e.relationState.data&&(t=e.relationState.data.columns.map(e=>e.name));let a=e.relationState.viewState.tableState,r=a.columnsHidden.includes(e.column.name);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(z.Ju,{className:"whitespace-nowrap w-[2rem] pr-2",children:['Column "',e.column.name,'"']}),(0,n.jsx)(z.VD,{}),(0,n.jsx)(z.Qk,{children:(0,n.jsxs)(z.Xi,{onClick:function(){navigator.clipboard.writeText(e.column.name)},children:[(0,n.jsx)(D.Z,{}),(0,n.jsx)("span",{children:"Copy Name"})]})}),(0,n.jsx)(z.VD,{}),(0,n.jsxs)(z.Qk,{children:[(0,n.jsxs)(z.Xi,{onClick:function(){let t=[...a.columnsHidden];t.push(e.column.name),e.updateRelationViewState(e.relationState.id,{tableState:{...a,columnsHidden:t}})},children:[(0,n.jsx)(O,{visible:r}),(0,n.jsx)("span",{children:r?"Show Column":"Hide Column"})]}),(0,n.jsxs)(z.Ph,{children:[(0,n.jsxs)(z.kt,{children:[(0,n.jsx)(I.Z,{className:"opacity-0"}),(0,n.jsx)("span",{children:"Hide other Columns"})]}),(0,n.jsx)(z.cq,{children:(0,n.jsx)(z.TG,{children:(0,n.jsxs)(F.mY,{children:[(0,n.jsx)(F.sZ,{placeholder:"Column Name"}),(0,n.jsxs)(F.e8,{children:[(0,n.jsx)(F.rb,{children:"No Column found."}),(0,n.jsxs)(F.fu,{children:[" ",t.map(t=>{let r=a.columnsHidden.includes(t);return(0,n.jsxs)(F.di,{value:t,onSelect:t=>(function(t,n){let r=[...a.columnsHidden];if(n)r.includes(t)||r.push(t);else{let e=r.indexOf(t);e>-1&&r.splice(e,1)}e.updateRelationViewState(e.relationState.id,{tableState:{...a,columnsHidden:r}})})(t,!r),children:[t,(0,n.jsx)(Z.Z,{className:(0,E.cn)("ml-auto",r?"opacity-0":"opacity-100")})]},t)})]})]})]})})})]})]})]})}function T(e){let t=e.relationState.data,[a,r]=l.useState(t.columns[0]),[s,i]=l.useState(!1),[o,c]=l.useState({x:0,y:0});return(0,n.jsxs)(z.h_,{open:s,onOpenChange:i,children:[(0,n.jsx)("thead",{className:"border-0 text-s text-primary bg-inherit sticky top-0 z-[3]",children:(0,n.jsxs)("tr",{className:"bg-inherit",children:[(0,n.jsx)("th",{scope:"col",className:"p-0 m-0 h-8 sticky left-0 z-20 bg-inherit w-20",children:(0,n.jsx)("div",{className:"w-full h-full bg-inherit absolute right-0 top-0 z-[3] border-r border-b border-border"})}),e.columnViewIndices.map(a=>(0,n.jsx)(z.$F,{asChild:!0,children:(0,n.jsx)(C,{...e,column:t.columns[a],onColumnMenuClick:(e,t)=>{r(e),i(!0),c({x:t.clientX,y:t.clientY})}})},a))]})}),s&&(0,n.jsx)(z.AW,{style:{position:"absolute",left:"calc(".concat(o.x,"px - 7rem)"),top:"".concat(o.y,"px"),width:"14rem"},children:(0,n.jsx)(P,{...e,column:a})})]})}function _(e){let t=e.relationState.data,a=e.columnViewIndices,r=e.embedded?"mr-0":"mr-32";return(0,n.jsxs)("table",{className:(0,E.cn)("text-sm bg-inherit text-left rtl:text-right text-muted-foreground w-fit h-fit mr-32",r),style:{tableLayout:"fixed",borderCollapse:"collapse"},children:[(0,n.jsx)(T,{...e}),(0,n.jsx)("tbody",{className:"bg-inherit",children:t.rows.map((r,s)=>{var l;return(0,n.jsx)(p,{tableState:e.relationState.viewState.tableState,rowIndex:s,row:r,columns:t.columns,offset:(null===(l=e.relationState.lastExecutionMetaData)||void 0===l?void 0:l.lastResultOffset)||0,columnViewIndices:a},s)})})]})}var L=a(72914),B=a(91835),V=a(44058),M=a(21600),W=a(24975);function X(e){return e.toString().replace(/\B(?=(\d{3})+(?!\d))/g,",")}function q(e){var t;let a=(null===(t=e.relationState.lastExecutionMetaData)||void 0===t?void 0:t.lastResultCount)||0,r=e.relationState.query.viewParameters.table.offset+1,s=Math.min(e.relationState.query.viewParameters.table.offset+e.relationState.query.viewParameters.table.limit,a),l="".concat(X(r)," to ").concat(X(s)," of ").concat(X(a));return(0,n.jsxs)("div",{className:"flex h-8 flex-row items-center p-2 border-t border-border text-sm text-primary space-x-4",children:[(0,n.jsx)("div",{className:"flex flex-row items-center space-x-4",children:(0,n.jsx)(Y,{...e})}),(0,n.jsx)("div",{className:"flex-grow"}),(0,n.jsx)("div",{className:"pr-2",children:l})]})}function Y(e){var t;let{relationState:a}=e,r=null===(t=a.lastExecutionMetaData)||void 0===t?void 0:t.lastResultCount;if(!r)return null;let s=Math.floor(a.query.viewParameters.table.offset/a.query.viewParameters.table.limit),l=Math.floor((r-1)/a.query.viewParameters.table.limit),i="Page ".concat(X(s+1)," of ").concat(X(l+1)),o=0===s,c=s===l,d=t=>{let n=t*a.query.viewParameters.table.limit,r=a.query.viewParameters,s={...r,table:{...r.table,offset:n}};e.updateRelationDataWithParams(a.id,s)},u=a.query.viewParameters.table.limit,x=[10,20,50,100,200];x.includes(u)||x.push(u);let h=x.map(e=>({value:e.toString(),label:"Show ".concat(e)}));return(0,n.jsxs)("div",{className:"flex flex-row items-center space-x-1 text-primary font-normal",children:[(0,n.jsxs)(W.Ph,{onValueChange:function(t){let n=parseInt(t),r=a.query.viewParameters,s={...r,table:{...r.table,limit:n,offset:0}};e.updateRelationDataWithParams(a.id,s)},defaultValue:u.toString(),children:[(0,n.jsx)(W.i4,{className:"text-primary border-0 focus:outline-none w-32 h-6 font-normal shadow-none",children:(0,n.jsx)(W.ki,{placeholder:"Select a size"})}),(0,n.jsx)(W.Bw,{children:(0,n.jsx)(W.DI,{children:h.map(e=>(0,n.jsx)(W.Ql,{value:e.value,className:"h-8 font-normal",children:(0,n.jsx)(W.n5,{className:"font-normal",children:e.label})},e.value))})})]}),(0,n.jsx)("button",{className:"transition-all rounded ".concat(o?"opacity-50 cursor-not-allowed text-muted-foreground":"hover:bg-muted active:bg-muted-foreground"),onClick:()=>d(0),disabled:o,children:(0,n.jsx)(L.Z,{size:16})}),(0,n.jsx)("button",{className:"transition-all rounded ".concat(o?"opacity-50 cursor-not-allowed":"hover:bg-muted active:bg-muted-foreground"),onClick:()=>d(Math.max(0,s-1)),disabled:o,children:(0,n.jsx)(B.Z,{size:16})}),(0,n.jsx)("div",{children:i}),(0,n.jsx)("button",{className:"transition-all rounded ".concat(c?"opacity-50 cursor-not-allowed":"hover:bg-muted active:bg-muted-foreground"),onClick:()=>d(Math.min(l,s+1)),disabled:c,children:(0,n.jsx)(V.Z,{size:16})}),(0,n.jsx)("button",{className:"transition-all rounded ".concat(c?"opacity-50 cursor-not-allowed":"hover:bg-muted active:bg-muted-foreground"),onClick:()=>d(l),disabled:c,children:(0,n.jsx)(M.Z,{size:16})})]})}var H=a(43934);function Q(e){let{activeId:t}=e;return(0,n.jsx)(b.y9,{children:t?(0,n.jsxs)("div",{className:"flex items-center overflow-hidden z-10 p-1 pl-2 pr-2 rounded-s border border-gray-300 dark:border-gray-700 bg-white bg-opacity-90 dark:bg-black w-fit ",children:[(0,n.jsx)("div",{style:{minWidth:"16px",display:"flex",alignItems:"center"},children:(0,n.jsx)(H.Z,{size:16})}),(0,n.jsx)("span",{className:"ml-2 font-semibold text-gray-700 dark:bg-black dark:text-gray-400",title:t.toString(),style:{fontSize:"14px"},children:t})]}):null})}function U(e){var t;let a=e.relationState.data,r=e.relationState.viewState.tableState.columnsOrder,[s,i]=(0,l.useState)([]),[c,d]=(0,l.useState)(null),u=(0,b.Dy)((0,b.VT)(b.we,{activationConstraint:{distance:5}}));if(!a)return null;function x(t){e.updateRelationViewState(e.relationState.id,{tableState:t})}let h=(0,o.c7)(e.relationState.viewState.tableState,a),m=null!==(t=e.embedded)&&void 0!==t&&t;return(0,n.jsxs)(b.LB,{sensors:u,onDragStart:function(e){d(e.active.id),i(r)},onDragEnd:function(e){d(null)},onDragOver:function(t){let a=t.over;if(!a)return;let n=a.id;if(c===n)x({...e.relationState.viewState.tableState,columnsOrder:s});else{let t=s.indexOf(n),a=s.indexOf(c),r=[...s];r.splice(a,1),r.splice(t,0,c),x({...e.relationState.viewState.tableState,columnsOrder:r})}},children:[(0,n.jsxs)("div",{className:(0,E.cn)("flex bg-inherit flex-col w-full overflow-hidden",m?"h-fit max-h-96":"h-full"),children:[(0,n.jsx)("div",{className:(0,E.cn)("bg-inherit flex flex-row",m?"overflow-y-auto":"flex-1 overflow-y-auto "),children:(0,n.jsx)(_,{...e,columnViewIndices:h})}),(0,n.jsx)(q,{...e})]}),(0,n.jsx)(Q,{activeId:c})]})}var G=a(62260),K=a(25195),$=a(24769),J=a(39890),ee=a(76275);let et=(0,a(96579).j)("text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"),ea=l.forwardRef((e,t)=>{let{className:a,...r}=e;return(0,n.jsx)(ee.f,{ref:t,className:(0,E.cn)(et(),a),...r})});ea.displayName=ee.f.displayName;var en=a(97052);let er=en.fC,es=en.xz;en.ee;let el=l.forwardRef((e,t)=>{let{className:a,align:r="center",sideOffset:s=4,...l}=e;return(0,n.jsx)(en.h_,{children:(0,n.jsx)(en.VY,{ref:t,align:r,sideOffset:s,className:(0,E.cn)("z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",a),...l})})});el.displayName=en.VY.displayName;var ei=a(69808),eo=a(92157),ec=a(21154),ed=a(56399),eu=a(733),ex=a(46706),eh=a(85129),em=a(10268);function ef(e){let[t,a]=l.useState(!1);return(0,n.jsxs)(er,{open:t,onOpenChange:a,children:[(0,n.jsx)(es,{asChild:!0,children:(0,n.jsxs)(ei.z,{variant:"outline",role:"combobox","aria-expanded":t,className:"w-full justify-between",children:[(0,n.jsxs)("div",{className:"flex-1 flex items-center gap-2",children:[(0,n.jsx)(ej,{type:e.type}),(0,n.jsx)(ep,{type:e.type})]}),(0,n.jsx)(g.Z,{})]})}),(0,n.jsx)(el,{className:"w-[200px] p-0",children:(0,n.jsxs)(F.mY,{children:[(0,n.jsx)(F.sZ,{}),(0,n.jsxs)(F.e8,{children:[(0,n.jsx)(F.rb,{children:"No Chart Found"}),(0,n.jsx)(F.fu,{children:em.$8.map(t=>(0,n.jsxs)(F.di,{value:t,onSelect:t=>{e.onPlotTypeChange(t),a(!1)},children:[(0,n.jsxs)("div",{className:"flex items-center gap-2",children:[(0,n.jsx)(ej,{type:t}),(0,n.jsx)(ep,{type:t})]}),(0,n.jsx)(Z.Z,{className:(0,E.cn)("ml-auto",e.type===t?"opacity-100":"opacity-0")})]},t))})]})]})})]})}function ep(e){switch(e.type){case"line":return"Line";case"bar":return"Bar";case"area":return"Area";case"scatter":return"Scatter";case"pie":return"Pie";case"radar":return"Radar"}}function ej(e){switch(e.type){case"line":return(0,n.jsx)(eo.Z,{});case"bar":return(0,n.jsx)(ec.Z,{});case"area":return(0,n.jsx)(ed.Z,{});case"scatter":return(0,n.jsx)(eu.Z,{});case"pie":return(0,n.jsx)(ex.Z,{});case"radar":return(0,n.jsx)(eh.Z,{})}}var ev=a(22290),eg=a(78595),ew=a(43896),ey=a(24565),eb=a(86247),eN=a(6753),eS=a(85718),eC=a(32603);let ek=l.forwardRef((e,t)=>{let{className:a,...r}=e;return(0,n.jsx)(eC.fC,{className:(0,E.cn)("peer inline-flex h-5 w-9 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent shadow-sm transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input",a),...r,ref:t,children:(0,n.jsx)(eC.bU,{className:(0,E.cn)("pointer-events-none block h-4 w-4 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-4 data-[state=unchecked]:translate-x-0")})})});function eR(e){let{color:t,setColor:a}=e;return(0,n.jsxs)(z.Ph,{children:[(0,n.jsx)(z.kt,{withArrow:!1,inset:!1,children:(0,n.jsxs)("div",{className:"flex items-center gap-2 justify-between w-full",children:[(0,n.jsx)(ea,{children:e.label}),(0,n.jsx)("div",{className:"inline-block bg-white rounded-sm shadow border border-muted-foreground cursor-pointer h-4 w-4",style:{background:t}})]})}),(0,n.jsx)(z.cq,{children:(0,n.jsx)(z.TG,{children:(0,n.jsx)(eN.xS,{styles:{default:{picker:{boxShadow:"none",border:"none"}}},disableAlpha:!0,color:t,onChange:a,presetColors:eS.QP})})})]})}function ez(e){let{decoration:t,setDecoration:a}=e;return(0,n.jsxs)(z.h_,{children:[(0,n.jsx)(z.$F,{children:(0,n.jsx)("div",{className:"inline-block bg-white rounded-sm shadow border border-gray-300 cursor-pointer h-4 w-4",style:{background:t.color}})}),(0,n.jsx)(z.AW,{className:"w-64 text-sm",children:(0,n.jsx)(eD,{...e})})]})}function eD(e){let{plotType:t}=e;switch(t){case"line":return(0,n.jsx)(eI,{...e});case"bar":return(0,n.jsx)(eZ,{...e});case"scatter":return(0,n.jsx)(eF,{...e});case"pie":return(0,n.jsx)(eE,{...e});case"radar":return(0,n.jsx)(eA,{...e});case"area":return(0,n.jsx)(eO,{...e});default:return null}}function eI(e){let{decoration:t,setDecoration:a}=e,r=t.line,s=e=>{a({...t,line:{...r,...e}})},l=e=>{a({...t,line:{...r,dots:{...r.dots,...e}}})};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(eR,{label:"Stroke Color",color:t.color,setColor:e=>{a({...t,color:e.hex})}}),(0,n.jsxs)(z.Xi,{className:"flex items-center justify-between w-full",onClick:e=>{e.stopPropagation(),e.preventDefault()},children:[(0,n.jsx)(ea,{children:"Stroke Width"}),(0,n.jsx)(J.I,{className:"max-w-[80px]",type:"number",value:r.strokeWidth,onChange:e=>s({strokeWidth:+e.target.value})})]}),(0,n.jsxs)(z.Xi,{className:"flex items-center justify-between w-full",onClick:e=>{e.stopPropagation(),e.preventDefault()},children:[(0,n.jsx)(ea,{children:"Stroke Dashes"}),(0,n.jsx)(J.I,{className:"max-w-[80px]",type:"text",value:r.strokeDasharray,onChange:e=>s({strokeDasharray:e.target.value}),placeholder:"5 5"})]}),(0,n.jsx)($.Z,{className:"my-2"}),(0,n.jsxs)(z.Xi,{className:"flex items-center justify-between w-full",onClick:e=>{e.stopPropagation(),e.preventDefault()},children:[(0,n.jsx)(ea,{children:"Show Dots"}),(0,n.jsx)(ek,{checked:r.dots.visible,onCheckedChange:e=>l({visible:e})})]}),r.dots.visible&&(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(z.Xi,{className:"flex items-center justify-between w-full",onClick:e=>{e.stopPropagation(),e.preventDefault()},children:[(0,n.jsx)(ea,{children:"Dot Radius"}),(0,n.jsx)(J.I,{className:"max-w-[80px]",type:"number",value:r.dots.radius,onChange:e=>l({radius:+e.target.value})})]}),(0,n.jsxs)(z.Xi,{className:"flex items-center justify-between w-full",onClick:e=>{e.stopPropagation(),e.preventDefault()},children:[(0,n.jsx)(ea,{children:"Dot Border Width"}),(0,n.jsx)(J.I,{className:"max-w-[80px]",type:"number",value:r.dots.borderWidth,onChange:e=>l({borderWidth:+e.target.value})})]}),(0,n.jsx)(eR,{label:"Dot Fill",color:r.dots.fill,setColor:e=>l({fill:e.hex})})]})]})}function eZ(e){let{decoration:t,setDecoration:a}=e,r=t.bar,s=e=>{a({...t,bar:{...r,...e}})},l=e=>{a({...t,bar:{...r,border:{...r.border,...e}}})};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(eR,{label:"Fill Color",color:t.color,setColor:e=>{a({...t,color:e.hex})}}),(0,n.jsxs)(z.Xi,{className:"flex items-center justify-between w-full",onClick:e=>{e.stopPropagation(),e.preventDefault()},children:[(0,n.jsx)(ea,{children:"Bar Width (px)"}),(0,n.jsx)(J.I,{className:"max-w-[80px]",type:"number",value:r.barWidth,onChange:e=>s({barWidth:+e.target.value})})]}),(0,n.jsxs)(z.Xi,{className:"flex items-center justify-between w-full",onClick:e=>{e.stopPropagation(),e.preventDefault()},children:[(0,n.jsx)(ea,{children:"Stacked"}),(0,n.jsx)(ek,{checked:r.stacked,onCheckedChange:e=>s({stacked:e})})]}),(0,n.jsxs)(z.Xi,{className:"flex items-center justify-between w-full",onClick:e=>{e.stopPropagation(),e.preventDefault()},children:[(0,n.jsx)(ea,{children:"Corner Radius"}),(0,n.jsx)(J.I,{className:"max-w-[80px]",type:"number",value:r.cornerRadius,onChange:e=>s({cornerRadius:+e.target.value})})]}),(0,n.jsxs)(z.Xi,{className:"flex items-center justify-between w-full",onClick:e=>{e.stopPropagation(),e.preventDefault()},children:[(0,n.jsx)(ea,{children:"Fill Opacity"}),(0,n.jsx)(J.I,{className:"max-w-[80px]",type:"number",step:"0.1",max:1,min:0,value:r.fillOpacity,onChange:e=>s({fillOpacity:+e.target.value})})]}),(0,n.jsx)($.Z,{className:"my-2"}),(0,n.jsxs)(z.Xi,{className:"flex items-center justify-between w-full",onClick:e=>{e.stopPropagation(),e.preventDefault()},children:[(0,n.jsx)(ea,{children:"Border Width"}),(0,n.jsx)(J.I,{className:"max-w-[80px]",type:"number",value:r.border.width,onChange:e=>l({width:+e.target.value})})]}),(0,n.jsx)(eR,{label:"Border Color",color:r.border.color,setColor:e=>l({color:e.hex})})]})}function eF(e){let{decoration:t,setDecoration:a}=e,r=t.scatter,s=e=>{a({...t,scatter:{...r,...e}})},l=e=>{a({...t,color:e.hex})},i=e=>{a({...t,scatter:{...r,stroke:{...r.stroke,...e}}})};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(eR,{label:"Fill Color",color:t.color,setColor:e=>l(e)}),(0,n.jsxs)(z.Xi,{className:"flex items-center justify-between w-full",onClick:e=>{e.stopPropagation(),e.preventDefault()},children:[(0,n.jsx)(ea,{children:"Shape"}),(0,n.jsxs)(W.Ph,{value:r.shape,onValueChange:e=>s({shape:e}),children:[(0,n.jsx)(W.i4,{className:"max-w-[120px]",children:(0,n.jsx)(W.ki,{placeholder:"Select shape"})}),(0,n.jsxs)(W.Bw,{children:[(0,n.jsx)(W.Ql,{value:"circle",children:"Circle"}),(0,n.jsx)(W.Ql,{value:"square",children:"Square"}),(0,n.jsx)(W.Ql,{value:"triangle",children:"Triangle"}),(0,n.jsx)(W.Ql,{value:"diamond",children:"Diamond"})]})]})]}),(0,n.jsxs)(z.Xi,{className:"flex items-center justify-between w-full",onClick:e=>{e.stopPropagation(),e.preventDefault()},children:[(0,n.jsx)(ea,{children:"Fill Opacity"}),(0,n.jsx)(J.I,{className:"max-w-[80px]",type:"number",step:"0.05",min:0,max:1,value:r.fillOpacity,onChange:e=>s({fillOpacity:+e.target.value})})]}),(0,n.jsx)($.Z,{className:"my-2"}),(0,n.jsxs)(z.Xi,{className:"flex items-center justify-between w-full",onClick:e=>{e.stopPropagation(),e.preventDefault()},children:[(0,n.jsx)(ea,{children:"Stroke Width"}),(0,n.jsx)(J.I,{className:"max-w-[80px]",type:"number",value:r.stroke.width,onChange:e=>i({width:+e.target.value})})]}),(0,n.jsx)(eR,{label:"Stroke Color",color:r.stroke.color,setColor:e=>i({color:e.hex})})]})}function eE(e){let{decoration:t,setDecoration:a}=e,r=t.pie,s=e=>{a({...t,pie:{...r,...e}})},l=e=>{a({...t,pie:{...r,label:{...r.label,...e}}})};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(z.Xi,{className:"flex items-center justify-between w-full",onClick:e=>{e.stopPropagation(),e.preventDefault()},children:[(0,n.jsx)(ea,{children:"Inner Radius"}),(0,n.jsx)(J.I,{className:"max-w-[80px]",type:"text",value:r.innerRadius.toString(),onChange:e=>s({innerRadius:e.target.value})})]}),(0,n.jsxs)(z.Xi,{className:"flex items-center justify-between w-full",onClick:e=>{e.stopPropagation(),e.preventDefault()},children:[(0,n.jsx)(ea,{children:"Pad Angle"}),(0,n.jsx)(J.I,{className:"max-w-[80px]",type:"number",value:r.padAngle,onChange:e=>s({padAngle:+e.target.value})})]}),(0,n.jsxs)(z.Xi,{className:"flex items-center justify-between w-full",onClick:e=>{e.stopPropagation(),e.preventDefault()},children:[(0,n.jsx)(ea,{children:"Corner Radius"}),(0,n.jsx)(J.I,{className:"max-w-[80px]",type:"number",value:r.cornerRadius,onChange:e=>s({cornerRadius:+e.target.value})})]}),(0,n.jsx)($.Z,{className:"my-2"}),(0,n.jsxs)(z.Xi,{className:"flex items-center justify-between w-full",onClick:e=>{e.stopPropagation(),e.preventDefault()},children:[(0,n.jsx)(ea,{children:"Show Labels"}),(0,n.jsx)(ek,{checked:r.showLabels,onCheckedChange:e=>s({showLabels:e})})]}),r.showLabels&&(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(eR,{label:"Label Color",color:r.label.color,setColor:e=>l({color:e.hex})}),(0,n.jsxs)(z.Xi,{className:"flex items-center justify-between w-full",onClick:e=>{e.stopPropagation(),e.preventDefault()},children:[(0,n.jsx)(ea,{children:"Font Size"}),(0,n.jsx)(J.I,{className:"max-w-[80px]",type:"number",value:r.label.fontSize,onChange:e=>l({fontSize:+e.target.value})})]}),(0,n.jsxs)(z.Xi,{className:"flex items-center justify-between w-full",onClick:e=>{e.stopPropagation(),e.preventDefault()},children:[(0,n.jsx)(ea,{children:"Font Family"}),(0,n.jsx)(J.I,{className:"max-w-[120px]",type:"text",value:r.label.fontFamily,onChange:e=>l({fontFamily:e.target.value})})]})]})]})}function eA(e){let{decoration:t,setDecoration:a}=e,r=t.radar,s=e=>{a({...t,radar:{...r,...e}})},l=e=>{a({...t,color:e.hex})};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(z.Xi,{className:"flex items-center justify-between w-full",onClick:e=>{e.stopPropagation(),e.preventDefault()},children:[(0,n.jsx)(ea,{children:"Stroke Width"}),(0,n.jsx)(J.I,{className:"max-w-[80px]",type:"number",value:r.strokeWidth,onChange:e=>s({strokeWidth:+e.target.value})})]}),(0,n.jsx)(eR,{label:"Border Color",color:t.color,setColor:e=>l(e)}),(0,n.jsx)($.Z,{className:"my-2"}),(0,n.jsx)(eR,{label:"Fill Color",color:r.fillColor,setColor:e=>s({fillColor:e.hex})}),(0,n.jsxs)(z.Xi,{className:"flex items-center justify-between w-full",onClick:e=>{e.stopPropagation(),e.preventDefault()},children:[(0,n.jsx)(ea,{children:"Fill Opacity"}),(0,n.jsx)(J.I,{className:"max-w-[80px]",type:"number",step:"0.1",min:0,max:1,value:r.fillOpacity,onChange:e=>s({fillOpacity:+e.target.value})})]}),(0,n.jsx)($.Z,{className:"my-2"}),(0,n.jsxs)(z.Xi,{className:"flex items-center justify-between w-full",onClick:e=>{e.stopPropagation(),e.preventDefault()},children:[(0,n.jsx)(ea,{children:"Show Dots"}),(0,n.jsx)(ek,{checked:r.showDots,onCheckedChange:e=>s({showDots:e})})]}),r.showDots&&(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(z.Xi,{className:"flex items-center justify-between w-full",onClick:e=>{e.stopPropagation(),e.preventDefault()},children:[(0,n.jsx)(ea,{children:"Dot Size"}),(0,n.jsx)(J.I,{className:"max-w-[80px]",type:"number",value:r.dotSize,onChange:e=>s({dotSize:+e.target.value})})]}),(0,n.jsxs)(z.Xi,{className:"flex items-center justify-between w-full",onClick:e=>{e.stopPropagation(),e.preventDefault()},children:[(0,n.jsx)(ea,{children:"Dot Border Width"}),(0,n.jsx)(J.I,{className:"max-w-[80px]",type:"number",value:r.dotBorderWidth,onChange:e=>s({dotBorderWidth:+e.target.value})})]}),(0,n.jsx)(eR,{label:"Dot Color",color:r.dotColor,setColor:e=>s({dotColor:e.hex})})]})]})}function eO(e){let{decoration:t,setDecoration:a}=e,r=t.area,s=e=>{a({...t,area:{...r,...e}})},l=e=>{a({...t,color:e.hex})},i=e=>{a({...t,area:{...r,stroke:{...r.stroke,...e}}})};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(z.Xi,{className:"flex items-center justify-between w-full",onClick:e=>{e.stopPropagation(),e.preventDefault()},children:[(0,n.jsx)(ea,{children:"Stroke Width"}),(0,n.jsx)(J.I,{className:"max-w-[80px]",type:"number",value:r.stroke.width,onChange:e=>i({width:+e.target.value})})]}),(0,n.jsxs)(z.Xi,{className:"flex items-center justify-between w-full",onClick:e=>{e.stopPropagation(),e.preventDefault()},children:[(0,n.jsx)(ea,{children:"Dasharray"}),(0,n.jsx)(J.I,{className:"max-w-[80px]",type:"text",value:r.stroke.dasharray,onChange:e=>i({dasharray:e.target.value})})]}),(0,n.jsx)(eR,{label:"Stroke Color",color:t.color,setColor:e=>l(e)}),(0,n.jsx)($.Z,{className:"my-2"}),(0,n.jsx)(eR,{label:"Fill Color",color:r.fillColor,setColor:e=>s({fillColor:e.hex})}),(0,n.jsxs)(z.Xi,{className:"flex items-center justify-between w-full",onClick:e=>{e.stopPropagation(),e.preventDefault()},children:[(0,n.jsx)(ea,{children:"Fill Opacity"}),(0,n.jsx)(J.I,{className:"max-w-[80px]",type:"number",step:"0.1",min:0,max:1,value:r.fillOpacity,onChange:e=>s({fillOpacity:+e.target.value})})]}),(0,n.jsx)($.Z,{className:"my-2"}),(0,n.jsxs)(z.Xi,{className:"flex items-center justify-between w-full",onClick:e=>{e.stopPropagation(),e.preventDefault()},children:[(0,n.jsx)(ea,{children:"Show Dots"}),(0,n.jsx)(ek,{checked:r.showDots,onCheckedChange:e=>s({showDots:e})})]}),r.showDots&&(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(z.Xi,{className:"flex items-center justify-between w-full",onClick:e=>{e.stopPropagation(),e.preventDefault()},children:[(0,n.jsx)(ea,{children:"Dot Size"}),(0,n.jsx)(J.I,{className:"max-w-[80px]",type:"number",value:r.dotSize,onChange:e=>s({dotSize:+e.target.value})})]}),(0,n.jsxs)(z.Xi,{className:"flex items-center justify-between w-full",onClick:e=>{e.stopPropagation(),e.preventDefault()},children:[(0,n.jsx)(ea,{children:"Dot Border Width"}),(0,n.jsx)(J.I,{className:"max-w-[80px]",type:"number",value:r.dotBorderWidth,onChange:e=>s({dotBorderWidth:+e.target.value})})]}),(0,n.jsx)(eR,{label:"Dot Color",color:r.dotColor,setColor:e=>s({dotColor:e.hex})})]})]})}ek.displayName=eC.fC.displayName;let eP="Select column...";function eT(e){var t,a;let{columns:r,axis:s,axisType:i,updateAxis:o,deleteAxis:c}=e,[d,u]=l.useState(!1),x=r.find(e=>e.id===(null==s?void 0:s.columnId));return(0,n.jsxs)("div",{className:"flex flex-row gap-2 items-center w-full justify-between",children:["y"===i&&(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)("div",{}),(0,n.jsx)(ez,{plotType:e.plotType,decoration:null!==(a=null==s?void 0:s.decoration)&&void 0!==a?a:(0,em.Ai)(),setDecoration:function(e){o({decoration:e})}})]}),(0,n.jsxs)(er,{open:d,onOpenChange:u,children:[(0,n.jsx)(es,{asChild:!0,children:(0,n.jsxs)(ei.z,{variant:"outline",role:"combobox","aria-expanded":d,className:"w-full justify-between",children:[(0,n.jsxs)("div",{className:"flex-1 flex items-center gap-2",children:[x&&(0,n.jsx)(N.s,{size:14,type:x.type},x.id),(0,n.jsx)("div",{children:(null==s?void 0:s.columnId)?null===(t=r.find(e=>e.id===s.columnId))||void 0===t?void 0:t.name:eP})]}),(0,n.jsxs)("div",{className:"flex items-center gap-2",children:[(0,n.jsx)(e_,{axis:i}),(0,n.jsx)(g.Z,{})]})]})}),(0,n.jsx)(el,{className:"w-[200px] p-0",children:(0,n.jsxs)(F.mY,{children:[(0,n.jsx)(F.sZ,{placeholder:eP}),(0,n.jsxs)(F.e8,{children:[(0,n.jsx)(F.rb,{children:"No Column found."}),(0,n.jsx)(F.fu,{children:r.map(e=>(0,n.jsxs)(F.di,{value:e.id,onSelect:e=>{o({columnId:e}),u(!1)},children:[(0,n.jsx)(N.s,{type:e.type},e.id),e.name,(0,n.jsx)(Z.Z,{className:(0,E.cn)("ml-auto",(null==s?void 0:s.columnId)===e.id?"opacity-100":"opacity-0")})]},e.id))})]}),c&&(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)($.Z,{}),(0,n.jsx)(F.fu,{children:(0,n.jsxs)(F.di,{onSelect:()=>{c(),u(!1)},children:[(0,n.jsx)(ev.Z,{}),(0,n.jsx)("span",{children:"Delete "})]})})]})]})})]})]})}function e_(e){let{axis:t}=e;switch(t){case"x":return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(eg.Z,{size:8,className:"text-indigo-600"}),(0,n.jsx)(K.rO,{children:"X-Axis"})]});case"y":return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(ew.Z,{size:8,className:"text-indigo-600"}),(0,n.jsx)(K.rO,{children:"Y-Axis"})]});case"pie-label":return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(ey.Z,{size:9,className:"text-indigo-600"}),(0,n.jsx)(K.rO,{children:"Label"})]});case"pie-radius":return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(eb.Z,{size:7,className:"text-indigo-600 pr-1"}),(0,n.jsx)(K.rO,{children:"Radius"})]});default:throw Error("Unsupported axis type: ".concat(t))}}var eL=a(98852);function eB(e){var t,a,r,s;let l=e.relationState.viewState.chartState,i=!l.chart.plot.cartesian.yAxes||0===l.chart.plot.cartesian.yAxes.length,o=e.relationState.id;function c(t,a){e.updateRelationViewState(o,{chartState:{chart:{plot:{cartesian:{[a]:t}}}}})}function d(t,a){var n;let r=null!==(n=l.chart.plot.cartesian.yAxes)&&void 0!==n?n:[];r.length<=t?r.push(a):r[t]={...r[t],...a},e.updateRelationViewState(o,{chartState:{chart:{plot:{cartesian:{yAxes:r}}}}})}let u=null!==(s=null===(a=e.relationState)||void 0===a?void 0:null===(t=a.data)||void 0===t?void 0:t.columns)&&void 0!==s?s:[];return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(ea,{className:"h-3",children:(0,n.jsx)(K.rO,{children:"Data"})}),(0,n.jsx)(eT,{plotType:l.chart.plot.type,axisType:"x",axis:l.chart.plot.cartesian.xAxis,columns:u,updateAxis:t=>{e.updateRelationViewState(o,{chartState:{chart:{plot:{cartesian:{xAxis:t}}}}})}}),null===(r=l.chart.plot.cartesian.yAxes)||void 0===r?void 0:r.map((t,a)=>(0,n.jsx)(eT,{plotType:l.chart.plot.type,axisType:"y",axis:t,deleteAxis:()=>(function(t){var a;let n=null!==(a=l.chart.plot.cartesian.yAxes)&&void 0!==a?a:[];n.splice(t,1),e.updateRelationViewState(o,{chartState:{chart:{plot:{cartesian:{yAxes:n}}}}})})(a),columns:u,updateAxis:e=>d(a,e)},a)),i&&(0,n.jsx)(eT,{plotType:l.chart.plot.type,axisType:"y",columns:u,updateAxis:e=>d(0,{decoration:(0,em.Ai)(),...e})}),(0,n.jsxs)("button",{onClick:()=>d(l.chart.plot.cartesian.yAxes.length,{decoration:{...(0,em.Ai)(),color:eS.QP[l.chart.plot.cartesian.yAxes.length%eS.QP.length]}}),className:"flex items-center gap-2 p-2 shrink-0",children:[(0,n.jsx)("div",{className:"w-4 h-4 mr-1 flex items-center justify-center",children:(0,n.jsx)(eL.Z,{size:16,className:"text-gray-500"})}),(0,n.jsx)(K.x4,{className:"text-gray-500",children:"Add Y-Axis"})]}),"radar"!==l.chart.plot.type&&(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)("div",{className:"pb-1",children:[(0,n.jsx)(K.H5,{children:"X-Axis"}),(0,n.jsx)($.Z,{})]}),(0,n.jsx)(J.I,{type:"text",id:"x-axis-label",placeholder:"Label",value:l.chart.plot.cartesian.xLabel,onChange:t=>{var a;return a=t.target.value,void e.updateRelationViewState(o,{chartState:{chart:{plot:{cartesian:{xLabel:a}}}}})}}),(0,n.jsx)(eV,{range:l.chart.plot.cartesian.xRange,updateRange:e=>c(e,"xRange")}),(0,n.jsxs)("div",{className:"pb-1",children:[(0,n.jsx)(K.H5,{children:"Y-Axis"}),(0,n.jsx)($.Z,{})]}),(0,n.jsx)(J.I,{type:"text",id:"y-axis-label",placeholder:"Label",value:l.chart.plot.cartesian.yLabel,onChange:t=>{var a;return a=t.target.value,void e.updateRelationViewState(o,{chartState:{chart:{plot:{cartesian:{yLabel:a}}}}})}}),(0,n.jsx)(eV,{range:l.chart.plot.cartesian.yRange,updateRange:e=>c(e,"yRange")})]})]})}function eV(e){var t,a;let r=e.range;function s(e){if(""!==e){let t=Number(e);return isNaN(t)?void 0:t}}return r||(r={}),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(ea,{className:"h-3",children:(0,n.jsx)(K.rO,{children:"Range"})}),(0,n.jsxs)("div",{className:"flex flex-row gap-2 items-center",children:[(0,n.jsx)(J.I,{type:"number",id:"x-axis-label",placeholder:"Auto",value:null!==(t=r.start)&&void 0!==t?t:"",onChange:t=>{var a;return a=t.target.value,void e.updateRange({...e.range,start:s(a)})}}),(0,n.jsx)("div",{className:"h-[1px] w-3 bg-muted-foreground"}),(0,n.jsx)(J.I,{type:"number",id:"x-axis-label",placeholder:"Auto",value:null!==(a=r.end)&&void 0!==a?a:"",onChange:t=>{var a;return a=t.target.value,void e.updateRange({...e.range,end:s(a)})}})]})]})}function eM(e){return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(ea,{children:(0,n.jsx)(K.rO,{children:"Data"})}),(0,n.jsx)(eW,{...e})]})}function eW(e){var t,a,r;let s=null!==(r=null===(a=e.relationState)||void 0===a?void 0:null===(t=a.data)||void 0===t?void 0:t.columns)&&void 0!==r?r:[],l=e.relationState.id,i=e.relationState.viewState.chartState;function o(t,a){console.log("updatePieAxisConfig",t,a),t.decoration||(t.decoration=(0,em.Ai)()),e.updateRelationViewState(l,{chartState:{chart:{plot:{pie:{axis:{[a]:t}}}}}})}return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(eT,{plotType:e.relationState.viewState.chartState.chart.plot.type,axisType:"pie-label",axis:i.chart.plot.pie.axis.label,columns:s,updateAxis:e=>o(e,"label")}),(0,n.jsx)(eT,{plotType:e.relationState.viewState.chartState.chart.plot.type,axisType:"pie-radius",axis:i.chart.plot.pie.axis.radius,columns:s,updateAxis:e=>o(e,"radius")})]})}function eX(e){let t=e.relationState.id,a=e.relationState.viewState.chartState;return e.embedded,(0,n.jsxs)("div",{className:(0,E.cn)("relative flex flex-col h-full w-full",e.className),children:[(0,n.jsxs)("div",{className:"pb-1",children:[(0,n.jsx)(K.H5,{children:"Data Config"}),(0,n.jsx)($.Z,{})]}),(0,n.jsxs)("div",{className:"flex-1 flex flex-col gap-2 w-full",children:[(0,n.jsxs)("div",{className:"grid w-full items-center gap-1.5 shrink-0",children:[(0,n.jsx)(ea,{className:"h-3",children:(0,n.jsx)(K.rO,{children:"Title"})}),(0,n.jsx)(J.I,{type:"text",id:"title",placeholder:"Title",value:a.chart.plot.title,onChange:a=>{var n;return n=a.target.value,void e.updateRelationViewState(t,{chartState:{chart:{plot:{title:n}}}})}})]}),(0,n.jsx)(ea,{className:"h-3",children:(0,n.jsx)(K.rO,{children:"Type"})}),(0,n.jsx)(ef,{type:a.chart.plot.type,onPlotTypeChange:function(a){e.updateRelationViewState(t,{chartState:{chart:{plot:{type:a}}}})}}),(0,n.jsx)(eq,{...e}),(0,n.jsx)("div",{className:"h-8"}),(0,n.jsx)("div",{className:"flex-1 shrink"})]})]})}function eq(e){let t=e.relationState.viewState.chartState.chart.plot;switch(t.type){case"bar":case"radar":case"line":case"scatter":case"area":return(0,n.jsx)(eB,{...e});case"pie":return(0,n.jsx)(eM,{...e});default:throw Error("Unsupported plot type: ".concat(t.type))}}var eY=a(40940);function eH(e){return(0,n.jsx)("div",{className:"w-full h-full flex justify-center items-center",children:(0,n.jsxs)("div",{className:"text-center",children:[(0,n.jsx)(K.H5,{className:"text-lg font-bold",children:(0,em.Ig)(e.error.type)}),(0,n.jsx)(K.P,{className:"text-sm",children:e.error.message})]})})}var eQ=a(56053),eU=a(35107),eG=a(98295),eK=a.n(eG);let e$=(0,l.forwardRef)((e,t)=>{let{children:a,fileName:r}=e,s=(0,l.useRef)(null),i=()=>{if(!s.current){console.error("No chart ref found");return}let e=s.current.getBoundingClientRect();eK().toPng(s.current,{quality:1,width:3*e.width,height:3*e.height,style:{transform:"scale(".concat(3,")"),transformOrigin:"top left",width:"".concat(e.width,"px"),height:"".concat(e.height,"px")}}).then(e=>{(0,eQ.saveAs)(e,"".concat(null!=r?r:"chart",".png"))}).catch(e=>{console.error("Failed to convert to PNG",e)})},o=async()=>{if(!s.current){console.error("No chart ref found");return}try{let e=s.current.getBoundingClientRect(),t=Math.ceil(e.width),n=Math.ceil(e.height);await fetch("/fonts/Urbanist-VariableFont_wght.ttf").then(e=>e.arrayBuffer());let l=await (0,eU.Z)(a,{width:t,height:n,fonts:[]}),i=new Blob([l],{type:"image/svg+xml"});(0,eQ.saveAs)(i,"".concat(null!=r?r:"chart",".svg"))}catch(e){console.error("Failed to convert to SVG with Satori",e)}};return(0,l.useImperativeHandle)(t,()=>({exportChartAsPNG:i,exportChartAsSVG:o})),(0,n.jsx)(n.Fragment,{children:(0,n.jsx)("div",{ref:s,className:"w-full h-full",children:a})})});var eJ=a(32348),e0=a(28663),e1=a(31751);let e2={light:"",dark:".dark"},e5=l.createContext(null);function e4(){let e=l.useContext(e5);if(!e)throw Error("useChart must be used within a <ChartContainer />");return e}let e6=l.forwardRef((e,t)=>{let{id:a,className:r,children:s,config:i,...o}=e,c=l.useId(),d="chart-".concat(a||c.replace(/:/g,""));return(0,n.jsx)(e5.Provider,{value:{config:i},children:(0,n.jsxs)("div",{"data-chart":d,ref:t,className:(0,E.cn)("flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none",r),...o,children:[(0,n.jsx)(e9,{id:d,config:i}),(0,n.jsx)(eJ.h,{children:s})]})})});e6.displayName="Chart";let e9=e=>{let{id:t,config:a}=e,r=Object.entries(a).filter(e=>{let[t,a]=e;return a.theme||a.color});return r.length?(0,n.jsx)("style",{dangerouslySetInnerHTML:{__html:Object.entries(e2).map(e=>{let[a,n]=e;return"\n".concat(n," [data-chart=").concat(t,"] {\n").concat(r.map(e=>{var t;let[n,r]=e,s=(null===(t=r.theme)||void 0===t?void 0:t[a])||r.color;return s?"  --color-".concat(n,": ").concat(s,";"):null}).join("\n"),"\n}\n")}).join("\n")}}):null},e3=e0.u,e8=l.forwardRef((e,t)=>{let{active:a,payload:r,className:s,indicator:i="dot",hideLabel:o=!1,hideIndicator:c=!1,label:d,labelFormatter:u,labelClassName:x,formatter:h,color:m,nameKey:f,labelKey:p}=e,{config:j}=e4(),v=l.useMemo(()=>{var e;if(o||!(null==r?void 0:r.length))return null;let[t]=r,a="".concat(p||t.dataKey||t.name||"value"),s=e7(j,t,a),l=p||"string"!=typeof d?null==s?void 0:s.label:(null===(e=j[d])||void 0===e?void 0:e.label)||d;return u?(0,n.jsx)("div",{className:(0,E.cn)("font-medium",x),children:u(l,r)}):l?(0,n.jsx)("div",{className:(0,E.cn)("font-medium",x),children:l}):null},[d,u,r,o,x,j,p]);if(!a||!(null==r?void 0:r.length))return null;let g=1===r.length&&"dot"!==i;return(0,n.jsxs)("div",{ref:t,className:(0,E.cn)("grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl",s),children:[g?null:v,(0,n.jsx)("div",{className:"grid gap-1.5",children:r.map((e,t)=>{let a="".concat(f||e.name||e.dataKey||"value"),r=e7(j,e,a),s=m||e.payload.fill||e.color;return(0,n.jsx)("div",{className:(0,E.cn)("flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground","dot"===i&&"items-center"),children:h&&(null==e?void 0:e.value)!==void 0&&e.name?h(e.value,e.name,e,t,e.payload):(0,n.jsxs)(n.Fragment,{children:[(null==r?void 0:r.icon)?(0,n.jsx)(r.icon,{}):!c&&(0,n.jsx)("div",{className:(0,E.cn)("shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]",{"h-2.5 w-2.5":"dot"===i,"w-1":"line"===i,"w-0 border-[1.5px] border-dashed bg-transparent":"dashed"===i,"my-0.5":g&&"dashed"===i}),style:{"--color-bg":s,"--color-border":s}}),(0,n.jsxs)("div",{className:(0,E.cn)("flex flex-1 justify-between leading-none",g?"items-end":"items-center"),children:[(0,n.jsxs)("div",{className:"grid gap-1.5",children:[g?v:null,(0,n.jsx)("span",{className:"text-muted-foreground",children:(null==r?void 0:r.label)||e.name})]}),e.value&&(0,n.jsx)("span",{className:"font-mono font-medium tabular-nums text-foreground",children:e.value.toLocaleString()})]})]})},e.dataKey)})})]})});function e7(e,t,a){if("object"!=typeof t||null===t)return;let n="payload"in t&&"object"==typeof t.payload&&null!==t.payload?t.payload:void 0,r=a;return a in t&&"string"==typeof t[a]?r=t[a]:n&&a in n&&"string"==typeof n[a]&&(r=n[a]),r in e?e[r]:e[a]}function te(e,t){let a=e.rows.length,n=e.columns.map(e=>e.name),r=t.map(e=>n.indexOf(e)),s=Array(a);for(let n=0;n<a;n++){s[n]={};for(let a=0;a<t.length;a++){let l=t[a],i=r[a];s[n][l]=e.rows[n][i]}}return s}e8.displayName="ChartTooltip",e1.D,l.forwardRef((e,t)=>{let{className:a,hideIcon:r=!1,payload:s,verticalAlign:l="bottom",nameKey:i}=e,{config:o}=e4();return(null==s?void 0:s.length)?(0,n.jsx)("div",{ref:t,className:(0,E.cn)("flex items-center justify-center gap-4","top"===l?"pb-3":"pt-3",a),children:s.map(e=>{let t="".concat(i||e.dataKey||"value"),a=e7(o,e,t);return(0,n.jsxs)("div",{className:(0,E.cn)("flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground"),children:[(null==a?void 0:a.icon)&&!r?(0,n.jsx)(a.icon,{}):(0,n.jsx)("div",{className:"h-2 w-2 shrink-0 rounded-[2px]",style:{backgroundColor:e.color}}),null==a?void 0:a.label]},e.value)})}):null}).displayName="ChartLegend";var tt=a(92966),ta=a(91436),tn=a(78293),tr=a(69236),ts=a(39857),tl=a(72299),ti=a(37299),to=a(96331),tc=a(19427),td=a(81898),tu=a(41478),tx=a(75305),th=a(86351);function tm(e){let{type:t,axis:a,elementData:r=[],nameKey:s}=e;switch(t){case"line":{let{strokeWidth:e,strokeDasharray:t,dots:{visible:r,fill:s,radius:l,borderWidth:i}}=a.decoration.line,o=a.decoration.color;return(0,n.jsx)(ti.x,{style:{stroke:o},dataKey:a.columnId,type:"monotone",stroke:o,strokeWidth:e,strokeDasharray:t,dot:!!r&&{r:l,fill:s,strokeWidth:i},activeDot:{r:l+2}})}case"bar":{let{barWidth:e,stacked:t,cornerRadius:r,fillOpacity:s,border:l}=a.decoration.bar,i=(null==l?void 0:l.width)?l.color||"#000":"none",o=(null==l?void 0:l.width)||0;return(0,n.jsx)(to.$,{style:{stroke:i},dataKey:a.columnId,fill:a.decoration.color,fillOpacity:s,stroke:i,strokeWidth:o,barSize:"number"==typeof e?e:void 0,stackId:t?"stack-1":void 0,radius:r})}case"scatter":{let{shape:e,stroke:{width:t,color:r},fillOpacity:s}=a.decoration.scatter;return(0,n.jsx)(tc.b,{style:{stroke:r},dataKey:a.columnId,fill:a.decoration.color,fillOpacity:s,stroke:r,strokeWidth:t,shape:e})}case"pie":{console.log("Pie chart data",a.decoration);let{innerRadius:e,padAngle:t,cornerRadius:l,showLabels:i,label:{color:o,fontSize:c,fontFamily:d}}=a.decoration.pie;return(0,n.jsx)(td.b,{data:r,dataKey:a.columnId,nameKey:s,innerRadius:e,outerRadius:"70%",paddingAngle:t,cornerRadius:l,label:!!i&&{fill:o,fontSize:c,fontFamily:d},children:r.map((e,t)=>(0,n.jsx)(tu.b,{fill:eS.QP[t%eS.QP.length]},"cell-".concat(t)))})}case"radar":{let{strokeWidth:e,fillColor:t,fillOpacity:r,showDots:s,dotSize:l,dotColor:i,dotBorderWidth:o}=a.decoration.radar;return(0,n.jsx)(tx.F,{style:{stroke:a.decoration.color},dataKey:a.columnId,stroke:a.decoration.color,strokeWidth:e,fill:t,fillOpacity:r,dot:!!s&&{r:l,fill:i,strokeWidth:o}})}case"area":{let{stroke:{width:e,dasharray:t},fillColor:r,fillOpacity:s,showDots:l,dotSize:i,dotColor:o,dotBorderWidth:c}=a.decoration.area;return(0,n.jsx)(th.u,{style:{stroke:a.decoration.color},dataKey:a.columnId,type:"monotone",stroke:a.decoration.color,strokeWidth:e,strokeDasharray:t,fill:r,fillOpacity:s,dot:!!l&&{r:i,fill:o,strokeWidth:c,fillOpacity:1}})}default:throw Error("Unknown plot type ".concat(t))}}var tf=a(95676),tp=a(2226),tj=a(46988),tv=a(96093),tg=a(60788),tw=a(40978),ty=a(46733);function tb(e){let{x:t,y:a,payload:r,callback:s}=e;return(0,l.useEffect)(()=>{s(String(r.value).length)},[r.value,s]),(0,n.jsx)("g",{transform:"translate(".concat(t,",").concat(a,")"),children:(0,n.jsx)("text",{x:0,y:0,textAnchor:"end",dy:4,children:r.value})})}function tN(e){let{x:t,y:a,payload:r,callback:s,angle:i}=e;return(0,l.useEffect)(()=>{s(String(r.value).length)},[r.value,s]),(0,n.jsx)("g",{transform:"translate(".concat(t,",").concat(a,") rotate(").concat(i,")"),children:(0,n.jsx)("text",{x:0,y:0,textAnchor:0===i?"middle":"end",dy:0===i?8:4,children:r.value})})}let tS={};function tC(e){var t,a,r;let s;let{data:i,config:o,hideTitleIfEmpty:c=!1,embedded:d=!1}=e,u=void 0===o.plot.title||""===o.plot.title,x=function(e,t){var a;let n=[];for(let e of(t.plot.cartesian.xAxis&&n.push(t.plot.cartesian.xAxis.columnId),null!==(a=t.plot.cartesian.yAxes)&&void 0!==a?a:[]))n.push(e.columnId);return te(e,n)}(i,o);return(0,n.jsxs)("div",{className:"h-full flex flex-col items-center",children:[(!c||!u)&&(0,n.jsx)("div",{className:(0,E.cn)("flex items-center justify-center","h-10"),children:(0,n.jsx)(K.H5,{children:o.plot.title})}),(0,n.jsx)("div",{className:"flex-grow w-full min-h-4 no-outline",children:(0,n.jsx)(e6,{config:tS,className:"w-full h-full",children:function(e){let t={top:12,right:16,bottom:16,left:0};switch(e.plotType){case"bar":return(0,n.jsx)(tt.v,{margin:t,data:e.data,children:e.children});case"area":return(0,n.jsx)(ta.T,{margin:t,data:e.data,children:e.children});case"line":return(0,n.jsx)(tn.w,{margin:t,data:e.data,children:e.children});case"scatter":return(0,n.jsx)(tr.G,{margin:t,data:e.data,children:e.children});case"pie":return(0,n.jsx)(ts.u,{margin:t,data:e.data,children:e.children});case"radar":return(0,n.jsx)(tl.H,{cx:"50%",cy:"50%",outerRadius:"80%",margin:t,data:e.data,children:e.children});default:throw Error("Unknown plot type ".concat(e.plotType))}}({plotType:o.plot.type,data:x,children:(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e3,{cursor:!0,content:(0,n.jsx)(e8,{})}),function(e){let{config:t}=e,[a,r]=(0,l.useState)(0),[s,i]=(0,l.useState)(0);(0,l.useEffect)(()=>{r(0),i(0)},[e.data,e.config.plot.cartesian.xAxis,e.config.plot.cartesian.yAxes]);let o=0,c=30,d=40;if(void 0!==t.plot.cartesian.xAxis){let e=document.createElement("canvas").getContext("2d");if(e){e.font="12px Arial";let t="0".repeat(s),a=e.measureText(t).width;o=a>80?-90:0,c=a>80?Math.max(30,Math.min(200,a))+8:30}}if(void 0!==t.plot.cartesian.yAxes){let e=document.createElement("canvas").getContext("2d");if(e){e.font="12px Arial";let t="0".repeat(a);d=Math.max(0,Math.min(100,e.measureText(t).width))+8}}return(0,n.jsxs)(n.Fragment,{children:[["bar","line","area","scatter"].includes(t.plot.type)&&(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e1.D,{}),(0,n.jsx)(tf.q,{vertical:!1}),t.plot.cartesian.xAxis&&(0,n.jsx)(tp.K,{allowDataOverflow:!0,type:(0,em.md)(t.plot.cartesian.xRange)?"number":void 0,domain:(0,em.xD)(t.plot.cartesian.xRange),dataKey:t.plot.cartesian.xAxis.columnId,height:c,angle:o,tick:(0,n.jsx)(tN,{callback:function(e){e>s&&i(e)}}),children:(0,n.jsx)(tj._,{style:{textAnchor:"middle",fontSize:"120%"},position:"insideBottom",offset:0,value:t.plot.cartesian.xLabel})}),(0,n.jsx)(tv.B,{allowDataOverflow:!0,type:(0,em.md)(t.plot.cartesian.xRange)?"number":void 0,domain:(0,em.xD)(t.plot.cartesian.yRange),width:d+16,tick:(0,n.jsx)(tb,{callback:function(e){e>a&&r(e)}}),children:(0,n.jsx)(tj._,{style:{textAnchor:"middle",fontSize:"120%"},angle:270,offset:6,position:"insideLeft",value:t.plot.cartesian.yLabel})})]}),"radar"===t.plot.type&&(0,n.jsxs)(n.Fragment,{children:[t.plot.cartesian.xAxis&&(0,n.jsx)(tg.I,{dataKey:t.plot.cartesian.xAxis.columnId}),t.plot.cartesian.yAxes&&(0,n.jsx)(tw.S,{}),t.plot.cartesian.xAxis&&t.plot.cartesian.yAxes&&(0,n.jsx)(ty.n,{})]})]})}({config:o,data:i}),"pie"!==o.plot.type&&(null===(t=o.plot.cartesian.yAxes)||void 0===t?void 0:t.map((e,t)=>(0,n.jsx)(n.Fragment,{children:tm({type:o.plot.type,axis:e})}))),"pie"===o.plot.type&&o.plot.pie.axis.radius&&(0,n.jsx)(n.Fragment,{children:tm({type:o.plot.type,elementData:(r=o.plot.pie.axis,s=[],r.label&&s.push(r.label.columnId),r.radius&&s.push(r.radius.columnId),te(i,s)),axis:o.plot.pie.axis.radius,nameKey:null===(a=o.plot.pie.axis.label)||void 0===a?void 0:a.columnId})})]})})})})]})}var tk=a(23977),tR=a(72613),tz=a(83705);function tD(e){let t=e.view.showConfig;return(0,n.jsxs)("div",{className:(0,E.cn)("absolute right-2 top-2 flex gap-2",e.className),children:[(0,n.jsx)(ei.z,{variant:"ghost",size:"icon",onClick:function(){e.updateRelationViewState(e.relationId,{chartState:{view:{showConfig:!t}}})},children:t?(0,n.jsx)(tk.Z,{size:16}):(0,n.jsx)(tR.Z,{size:16})}),(0,n.jsxs)(z.h_,{children:[(0,n.jsx)(z.$F,{asChild:!0,children:(0,n.jsx)(ei.z,{variant:"ghost",size:"icon",children:(0,n.jsx)(tz.Z,{className:"h-4 w-4"})})}),(0,n.jsxs)(z.AW,{children:[(0,n.jsx)(z.Xi,{onClick:e.onExportAsPNG,children:"Export as PNG"}),(0,n.jsx)(z.Xi,{disabled:!0,onClick:e.onExportAsSVG,children:"Export as SVG"})]})]})]})}function tI(e){var t,a,r,s,i;let o=(0,l.useRef)(null),c=e.relationState.viewState.chartState,d=e.relationState.data,u=(0,em.eY)(c.chart,d),x=null!==(r=e.embedded)&&void 0!==r&&r,h=null===(s=e.showOverlay)||void 0===s||s;return(0,n.jsxs)(n.Fragment,{children:[u?(0,n.jsx)(eH,{error:u}):(0,n.jsx)(e$,{ref:o,fileName:(null!==(i=c.chart.plot.title)&&void 0!==i?i:"plot").replace(/[^a-zA-Z0-9]+/g," ").trim().split(/\s+/).map(e=>e.toLowerCase()).join("_"),children:(0,n.jsx)(tC,{embedded:e.embedded,hideTitleIfEmpty:e.embedded,data:d,config:c.chart})}),h&&(0,n.jsx)(tD,{className:x?"text-muted-foreground top-0 right-2 group-hover:opacity-100 opacity-0 transition-opacity duration-200":"",hasError:void 0!=u,data:d,config:c.chart,view:c.view,relationId:e.relationState.id,onExportAsSVG:null===(t=o.current)||void 0===t?void 0:t.exportChartAsSVG,onExportAsPNG:null===(a=o.current)||void 0===a?void 0:a.exportChartAsPNG,updateRelationViewState:e.updateRelationViewState})]})}var tZ=a(59952);function tF(e){return(0,n.jsx)(eY.Vq,{open:e.isOpen,onOpenChange:e.onOpenChange,children:(0,n.jsx)(eY.cZ,{className:"max-w-screen h-screen flex flex-col",style:{width:"90vw",height:"90vh"},children:(0,n.jsxs)(tZ.pO,{direction:"horizontal",children:[(0,n.jsx)(tZ.ee,{defaultSize:70,children:(0,n.jsx)(tI,{showOverlay:!1,...e})}),(0,n.jsx)(tZ.Dp,{}),(0,n.jsx)(tZ.ee,{defaultSize:30,style:{overflowY:"auto"},children:(0,n.jsx)(eX,{className:"pl-4 pr-[1px]",embedded:!0,relationState:e.relationState,updateRelationViewState:e.updateRelationViewState})})]})})})}function tE(e){var t;let a=e.relationState.id;if(void 0===e.relationState.data)return null;let r=e.relationState.viewState.chartState,s=null!==(t=e.embedded)&&void 0!==t&&t,l=s?"p-0":"h-full p-2",i=s?"h-fit":"h-full",o=s?"overflow-hidden":"overflow-auto";return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)("div",{className:(0,E.cn)("group w-full relative overflow-hidden",i),children:(0,n.jsxs)(G.e,{ratio:r.view.configPlotRatio,layout:r.view.layout,onChange:function(t){e.updateRelationViewState(a,{chartState:{view:{configPlotRatio:t}}})},child2Active:r.view.showConfig&&!s,children:[(0,n.jsx)("div",{className:(0,E.cn)(l,o,"relative"),children:(0,n.jsx)(tI,{...e})}),s?(0,n.jsx)("div",{}):(0,n.jsx)("div",{className:"p-2 w-full h-full overflow-y-auto",children:(0,n.jsx)(eX,{embedded:s,relationState:e.relationState,updateRelationViewState:e.updateRelationViewState})})]})}),(0,n.jsx)(tF,{isOpen:r.view.showConfig&&s,onOpenChange:t=>e.updateRelationViewState(a,{chartState:{view:{showConfig:t}}}),...e})]})}function tA(e){let t=e.relationState.viewState.selectedView;return"table"===t?(0,n.jsx)(U,{...e}):"chart"===t?(0,n.jsx)(tE,{...e}):(0,n.jsx)("div",{children:"Unknown view"})}var tO=a(89128),tP=a(86042),tT=a(72029),t_=a(98165),tL=a(38813),tB=a(32173),tV=a(89286),tM=a(49358),tW=a(52914),tX=a(22343),tq=a(4980),tY=a(97072);function tH(e){let{item:t,displayMode:a,onClick:r}=e,s="directory"===t.type,l="list"===a?16:32,i=(0,n.jsxs)(n.Fragment,{children:[s?(0,n.jsx)(tq.Z,{size:l}):(0,n.jsx)(tY.Z,{size:l}),(0,n.jsx)("div",{title:t.name,className:"text-sm font-medium text-center text-muted-foreground w-24 break-words line-clamp-2 text-ellipsis",children:t.name})]});return(0,n.jsx)("div",{onClick:r,className:"list"===a?"flex flex-row items-center space-x-4 p-2 cursor-pointer hover:bg-muted":"flex flex-col items-center space-y-2 mr-2 mb-2 py-0.5 cursor-pointer w-30 h-30 hover:bg-muted rounded",children:i})}var tQ=a(16012),tU=a(5452);let tG=l.forwardRef((e,t)=>{let{className:a,type:r,startIcon:s,endIcon:l,...i}=e;return(0,n.jsxs)("div",{className:"w-full relative",children:[s&&(0,n.jsx)("div",{className:"absolute left-2 top-1/2 transform -translate-y-1/2",children:(0,n.jsx)(s,{size:14,className:"text-muted-foreground"})}),(0,n.jsx)("input",{type:r,className:(0,E.cn)("flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-base shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm",s?"pl-8":"",l?"pr-8":"",a),ref:t,...i}),l&&(0,n.jsx)("div",{className:"absolute right-3 top-1/2 transform -translate-y-1/2",children:(0,n.jsx)(l,{className:"text-muted-foreground",size:14})})]})});function tK(e){let{dirPath:t,content:a,onItemClick:r,onBackClick:s,backDisabled:i,displaySettings:o}=e,c="grid"===o.displayMode?"flex flex-row flex-wrap items-stretch w-full":"flex flex-col space-y-4",[d,u]=(0,l.useState)("");return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)("div",{className:"flex flex-row items-center space-x-2 ",children:[(0,n.jsx)(ei.z,{disabled:i,size:"icon",variant:"ghost",onClick:s,children:(0,n.jsx)(tQ.Z,{size:10})}),(0,n.jsx)(K.H5,{className:"text-primary",children:t}),(0,n.jsx)("div",{className:"flex-1"}),(0,n.jsx)("div",{className:"max-w-48",children:(0,n.jsx)(tG,{startIcon:tU.Z,placeholder:"Search...",value:d,onChange:e=>u(e.target.value)})})]}),(0,n.jsx)($.Z,{}),(0,n.jsx)("div",{className:"overflow-auto",children:(0,n.jsx)("div",{className:"flex ".concat(c),children:(""===d?a:a.filter(e=>e.name.toLowerCase().includes(d.toLowerCase()))).map((e,t)=>(0,n.jsx)(n.Fragment,{children:(!o.onlyShowFolders||"directory"===e.type)&&(0,n.jsx)(tH,{item:e,displayMode:"grid",onClick:()=>null==r?void 0:r(e)},t)}))})})]})}tG.displayName="InputWithIcon";var t$=a(99185);function tJ(e){if(/^[a-zA-Z]:\\/.test(e)||e.startsWith("\\\\"))return"\\";if(e.startsWith("/"))return"/";throw Error("Unknown root element in path: ".concat(e))}function t0(e){let t=tJ(e),a=RegExp("[".concat(t,"]{2,}"),"g");return e.replace(a,t)}function t1(e){let t=tJ(e);return t0(e).split(t).filter(Boolean)}function t2(e){let t=tJ(e),a=t1(e);return 0===a.length?t:(e.startsWith(t)?t:"")+a.slice(0,-1).join(t)}async function t5(){return(await t$.I.getInstance().executeQuery("SELECT pwd();")).rows[0][0]}async function t4(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"lastModified",a='\n        SELECT absolute_path(path)      as path,\n               file_name(path)          as "name",\n               path_type(path)          as "type",\n               file_size(path)          as "size",\n               file_last_modified(path) as "lastModified"\n        FROM ls(\''.concat(e,"') ").concat(function(e){switch(e){case"name":return"ORDER BY name";case"size":return"ORDER BY size";case"lastModified":return"ORDER BY lastModified DESC"}}(t),";\n    ");return(await t$.I.getInstance().executeQuery(a)).rows.map(e=>{let[t,a,n,r,s]=e;return"file"===n?{name:a,path:t,type:n,size:r,lastModified:s}:{name:a,path:t,type:n,lastModified:s}})}function t6(e){let[t,a]=l.useState(void 0);async function r(t,n){let r=await t4(t,"lastModified"),s="export."+e.fileFormat,l=null!=n?n:function(e,t){let a=tJ(e),n=t0(e),r=n.endsWith(a)?n.slice(0,-1):n,s=t.startsWith(a)?t.slice(1):t;return r+a+s}(t,s);a({dirPath:t,content:r,filePath:l})}if((0,l.useEffect)(()=>{(async function(){return e.basePath?e.basePath:await t5()})().then(e=>{r(e)})},[]),!t)return(0,n.jsx)("div",{children:"Loading..."});async function s(){d&&r(t2(d))}async function i(e){"directory"==e.type?r(e.path):o(e.path)}async function o(e){r(t2(e),e)}async function c(){var a,n;t&&(null===(a=e.dialogTriggerRef.current)||void 0===a||a.click(),null===(n=e.onFilePathSelected)||void 0===n||n.call(e,null==t?void 0:t.filePath))}let d=null==t?void 0:t.dirPath,u=0===t1(d).length;return(0,n.jsxs)("div",{className:"h-full w-full flex flex-col space-y-2",children:[(0,n.jsx)(tK,{backDisabled:u,onBackClick:s,onItemClick:i,displaySettings:{displayMode:"grid",onlyShowFolders:!1},...t}),(0,n.jsx)("div",{className:"flex-1"}),(0,n.jsx)($.Z,{}),(0,n.jsxs)("div",{className:"w-full h-8 flex flex-row content-center items-center space-x-2",children:[(0,n.jsx)("span",{className:"text-muted-foreground text-sm text-nowrap",children:"Save file to:"}),(0,n.jsx)(J.I,{className:"flex-1",value:t.filePath,onChange:e=>o(e.target.value)}),(0,n.jsx)(ei.z,{type:"submit",onClick:c,children:"Save"})]})]})}function t9(e){let{open:t,onOpenChange:a,children:r,className:s}=e;return t?(0,n.jsx)("div",{className:"z-50 fixed inset-0 flex items-center justify-center bg-black bg-opacity-75",onClick:()=>null==a?void 0:a(!1),children:(0,n.jsx)("div",{className:(0,E.cn)("bg-background p-6 rounded-lg shadow-lg max-w-lg w-full border-[1px] border-muted",s),onClick:e=>e.stopPropagation(),children:r})}):null}function t3(e){let t=l.useRef(null);return(0,n.jsx)(t9,{open:e.open,onOpenChange:e.onOpenChange,className:"h-[90vh] w-[60vw] max-h-[90vh] max-w-[60vw] overflow-auto flex flex-col justify-start items-stretch space-y-1",children:(0,n.jsx)(t6,{dialogTriggerRef:t,...e})})}var t8=a(47051),t7=a(40440),ae=a(99556);function at(e){let[t,a]=(0,l.useState)({open:!1,fileFormat:"csv"});async function r(n){let r=t7.Rx.getState().getRelation(e.relationId).query.baseQuery;a({...t,open:!1});let s=ae.Am.loading("Exporting file to "+n,{duration:0});try{await (0,t8.Ny)(r,n,t.fileFormat),ae.Am.success("Exported result to ".concat(n),{id:s,duration:2e3})}catch(e){ae.Am.error("Failed to export query to file: "+e.message,{id:s})}}function s(e){a({open:!0,fileFormat:e})}return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(z.h_,{children:[(0,n.jsx)(z.$F,{asChild:!0,children:(0,n.jsx)(ei.z,{variant:"ghost",size:"icon",children:(0,n.jsx)(tX.Z,{className:"h-4 w-4"})})}),(0,n.jsxs)(z.AW,{className:"w-32",children:[(0,n.jsx)(z.Ju,{children:"Export as ... "}),(0,n.jsx)(z.VD,{}),(0,n.jsxs)(z.Qk,{children:[(0,n.jsx)(z.Xi,{onClick:()=>s("csv"),children:"CSV"}),(0,n.jsx)(z.Xi,{onClick:()=>s("json"),children:"JSON"}),(0,n.jsx)(z.Xi,{onClick:()=>s("xlsx"),children:"Excel"}),(0,n.jsx)(z.Xi,{onClick:()=>s("parquet"),children:"Parquet"})]})]})]}),(0,n.jsx)(t3,{onFilePathSelected:r,onOpenChange:function(e){a({...t,open:e})},open:t.open,fileFormat:t.fileFormat})]})}function aa(e){var t;let{relationState:a,updateRelationViewState:r}=e,s=a.id,{source:l,connectionId:i,viewState:o}=a,c=o.codeFenceState,d=null===(t=a.lastExecutionMetaData)||void 0===t?void 0:t.lastExecutionDuration,u="";d&&(u+="(Took ".concat((0,tL.LU)(d),")"));let x=(0,tW.TY)(l,i);return(0,n.jsx)(n.Fragment,{children:(0,n.jsx)(tB.t,{title:o.displayName,path:x,onPathClick:function(e,t){"table"===l.type&&(0===t||1===t||2===t||3===t||console.error("Unknown path element",e,t))},subtitle:u,state:a.executionState,actionButtons:(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(tV.Z,{onClick:function(){r(s,{codeFenceState:{show:!c.show}})},pressed:c.show,title:c.show?"Hide query":"Show query",children:(0,n.jsx)(tO.Z,{className:"h-4 w-4"})}),(0,n.jsx)($.Z,{orientation:"vertical"}),(0,n.jsxs)(tM.t,{rovingFocus:!0,type:"single",value:o.selectedView,onValueChange:function(e){e&&r(s,{selectedView:e})},children:[(0,n.jsx)(tM.G,{value:"table","aria-label":"Table view",title:"Table view",children:(0,n.jsx)(tP.Z,{className:"h-4 w-4"})}),(0,n.jsx)(tM.G,{value:"chart","aria-label":"Chart view",title:"Chart view",children:(0,n.jsx)(tT.Z,{className:"h-4 w-4"})}),(0,n.jsx)(tM.G,{value:"map","aria-label":"Map view",disabled:!0,title:"Not implemented",children:(0,n.jsx)(t_.Z,{className:"h-4 w-4"})})]}),(0,n.jsx)($.Z,{orientation:"vertical"}),(0,n.jsx)(at,{relationId:s})]})})})}var an=a(76731),ar=a(32639);function as(e){return(0,n.jsxs)("div",{className:"w-full h-full flex flex-col p-0 m-0 bg-background",children:[(0,n.jsx)(aa,{...e}),(0,n.jsx)("div",{className:"flex-1 bg-background overflow-auto",children:(0,n.jsx)(an.d,{...e})})]})}function al(e){let t=e.relationState.executionState;return"error"===t.state?(0,n.jsx)(ai,{error:t.error}):(0,n.jsx)(tA,{...e})}function ai(e){let{error:t}=e;return(0,n.jsxs)("div",{className:"p-4 w-full bg-inherit h-full flex flex-col items-start justify-start",children:[(0,n.jsxs)("div",{className:"flex bg-inherit flex-row text-red-500 items-center space-x-2 h-6",children:[(0,n.jsx)(ar.Z,{size:16}),(0,n.jsx)("span",{children:"Error executing query"})]}),(0,n.jsx)(c,{className:"w-full text-red-500",json:t})]})}},56944:function(e,t,a){"use strict";a.d(t,{di:function(){return f},e8:function(){return x},fu:function(){return m},m5:function(){return d},mY:function(){return c},rb:function(){return h},sZ:function(){return u}});var n=a(46499),r=a(10331),s=a(99224),l=a(5452),i=a(10296),o=a(40940);let c=r.forwardRef((e,t)=>{let{className:a,...r}=e;return(0,n.jsx)(s.mY,{ref:t,className:(0,i.cn)("flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground",a),...r})});c.displayName=s.mY.displayName;let d=e=>{let{children:t,...a}=e;return(0,n.jsx)(o.Vq,{...a,children:(0,n.jsx)(o.cZ,{className:"overflow-hidden p-0",children:(0,n.jsx)(c,{className:"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5",children:t})})})},u=r.forwardRef((e,t)=>{let{className:a,...r}=e;return(0,n.jsxs)("div",{className:"flex items-center border-b px-3","cmdk-input-wrapper":"",children:[(0,n.jsx)(l.Z,{className:"mr-2 h-4 w-4 shrink-0 opacity-50"}),(0,n.jsx)(s.mY.Input,{ref:t,className:(0,i.cn)("flex h-10 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50",a),...r})]})});u.displayName=s.mY.Input.displayName;let x=r.forwardRef((e,t)=>{let{className:a,...r}=e;return(0,n.jsx)(s.mY.List,{ref:t,className:(0,i.cn)("max-h-[300px] overflow-y-auto overflow-x-hidden",a),...r})});x.displayName=s.mY.List.displayName;let h=r.forwardRef((e,t)=>(0,n.jsx)(s.mY.Empty,{ref:t,className:"py-6 text-center text-sm",...e}));h.displayName=s.mY.Empty.displayName;let m=r.forwardRef((e,t)=>{let{className:a,...r}=e;return(0,n.jsx)(s.mY.Group,{ref:t,className:(0,i.cn)("overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground",a),...r})});m.displayName=s.mY.Group.displayName,r.forwardRef((e,t)=>{let{className:a,...r}=e;return(0,n.jsx)(s.mY.Separator,{ref:t,className:(0,i.cn)("-mx-1 h-px bg-border",a),...r})}).displayName=s.mY.Separator.displayName;let f=r.forwardRef((e,t)=>{let{className:a,...r}=e;return(0,n.jsx)(s.mY.Item,{ref:t,className:(0,i.cn)("relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected=true]:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0",a),...r})});f.displayName=s.mY.Item.displayName},86792:function(e,t,a){"use strict";a.d(t,{$F:function(){return u},AW:function(){return j},Ju:function(){return g},Ph:function(){return m},Qk:function(){return x},TG:function(){return p},VD:function(){return w},Xi:function(){return v},cq:function(){return h},h_:function(){return d},kt:function(){return f}});var n=a(46499),r=a(10331),s=a(38744),l=a(44058),i=a(11933),o=a(69209),c=a(10296);let d=s.fC,u=s.xz,x=s.ZA,h=s.Uv,m=s.Tr;s.Ee;let f=r.forwardRef((e,t)=>{let{className:a,inset:r,children:i,...o}=e;return(0,n.jsxs)(s.fF,{ref:t,className:(0,c.cn)("flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0",r&&"pl-8",a),...o,children:[i,o.withArrow&&(0,n.jsx)(l.Z,{className:"ml-auto"})]})});f.displayName=s.fF.displayName;let p=r.forwardRef((e,t)=>{let{className:a,...r}=e;return(0,n.jsx)(s.tu,{ref:t,className:(0,c.cn)("z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",a),...r})});p.displayName=s.tu.displayName;let j=r.forwardRef((e,t)=>{let{className:a,sideOffset:r=4,...l}=e;return(0,n.jsx)(s.Uv,{children:(0,n.jsx)(s.VY,{ref:t,sideOffset:r,className:(0,c.cn)("z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md","data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",a),...l})})});j.displayName=s.VY.displayName;let v=r.forwardRef((e,t)=>{let{className:a,inset:r,...l}=e;return(0,n.jsx)(s.ck,{ref:t,className:(0,c.cn)("relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&>svg]:size-4 [&>svg]:shrink-0",r&&"pl-8",a),...l})});v.displayName=s.ck.displayName,r.forwardRef((e,t)=>{let{className:a,children:r,checked:l,...o}=e;return(0,n.jsxs)(s.oC,{ref:t,className:(0,c.cn)("relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",a),checked:l,...o,children:[(0,n.jsx)("span",{className:"absolute left-2 flex h-3.5 w-3.5 items-center justify-center",children:(0,n.jsx)(s.wU,{children:(0,n.jsx)(i.Z,{className:"h-4 w-4"})})}),r]})}).displayName=s.oC.displayName,r.forwardRef((e,t)=>{let{className:a,children:r,...l}=e;return(0,n.jsxs)(s.Rk,{ref:t,className:(0,c.cn)("relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",a),...l,children:[(0,n.jsx)("span",{className:"absolute left-2 flex h-3.5 w-3.5 items-center justify-center",children:(0,n.jsx)(s.wU,{children:(0,n.jsx)(o.Z,{className:"h-2 w-2 fill-current"})})}),r]})}).displayName=s.Rk.displayName;let g=r.forwardRef((e,t)=>{let{className:a,inset:r,...l}=e;return(0,n.jsx)(s.__,{ref:t,className:(0,c.cn)("px-2 py-1.5 text-sm font-semibold",r&&"pl-8",a),...l})});g.displayName=s.__.displayName;let w=r.forwardRef((e,t)=>{let{className:a,...r}=e;return(0,n.jsx)(s.Z0,{ref:t,className:(0,c.cn)("-mx-1 my-1 h-px bg-muted",a),...r})});w.displayName=s.Z0.displayName},59952:function(e,t,a){"use strict";a.d(t,{Dp:function(){return c},ee:function(){return o},pO:function(){return i}});var n=a(46499),r=a(34541),s=a(77772),l=a(10296);let i=e=>{let{className:t,...a}=e;return(0,n.jsx)(s.eh,{className:(0,l.cn)("flex h-full w-full data-[panel-group-direction=vertical]:flex-col",t),...a})},o=s.s_,c=e=>{let{withHandle:t,className:a,...i}=e;return(0,n.jsx)(s.OT,{className:(0,l.cn)("relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90",a),...i,children:t&&(0,n.jsx)("div",{className:"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border",children:(0,n.jsx)(r.Z,{className:"h-2.5 w-2.5"})})})}},24769:function(e,t,a){"use strict";a.d(t,{Z:function(){return i}});var n=a(46499),r=a(10331),s=a(81766),l=a(10296);let i=r.forwardRef((e,t)=>{let{className:a,orientation:r="horizontal",decorative:i=!0,...o}=e;return(0,n.jsx)(s.f,{ref:t,decorative:i,orientation:r,className:(0,l.cn)("shrink-0 bg-border","horizontal"===r?"h-[1px] w-full":"h-full w-[1px]",a),...o})});i.displayName=s.f.displayName},49358:function(e,t,a){"use strict";a.d(t,{G:function(){return d},t:function(){return c}});var n=a(46499),r=a(10331),s=a(40736),l=a(10296),i=a(89286);let o=r.createContext({size:"default",variant:"default"}),c=r.forwardRef((e,t)=>{let{className:a,variant:r,size:i,children:c,...d}=e;return(0,n.jsx)(s.fC,{ref:t,className:(0,l.cn)("flex items-center justify-center gap-1",a),...d,children:(0,n.jsx)(o.Provider,{value:{variant:r,size:i},children:c})})});c.displayName=s.fC.displayName;let d=r.forwardRef((e,t)=>{let{className:a,children:c,variant:d,size:u,...x}=e,h=r.useContext(o);return(0,n.jsx)(s.ck,{ref:t,className:(0,l.cn)((0,i.E)({variant:h.variant||d,size:h.size||u}),a),...x,children:c})});d.displayName=s.ck.displayName},89286:function(e,t,a){"use strict";a.d(t,{E:function(){return o},Z:function(){return c}});var n=a(46499),r=a(10331),s=a(73602),l=a(96579),i=a(10296);let o=(0,l.j)("inline-flex items-center justify-center gap-2 rounded-md text-sm font-medium transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0",{variants:{variant:{default:"bg-transparent",outline:"border border-input bg-transparent shadow-sm hover:bg-accent hover:text-accent-foreground"},size:{default:"h-9 px-2 min-w-9",sm:"h-8 px-1.5 min-w-8",lg:"h-10 px-2.5 min-w-10"}},defaultVariants:{variant:"default",size:"default"}}),c=r.forwardRef((e,t)=>{let{className:a,variant:r,size:l,...c}=e;return(0,n.jsx)(s.f,{ref:t,className:(0,i.cn)(o({variant:r,size:l,className:a})),...c})});c.displayName=s.f.displayName},25195:function(e,t,a){"use strict";a.d(t,{H1:function(){return l},H5:function(){return i},P:function(){return o},rO:function(){return d},x4:function(){return c}});var n=a(10331),r=a(10296);let s=(e,t,a)=>{let s=(0,n.forwardRef)((a,s)=>n.createElement(e,{...a,ref:s,className:(0,r.cn)(t,a.className)},a.children));return s.displayName=a,s},l=s("h1","scroll-m-20 text-4xl font-extrabold tracking-tight lg:text-5xl","H1");s("h2","scroll-m-20 border-b py-2 text-3xl font-semibold tracking-tight first:mt-0","H2"),s("h3","scroll-m-20 text-2xl font-semibold tracking-tight","H3"),s("h4","scroll-m-20 text-xl font-semibold tracking-tight","H4");let i=s("h5","scroll-m-20 text-lg font-semibold tracking-tight","H5");s("p","text-xl text-muted-foreground","Lead");let o=s("p","leading-7 [&:not(:first-child)]:mt-6","P");s("div","text-lg font-semibold","Large"),s("span","font-semibold text-sm","Strong");let c=s("p","text-sm font-medium leading-none","Small"),d=s("span","text-sm text-muted-foreground","Muted");s("code","relative rounded bg-muted px-[0.3rem] py-[0.2rem] font-mono text-sm font-semibold","InlineCode"),s("pre","relative rounded bg-muted p-4 font-mono text-sm font-semibold overflow-x-auto","MultilineCode"),s("ul","my-6 ml-6 list-disc [&>li]:mt-2","List"),s("blockquote","mt-6 border-l-2 pl-6 italic text-muted-foreground","Quote")},62260:function(e,t,a){"use strict";a.d(t,{e:function(){return s}});var n=a(46499),r=a(10331);function s(e){var t,a,s,l;let i="row"===e.layout?"flex-col":"flex-row",o="flex-row"===i,c=(0,r.useRef)(null),[d,u]=(0,r.useState)(!1),x=(0,r.useRef)(null),h=(0,r.useRef)(e.ratio),m=(0,r.useCallback)(t=>{if(!d||!c.current||null===x.current)return;let a=c.current.getBoundingClientRect(),n=(o?t.clientX:t.clientY)-x.current,r=o?a.width:a.height,s=Math.min(Math.max(h.current+n/r,.1),.9);e.onChange(s)},[d,o]),f=(0,r.useCallback)(()=>{u(!1),x.current=null},[]);(0,r.useEffect)(()=>(d?(document.addEventListener("mousemove",m),document.addEventListener("mouseup",f)):(document.removeEventListener("mousemove",m),document.removeEventListener("mouseup",f)),()=>{document.removeEventListener("mousemove",m),document.removeEventListener("mouseup",f)}),[d,m,f]);let p=100*e.ratio;if(void 0===e.children||2!==e.children.length)throw Error("WindowSplitter requires exactly 2 children but has "+e.children.length);let[j,v]=e.children,g=(null===(t=e.child1Active)||void 0===t||t)&&(null===(a=e.child2Active)||void 0===a||a);return(0,n.jsxs)("div",{ref:c,className:"bg-inherit w-full h-full flex ".concat(i," items-stretch"),children:[(null===(s=e.child1Active)||void 0===s||s)&&(0,n.jsx)("div",{className:"overflow-auto",style:{flex:"".concat(p," 1 0%"),alignSelf:"stretch"},children:j}),g&&(0,n.jsxs)("div",{className:"".concat(o?"w-px h-full":"h-px w-full"," relative bg-border"),style:{zIndex:40,cursor:o?"col-resize":"row-resize"},onMouseDown:t=>{t.preventDefault(),u(!0),x.current=o?t.clientX:t.clientY,h.current=e.ratio},children:[(0,n.jsx)("div",{className:"".concat(o?"h-full":"w-full")}),(0,n.jsx)("div",{className:"absolute bg-transparent",style:{top:o?"0":"-5px",left:o?"-5px":"0",width:o?"11px":"100%",height:o?"100%":"11px",cursor:o?"ew-resize":"ns-resize",pointerEvents:"all"}})]}),(null===(l=e.child2Active)||void 0===l||l)&&(0,n.jsx)("div",{className:"overflow-auto bg-inherit",style:{flex:"".concat(100-p," 1 0%"),alignSelf:"stretch"},children:v})]})}},97491:function(e,t,a){"use strict";a.d(t,{E:function(){return r}});class n{static getInstance(){return n.instance||(n.instance=new n),n.instance}hasEditor(e){return void 0!==this.editors[e]}getEditor(e){return this.editors[e]}setEditor(e,t){this.editors[e]=t}removeEditor(e){delete this.editors[e]}constructor(){this.editors={}}}let r=()=>({setEditor:(e,t)=>{n.getInstance().setEditor(e,t)},removeEditor:e=>{n.getInstance().removeEditor(e)},getEditor:e=>n.getInstance().getEditor(e),hasEditor:e=>n.getInstance().hasEditor(e)})},59620:function(){},44506:function(){}},function(e){e.O(0,[690,554,109,249,217,559,88,301,665,736,744],function(){return e(e.s=28235)}),_N_E=e.O()}]);",    //
     "application/javascript", //
     "/_next/static/chunks/app/page-31f3d8757b8f19a8.js/", //
};
}
