
#pragma once
#include "files.hpp"
namespace duckdb {
const File FILE_NEXT_STATIC_CHUNKS_APP_LAYOUT_88EB661B8991283C_JS = {
     // Content
     ""
     ""
     ""
     "ghMSkpOmwub1IuZXJyb3IoIkZhaWxlZCB0byBjb25uZWN0IHRvIGRhdGFiYXNlIil9O2FzeW5jIGZ1bmN0aW9uIHcoKXtsZXQgZT1uZXcgVVJMU2VhcmNoUGFyYW1zKHdpbmRvdy5sb2NhdGlvbi5zZWFyY2gpLHQ9YXdhaXQgQyhlLGMpO2lmKHkucmVwbGFjZSh4LHZvaWQgMCksIXQpe2wub1IuZXJyb3IoIk5vIHZpYWJsZSBjb25uZWN0aW9uIGZvdW5kIikscCghMCk7cmV0dXJufWF3YWl0IG4odCk7bGV0IHM9ZnVuY3Rpb24oZSl7bGV0IHQ9YXJndW1lbnRzLmxlbmd0aD4xJiZ2b2lkIDAhPT1hcmd1bWVudHNbMV0mJmFyZ3VtZW50c1sxXTtyZXR1cm4gZnVuY3Rpb24oZSl7bGV0IHQ9YXJndW1lbnRzLmxlbmd0aD4xJiZ2b2lkIDAhPT1hcmd1bWVudHNbMV0mJmFyZ3VtZW50c1sxXSxuPWUuY29uZmlnO3N3aXRjaChlLnR5cGUpe2Nhc2UiZHVja2RiLW92ZXItaHR0cCI6cmV0dXJuIkNvbm5lY3RlZCB0byBEdWNrREIgdmlhICIuY29uY2F0KG4udXJsLCIgIikuY29uY2F0KHQ/IigiLmNvbmNhdChuLnVzZVRva2VuPyJUb2tlbjogIituLnRva2VuOiJObyBhdXRoZW50aWNhdGlvbiIsIikiKToiIik7Y2FzZSJkdWNrZGItd2FzbSI6cmV0dXJuIkNvbm5lY3RlZCB0byBEdWNrREIgV0FTTSI7Y2FzZSJkdWNrZGItd2FzbS1tb3RoZXJkdWNrIjpyZXR1cm4iQ29ubmVjdGVkIHRvIER1Y2tEQiBXQVNNIChNb3RoZXJkdWNrKSJ9fShnKGUpLHQpfSh0LCExKTtsLm9SLnN1Y2Nlc3MocyksYXdhaXQgbmV3IFByb21pc2UoZT0+c2V0VGltZW91dChlLDFlMykpLDA9PT1PYmplY3Qua2V5cyhyLlU0LmdldFN0YXRlKCkucmVsYXRpb25zKS5sZW5ndGgmJmZ1bmN0aW9uKGUpe2xldCB0PSgwLHYucikoKTsoMCxyLlU0LmdldFN0YXRlKCkuc2hvd1JlbGF0aW9uRnJvbVNvdXJjZSkoZSx7dHlwZToicXVlcnkiLGJhc2VRdWVyeToiLS0gRGlyZWN0bHkgcXVlcnkgUGFycXVldCBmaWxlIGluIFMzXG5TRUxFQ1RcbnN0YXRpb25fbmFtZSxcbmNvdW50KCopIEFTIG51bV9zZXJ2aWNlc1xuRlJPTSAnczM6Ly9kdWNrZGItYmxvYnMvdHJhaW5fc2VydmljZXMucGFycXVldCdcbi0tIEZST00gdHJhaW5fc2VydmljZXNcbkdST1VQIEJZIEFMTFxuT1JERVIgQlkgbnVtX3NlcnZpY2VzIERFU0NcbkxJTUlUIDEwOyIsaWQ6dCxuYW1lOiJUcmFpbiBTdGF0aW9uIFNlcnZpY2VzIn0sZi5UbCl9KGEueC5nZXRJbnN0YW5jZSgpLmdldERhdGFiYXNlQ29ubmVjdGlvbigpLmlkKX1yZXR1cm4oMCxpLnVzZUVmZmVjdCkoKCk9PntkJiZ3KCl9LFtkXSksKDAscy5qc3hzKShzLkZyYWdtZW50LHtjaGlsZHJlbjpbdCwoMCxzLmpzeCkoZWEse29wZW46dSxmb3JjZU9wZW46aCxvbk9wZW5DaGFuZ2U6bSxvblNwZWNTYXZlOmp9KV19KX1ldC5kaXNwbGF5TmFtZT1HLlVDLmRpc3BsYXlOYW1lO3ZhciBlYz1uKDk0NzQxKTtmdW5jdGlvbiBlbChlKXtsZXR7Y2hpbGRyZW46dCwuLi5ufT1lO3JldHVybigwLHMuanN4KShlYy5OLHsuLi5uLGNoaWxkcmVuOnR9KX1mdW5jdGlvbiBlZChlKXtsZXR7Y2hpbGRyZW46dH09ZTtyZXR1cm4oMCxzLmpzeHMpKCJodG1sIix7bGFuZzoiZW4iLHN1cHByZXNzSHlkcmF0aW9uV2FybmluZzohMCxjaGlsZHJlbjpbKDAscy5qc3hzKSgiaGVhZCIse2NoaWxkcmVuOlsoMCxzLmpzeCkoInRpdGxlIix7Y2hpbGRyZW46IkRhc2gifSksKDAscy5qc3gpKCJtZXRhIix7bmFtZToiYXBwbGUtbW9iaWxlLXdlYi1hcHAtdGl0bGUiLGNvbnRlbnQ6IkRhc2gifSldfSksKDAscy5qc3gpKCJib2R5Iix7Y2xhc3NOYW1lOigwLEwuY24pKCJtaW4taC1zY3JlZW4gYmctYmFja2dyb3VuZCBhbnRpYWxpYXNlZCIpLGNoaWxkcmVuOigwLHMuanN4cykoIm1haW4iLHtjaGlsZHJlbjpbKDAscy5qc3gpKCJkaXYiLHtjbGFzc05hbWU6Inctc2NyZWVuIGgtc2NyZWVuIixjaGlsZHJlbjooMCxzLmpzeCkoZWwse2F0dHJpYnV0ZToiY2xhc3MiLGRlZmF1bHRUaGVtZToic3lzdGVtIixlbmFibGVTeXN0ZW06ITAsZGlzYWJsZVRyYW5zaXRpb25PbkNoYW5nZTohMCxjaGlsZHJlbjooMCxzLmpzeCkoZW8se2NoaWxkcmVuOigwLHMuanN4KSgiZGl2Iix7Y2xhc3NOYW1lOiJmbGV4IGZsZXgtcm93IGgtc2NyZWVuIHctc2NyZWVuIixjaGlsZHJlbjp0fSl9KX0pfSksKDAscy5qc3gpKGwubCQse30pXX0pfSldfSl9fSw4MDc5ODooKT0+e30sODg0Njg6KGUsdCxuKT0+e1Byb21pc2UucmVzb2x2ZSgpLnRoZW4obi5iaW5kKG4sMzIwODkpKX19LGU9Pnt2YXIgdD10PT5lKGUucz10KTtlLk8oMCxbOTMxLDUyMCw4NjIsMTkyLDE3MywzNDgsNzkxLDM1OF0sKCk9PnQoODg0NjgpKSxfTl9FPWUuTygpfV0pOw==",    //
     27640, //
     "application/javascript", //
     "/_next/static/chunks/app/layout-88eb661b8991283c.js/", //
     
};
}
