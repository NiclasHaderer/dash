
#pragma once
#include "files.hpp"
namespace duckdb {
const File FILE_NEXT_STATIC_CHUNKS_272_D4FF4AE2AF9386B2_JS = {
     // Content
     ""
     ""
     ""
     "VuY3Rpb24gcygpe2xldCBlPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoInNwYW4iKTtyZXR1cm4gZS5zZXRBdHRyaWJ1dGUoImRhdGEtcmFkaXgtZm9jdXMtZ3VhcmQiLCIiKSxlLnRhYkluZGV4PTAsZS5zdHlsZS5vdXRsaW5lPSJub25lIixlLnN0eWxlLm9wYWNpdHk9IjAiLGUuc3R5bGUucG9zaXRpb249ImZpeGVkIixlLnN0eWxlLnBvaW50ZXJFdmVudHM9Im5vbmUiLGV9fSw2OTM1OihlLHQscik9PnsidXNlIHN0cmljdCI7dmFyIGk9cig4MjUyOCksbj0iZnVuY3Rpb24iPT10eXBlb2YgT2JqZWN0LmlzP09iamVjdC5pczpmdW5jdGlvbihlLHQpe3JldHVybiBlPT09dCYmKDAhPT1lfHwxL2U9PTEvdCl8fGUhPWUmJnQhPXR9LG89aS51c2VTdGF0ZSxzPWkudXNlRWZmZWN0LGE9aS51c2VMYXlvdXRFZmZlY3QsbD1pLnVzZURlYnVnVmFsdWU7ZnVuY3Rpb24gZChlKXt2YXIgdD1lLmdldFNuYXBzaG90O2U9ZS52YWx1ZTt0cnl7dmFyIHI9dCgpO3JldHVybiFuKGUscil9Y2F0Y2goZSl7cmV0dXJuITB9fXZhciBjPSJ1bmRlZmluZWQiPT10eXBlb2Ygd2luZG93fHx2b2lkIDA9PT13aW5kb3cuZG9jdW1lbnR8fHZvaWQgMD09PXdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50P2Z1bmN0aW9uKGUsdCl7cmV0dXJuIHQoKX06ZnVuY3Rpb24oZSx0KXt2YXIgcj10KCksaT1vKHtpbnN0Ont2YWx1ZTpyLGdldFNuYXBzaG90OnR9fSksbj1pWzBdLmluc3QsYz1pWzFdO3JldHVybiBhKGZ1bmN0aW9uKCl7bi52YWx1ZT1yLG4uZ2V0U25hcHNob3Q9dCxkKG4pJiZjKHtpbnN0Om59KX0sW2Uscix0XSkscyhmdW5jdGlvbigpe3JldHVybiBkKG4pJiZjKHtpbnN0Om59KSxlKGZ1bmN0aW9uKCl7ZChuKSYmYyh7aW5zdDpufSl9KX0sW2VdKSxsKHIpLHJ9O3QudXNlU3luY0V4dGVybmFsU3RvcmU9dm9pZCAwIT09aS51c2VTeW5jRXh0ZXJuYWxTdG9yZT9pLnVzZVN5bmNFeHRlcm5hbFN0b3JlOmN9LDc0OTg6KGUsdCxyKT0+eyJ1c2Ugc3RyaWN0IjtyLmQodCx7QTooKT0+aX0pO2xldCBpPSgwLHIoNjE0OTgpLkEpKCJTaGFyZTIiLFtbImNpcmNsZSIse2N4OiIxOCIsY3k6IjUiLHI6IjMiLGtleToiZ3E4YWNkIn1dLFsiY2lyY2xlIix7Y3g6IjYiLGN5OiIxMiIscjoiMyIsa2V5OiJ3N25xZHcifV0sWyJjaXJjbGUiLHtjeDoiMTgiLGN5OiIxOSIscjoiMyIsa2V5OiIxeHQwZ2cifV0sWyJsaW5lIix7eDE6IjguNTkiLHgyOiIxNS40MiIseTE6IjEzLjUxIix5MjoiMTcuNDkiLGtleToiNDdteW5rIn1dLFsibGluZSIse3gxOiIxNS40MSIseDI6IjguNTkiLHkxOiI2LjUxIix5MjoiMTAuNDkiLGtleToiMW4zbWVpIn1dXSl9LDc5NjM6KGUsdCxyKT0+eyJ1c2Ugc3RyaWN0IjtyLmQodCx7cVc6KCk9Pmh9KTt2YXIgaSxuPXIoODI1MjgpLG89cig1NTMwNykscz1yKDg0NzU5KSxhPXIoNjI1OTEpLGw9cigzMDk2MCksZD1yKDE0Nzk2KSxjPSJkaXNtaXNzYWJsZUxheWVyLnVwZGF0ZSIsdT1uLmNyZWF0ZUNvbnRleHQoe2xheWVyczpuZXcgU2V0LGxheWVyc1dpdGhPdXRzaWRlUG9pbnRlckV2ZW50c0Rpc2FibGVkOm5ldyBTZXQsYnJhbmNoZXM6bmV3IFNldH0pLGg9bi5mb3J3YXJkUmVmKChlLHQpPT57dmFyIHIsaDtsZXR7ZGlzYWJsZU91dHNpZGVQb2ludGVyRXZlbnRzOmc9ITEsb25Fc2NhcGVLZXlEb3duOnksb25Qb2ludGVyRG93bk91dHNpZGU6bSxvbkZvY3VzT3V0c2lkZTpiLG9uSW50ZXJhY3RPdXRzaWRlOl8sb25EaXNtaXNzOnYsLi4ud309ZSxUPW4udXNlQ29udGV4dCh1KSxbRSxTXT1uLnVzZVN0YXRlKG51bGwpLEE9bnVsbCE9PShoPW51bGw9PUU/dm9pZCAwOkUub3duZXJEb2N1bWVudCkmJnZvaWQgMCE9PWg/aDpudWxsPT09KHI9Z2xvYmFsVGhpcyl8fHZvaWQgMD09PXI/dm9pZCAwOnIuZG9jdW1lbnQsWyx4XT1uLnVzZVN0YXRlKHt9KSxPPSgwLGEucykodCxlPT5TKGUpKSxSPUFycmF5LmZyb20oVC5sYXllcnMpLFtJXT1bLi4uVC5sYXllcnNXaXRoT3V0c2lkZVBvaW50ZXJFdmVudHNEaXNhYmxlZF0uc2xpY2UoLTEpLE49Ui5pbmRleE9mKEkpLEw9RT9SLmluZGV4T2YoRSk6LTEsRD1ULmxheWVyc1dpdGhPdXRzaWRlUG9pbnRlckV2ZW50c0Rpc2FibGVkLnNpemU+MCxDPUw+PU4sQj1mdW5jdGlvbihlKXt2YXIgdDtsZXQgcj1hcmd1bWVudHMubGVuZ3RoPjEmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXT9hcmd1bWVudHNbMV06bnVsbD09PSh0PWdsb2JhbFRoaXMpfHx2b2lkIDA9PT10P3ZvaWQgMDp0LmRvY3VtZW50LGk9KDAsbC5jKShlKSxvPW4udXNlUmVmKCExKSxzPW4udXNlUmVmKCgpPT57fSk7cmV0dXJuIG4udXNlRWZmZWN0KCgpPT57bGV0IGU9ZT0+e2lmKGUudGFyZ2V0JiYhby5jdXJyZW50KXtsZXQgdD1mdW5jdGlvbigpe2YoImRpc21pc3NhYmxlTGF5ZXIucG9pbnRlckRvd25PdXRzaWRlIixpLG4se2Rpc2NyZXRlOiEwfSl9LG49e29yaWdpbmFsRXZlbnQ6ZX07InRvdWNoIj09PWUucG9pbnRlclR5cGU/KHIucmVtb3ZlRXZlbnRMaXN0ZW5lcigiY2xpY2siLHMuY3VycmVudCkscy5jdXJyZW50PXQsci5hZGRFdmVudExpc3RlbmVyKCJjbGljayIscy5jdXJyZW50LHtvbmNlOiEwfSkpOnQoKX1lbHNlIHIucmVtb3ZlRXZlbnRMaXN0ZW5lcigiY2xpY2siLHMuY3VycmVudCk7by5jdXJyZW50PSExfSx0PXdpbmRvdy5zZXRUaW1lb3V0KCgpPT57ci5hZGRFdmVudExpc3RlbmVyKCJwb2ludGVyZG93biIsZSl9LDApO3JldHVybigpPT57d2luZG93LmNsZWFyVGltZW91dCh0KSxyLnJlbW92ZUV2ZW50TGlzdGVuZXIoInBvaW50ZXJkb3duIixlKSxyLnJlbW92ZUV2ZW50TGlzdGVuZXIoImNsaWNrIixzLmN1cnJlbnQpfX0sW3IsaV0pLHtvblBvaW50ZXJEb3duQ2FwdHVyZTooKT0+by5jdXJyZW50PSEwfX0oZT0+e2xldCB0PWUudGFyZ2V0LHI9Wy4uLlQuYnJhbmNoZXNdLnNvbWUoZT0+ZS5jb250YWlucyh0KSk7IUN8fHJ8fChudWxsPT1tfHxtKGUpLG51bGw9PV98fF8oZSksZS5kZWZhdWx0UHJldmVudGVkfHxudWxsPT12fHx2KCkpfSxBKSxNPWZ1bmN0aW9uKGUpe3ZhciB0O2xldCByPWFyZ3VtZW50cy5sZW5ndGg+MSYmdm9pZCAwIT09YXJndW1lbnRzWzFdP2FyZ3VtZW50c1sxXTpudWxsPT09KHQ9Z2xvYmFsVGhpcyl8fHZvaWQgMD09PXQ/dm9pZCAwOnQuZG9jdW1lbnQsaT0oMCxsLmMpKGUpLG89bi51c2VSZWYoITEpO3JldHVybiBuLnVzZUVmZmVjdCgoKT0+e2xldCBlPWU9PntlLnRhcmdldCYmIW8uY3VycmVudCYmZigiZGlzbWlzc2FibGVMYXllci5mb2N1c091dHNpZGUiLGkse29yaWdpbmFsRXZlbnQ6ZX0se2Rpc2NyZXRlOiExfSl9O3JldHVybiByLmFkZEV2ZW50TGlzdGVuZXIoImZvY3VzaW4iLGUpLCgpPT5yLnJlbW92ZUV2ZW50TGlzdGVuZXIoImZvY3VzaW4iLGUpfSxbcixpXSkse29uRm9jdXNDYXB0dXJlOigpPT5vLmN1cnJlbnQ9ITAsb25CbHVyQ2FwdHVyZTooKT0+by5jdXJyZW50PSExfX0oZT0+e2xldCB0PWUudGFyZ2V0O1suLi5ULmJyYW5jaGVzXS5zb21lKGU9PmUuY29udGFpbnModCkpfHwobnVsbD09Ynx8YihlKSxudWxsPT1ffHxfKGUpLGUuZGVmYXVsdFByZXZlbnRlZHx8bnVsbD09dnx8digpKX0sQSk7cmV0dXJuIWZ1bmN0aW9uKGUsdD1nbG9iYWxUaGlzPy5kb2N1bWVudCl7bGV0IHI9KDAsbC5jKShlKTtuLnVzZUVmZmVjdCgoKT0+e2xldCBlPWU9PnsiRXNjYXBlIj09PWUua2V5JiZyKGUpfTtyZXR1cm4gdC5hZGRFdmVudExpc3RlbmVyKCJrZXlkb3duIixlLHtjYXB0dXJlOiEwfSksKCk9PnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigia2V5ZG93biIsZSx7Y2FwdHVyZTohMH0pfSxbcix0XSl9KGU9PntMPT09VC5sYXllcnMuc2l6ZS0xJiYobnVsbD09eXx8eShlKSwhZS5kZWZhdWx0UHJldmVudGVkJiZ2JiYoZS5wcmV2ZW50RGVmYXVsdCgpLHYoKSkpfSxBKSxuLnVzZUVmZmVjdCgoKT0+e2lmKEUpcmV0dXJuIGcmJigwPT09VC5sYXllcnNXaXRoT3V0c2lkZVBvaW50ZXJFdmVudHNEaXNhYmxlZC5zaXplJiYoaT1BLmJvZHkuc3R5bGUucG9pbnRlckV2ZW50cyxBLmJvZHkuc3R5bGUucG9pbnRlckV2ZW50cz0ibm9uZSIpLFQubGF5ZXJzV2l0aE91dHNpZGVQb2ludGVyRXZlbnRzRGlzYWJsZWQuYWRkKEUpKSxULmxheWVycy5hZGQoRSkscCgpLCgpPT57ZyYmMT09PVQubGF5ZXJzV2l0aE91dHNpZGVQb2ludGVyRXZlbnRzRGlzYWJsZWQuc2l6ZSYmKEEuYm9keS5zdHlsZS5wb2ludGVyRXZlbnRzPWkpfX0sW0UsQSxnLFRdKSxuLnVzZUVmZmVjdCgoKT0+KCk9PntFJiYoVC5sYXllcnMuZGVsZXRlKEUpLFQubGF5ZXJzV2l0aE91dHNpZGVQb2ludGVyRXZlbnRzRGlzYWJsZWQuZGVsZXRlKEUpLHAoKSl9LFtFLFRdKSxuLnVzZUVmZmVjdCgoKT0+e2xldCBlPSgpPT54KHt9KTtyZXR1cm4gZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihjLGUpLCgpPT5kb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKGMsZSl9LFtdKSwoMCxkLmpzeCkocy5zRy5kaXYsey4uLncscmVmOk8sc3R5bGU6e3BvaW50ZXJFdmVudHM6RD9DPyJhdXRvIjoibm9uZSI6dm9pZCAwLC4uLmUuc3R5bGV9LG9uRm9jdXNDYXB0dXJlOigwLG8ubSkoZS5vbkZvY3VzQ2FwdHVyZSxNLm9uRm9jdXNDYXB0dXJlKSxvbkJsdXJDYXB0dXJlOigwLG8ubSkoZS5vbkJsdXJDYXB0dXJlLE0ub25CbHVyQ2FwdHVyZSksb25Qb2ludGVyRG93bkNhcHR1cmU6KDAsby5tKShlLm9uUG9pbnRlckRvd25DYXB0dXJlLEIub25Qb2ludGVyRG93bkNhcHR1cmUpfSl9KTtmdW5jdGlvbiBwKCl7bGV0IGU9bmV3IEN1c3RvbUV2ZW50KGMpO2RvY3VtZW50LmRpc3BhdGNoRXZlbnQoZSl9ZnVuY3Rpb24gZihlLHQscixpKXtsZXR7ZGlzY3JldGU6bn09aSxvPXIub3JpZ2luYWxFdmVudC50YXJnZXQsYT1uZXcgQ3VzdG9tRXZlbnQoZSx7YnViYmxlczohMSxjYW5jZWxhYmxlOiEwLGRldGFpbDpyfSk7dCYmby5hZGRFdmVudExpc3RlbmVyKGUsdCx7b25jZTohMH0pLG4/KDAscy5oTykobyxhKTpvLmRpc3BhdGNoRXZlbnQoYSl9aC5kaXNwbGF5TmFtZT0iRGlzbWlzc2FibGVMYXllciIsbi5mb3J3YXJkUmVmKChlLHQpPT57bGV0IHI9bi51c2VDb250ZXh0KHUpLGk9bi51c2VSZWYobnVsbCksbz0oMCxhLnMpKHQsaSk7cmV0dXJuIG4udXNlRWZmZWN0KCgpPT57bGV0IGU9aS5jdXJyZW50O2lmKGUpcmV0dXJuIHIuYnJhbmNoZXMuYWRkKGUpLCgpPT57ci5icmFuY2hlcy5kZWxldGUoZSl9fSxbci5icmFuY2hlc10pLCgwLGQuanN4KShzLnNHLmRpdix7Li4uZSxyZWY6b30pfSkuZGlzcGxheU5hbWU9IkRpc21pc3NhYmxlTGF5ZXJCcmFuY2gifSw4MTIwOihlLHQscik9PnsidXNlIHN0cmljdCI7dmFyIGk7ci5kKHQse3k6KCk9Pml9KSxmdW5jdGlvbihlKXtlW2UuU0VDT05EPTBdPSJTRUNPTkQiLGVbZS5NSUxMSVNFQ09ORD0xXT0iTUlMTElTRUNPTkQiLGVbZS5NSUNST1NFQ09ORD0yXT0iTUlDUk9TRUNPTkQiLGVbZS5OQU5PU0VDT05EPTNdPSJOQU5PU0VDT05EIn0oaXx8KGk9e30pKX0sODQ5NjooZSx0LHIpPT57InVzZSBzdHJpY3QiO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KSx0LnVzZVRhYk92ZXJmbG93PXZvaWQgMDtsZXQgaT1yKDgyNTI4KSxuPXIoOTUxNDIpLG89cig1NjM1OSkscz1yKDE0NjEwKTt0LnVzZVRhYk92ZXJmbG93PShlLHQscixhKT0+e2xldCBsPWkudXNlUmVmKCEwKSxkPWkudXNlUmVmKCExKSxjPWkudXNlUmVmKG5ldyBuLlJlY3QoMCwwLDAsMCkpLHU9aS51c2VSZWYobnVsbCksW2gscF09aS51c2VTdGF0ZSgwKSxmPWkudXNlUmVmKCExKSxbZyx5XT1pLnVzZVN0YXRlKFtdKSxtPWkudXNlUmVmKDApO2kudXNlTGF5b3V0RWZmZWN0KCgpPT57Zi5jdXJyZW50PSExfSxbZS5nZXRTZWxlY3RlZE5vZGUoKSxlLmdldFJlY3QoKS53aWR0aCxlLmdldFJlY3QoKS5oZWlnaHRdKSxpLnVzZUxheW91dEVmZmVjdCgoKT0+e0UoKX0pO2xldCBiPXUuY3VycmVudDtpLnVzZUVmZmVjdCgoKT0+e2lmKGIpcmV0dXJuIGIuYWRkRXZlbnRMaXN0ZW5lcigid2hlZWwiLF8se3Bhc3NpdmU6ITF9KSwoKT0+e2IucmVtb3ZlRXZlbnRMaXN0ZW5lcigid2hlZWwiLF8pfX0sW2JdKTtsZXQgXz1lPT57ZS5wcmV2ZW50RGVmYXVsdCgpfSx2PWU9PnQ9PT1zLk9yaWVudGF0aW9uLkhPUlo/ZS54OmUueSx3PWU9PnQ9PT1zLk9yaWVudGF0aW9uLkhPUlo/ZS5nZXRSaWdodCgpOmUuZ2V0Qm90dG9tKCks"
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     "PW4/dm9pZCAwOm4ueSxldD0obnVsbD09PShhPVguYXJyb3cpfHx2b2lkIDA9PT1hP3ZvaWQgMDphLmNlbnRlck9mZnNldCkhPT0wLFtlcixlaV09aS51c2VTdGF0ZSgpO3JldHVybigwLGVJLk4pKCgpPT57SSYmZWkod2luZG93LmdldENvbXB1dGVkU3R5bGUoSSkuekluZGV4KX0sW0ldKSwoMCxlUy5qc3gpKCJkaXYiLHtyZWY6SC5zZXRGbG9hdGluZywiZGF0YS1yYWRpeC1wb3BwZXItY29udGVudC13cmFwcGVyIjoiIixzdHlsZTp7Li4uWSx0cmFuc2Zvcm06Wj9ZLnRyYW5zZm9ybToidHJhbnNsYXRlKDAsIC0yMDAlKSIsbWluV2lkdGg6Im1heC1jb250ZW50Iix6SW5kZXg6ZXIsIi0tcmFkaXgtcG9wcGVyLXRyYW5zZm9ybS1vcmlnaW4iOltudWxsPT09KGQ9WC50cmFuc2Zvcm1PcmlnaW4pfHx2b2lkIDA9PT1kP3ZvaWQgMDpkLngsbnVsbD09PShjPVgudHJhbnNmb3JtT3JpZ2luKXx8dm9pZCAwPT09Yz92b2lkIDA6Yy55XS5qb2luKCIgIiksLi4uKG51bGw9PT0odT1YLmhpZGUpfHx2b2lkIDA9PT11P3ZvaWQgMDp1LnJlZmVyZW5jZUhpZGRlbikmJnt2aXNpYmlsaXR5OiJoaWRkZW4iLHBvaW50ZXJFdmVudHM6Im5vbmUifX0sZGlyOmUuZGlyLGNoaWxkcmVuOigwLGVTLmpzeCkoZWose3Njb3BlOmYscGxhY2VkU2lkZTokLG9uQXJyb3dDaGFuZ2U6QixhcnJvd1g6USxhcnJvd1k6ZWUsc2hvdWxkSGlkZUFycm93OmV0LGNoaWxkcmVuOigwLGVTLmpzeCkoZUUuc0cuZGl2LHsiZGF0YS1zaWRlIjokLCJkYXRhLWFsaWduIjpLLC4uLk8scmVmOkQsc3R5bGU6ey4uLk8uc3R5bGUsYW5pbWF0aW9uOlo/dm9pZCAwOiJub25lIn19KX0pfSl9KTtlSC5kaXNwbGF5TmFtZT1lUDt2YXIgZVk9IlBvcHBlckFycm93IixlVz17dG9wOiJib3R0b20iLHJpZ2h0OiJsZWZ0Iixib3R0b206InRvcCIsbGVmdDoicmlnaHQifSxlVj1pLmZvcndhcmRSZWYoZnVuY3Rpb24oZSx0KXtsZXR7X19zY29wZVBvcHBlcjpyLC4uLml9PWUsbj1leihlWSxyKSxvPWVXW24ucGxhY2VkU2lkZV07cmV0dXJuKDAsZVMuanN4KSgic3BhbiIse3JlZjpuLm9uQXJyb3dDaGFuZ2Usc3R5bGU6e3Bvc2l0aW9uOiJhYnNvbHV0ZSIsbGVmdDpuLmFycm93WCx0b3A6bi5hcnJvd1ksW29dOjAsdHJhbnNmb3JtT3JpZ2luOnt0b3A6IiIscmlnaHQ6IjAgMCIsYm90dG9tOiJjZW50ZXIgMCIsbGVmdDoiMTAwJSAwIn1bbi5wbGFjZWRTaWRlXSx0cmFuc2Zvcm06e3RvcDoidHJhbnNsYXRlWSgxMDAlKSIscmlnaHQ6InRyYW5zbGF0ZVkoNTAlKSByb3RhdGUoOTBkZWcpIHRyYW5zbGF0ZVgoLTUwJSkiLGJvdHRvbToicm90YXRlKDE4MGRlZykiLGxlZnQ6InRyYW5zbGF0ZVkoNTAlKSByb3RhdGUoLTkwZGVnKSB0cmFuc2xhdGVYKDUwJSkifVtuLnBsYWNlZFNpZGVdLHZpc2liaWxpdHk6bi5zaG91bGRIaWRlQXJyb3c/ImhpZGRlbiI6dm9pZCAwfSxjaGlsZHJlbjooMCxlUy5qc3gpKGVBLHsuLi5pLHJlZjp0LHN0eWxlOnsuLi5pLnN0eWxlLGRpc3BsYXk6ImJsb2NrIn19KX0pfSk7ZnVuY3Rpb24gZVooZSl7cmV0dXJuIG51bGwhPT1lfWVWLmRpc3BsYXlOYW1lPWVZO3ZhciBlRz1lPT4oe25hbWU6InRyYW5zZm9ybU9yaWdpbiIsb3B0aW9uczplLGZuKHQpe3ZhciByLGksbixvLHM7bGV0e3BsYWNlbWVudDphLHJlY3RzOmwsbWlkZGxld2FyZURhdGE6ZH09dCxjPShudWxsPT09KHI9ZC5hcnJvdyl8fHZvaWQgMD09PXI/dm9pZCAwOnIuY2VudGVyT2Zmc2V0KSE9PTAsdT1jPzA6ZS5hcnJvd1dpZHRoLGg9Yz8wOmUuYXJyb3dIZWlnaHQsW3AsZl09ZVgoYSksZz17c3RhcnQ6IjAlIixjZW50ZXI6IjUwJSIsZW5kOiIxMDAlIn1bZl0seT0obnVsbCE9PShvPW51bGw9PT0oaT1kLmFycm93KXx8dm9pZCAwPT09aT92b2lkIDA6aS54KSYmdm9pZCAwIT09bz9vOjApK3UvMixtPShudWxsIT09KHM9bnVsbD09PShuPWQuYXJyb3cpfHx2b2lkIDA9PT1uP3ZvaWQgMDpuLnkpJiZ2b2lkIDAhPT1zP3M6MCkraC8yLGI9IiIsXz0iIjtyZXR1cm4iYm90dG9tIj09PXA/KGI9Yz9nOiIiLmNvbmNhdCh5LCJweCIpLF89IiIuY29uY2F0KC1oLCJweCIpKToidG9wIj09PXA/KGI9Yz9nOiIiLmNvbmNhdCh5LCJweCIpLF89IiIuY29uY2F0KGwuZmxvYXRpbmcuaGVpZ2h0K2gsInB4IikpOiJyaWdodCI9PT1wPyhiPSIiLmNvbmNhdCgtaCwicHgiKSxfPWM/ZzoiIi5jb25jYXQobSwicHgiKSk6ImxlZnQiPT09cCYmKGI9IiIuY29uY2F0KGwuZmxvYXRpbmcud2lkdGgraCwicHgiKSxfPWM/ZzoiIi5jb25jYXQobSwicHgiKSkse2RhdGE6e3g6Yix5Ol99fX19KTtmdW5jdGlvbiBlWChlKXtsZXRbdCxyPSJjZW50ZXIiXT1lLnNwbGl0KCItIik7cmV0dXJuW3Qscl19dmFyIGUkPWVVLGVLPWVrLGVKPWVILGVxPWVWfSwyNjU5MTooZSx0LHIpPT57InVzZSBzdHJpY3QiO3IuZCh0LHtEWDooKT0+cyx4VjooKT0+bH0pO3ZhciBpPXIoODI1MjgpLG49cig2MjU5MSksbz1yKDE0Nzk2KSxzPWkuZm9yd2FyZFJlZigoZSx0KT0+e2xldHtjaGlsZHJlbjpyLC4uLm59PWUscz1pLkNoaWxkcmVuLnRvQXJyYXkociksbD1zLmZpbmQoZCk7aWYobCl7bGV0IGU9bC5wcm9wcy5jaGlsZHJlbixyPXMubWFwKHQ9PnQhPT1sP3Q6aS5DaGlsZHJlbi5jb3VudChlKT4xP2kuQ2hpbGRyZW4ub25seShudWxsKTppLmlzVmFsaWRFbGVtZW50KGUpP2UucHJvcHMuY2hpbGRyZW46bnVsbCk7cmV0dXJuKDAsby5qc3gpKGEsey4uLm4scmVmOnQsY2hpbGRyZW46aS5pc1ZhbGlkRWxlbWVudChlKT9pLmNsb25lRWxlbWVudChlLHZvaWQgMCxyKTpudWxsfSl9cmV0dXJuKDAsby5qc3gpKGEsey4uLm4scmVmOnQsY2hpbGRyZW46cn0pfSk7cy5kaXNwbGF5TmFtZT0iU2xvdCI7dmFyIGE9aS5mb3J3YXJkUmVmKChlLHQpPT57bGV0e2NoaWxkcmVuOnIsLi4ub309ZTtpZihpLmlzVmFsaWRFbGVtZW50KHIpKXtsZXQgZT1mdW5jdGlvbihlKXtsZXQgdD1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUucHJvcHMsInJlZiIpPy5nZXQscj10JiYiaXNSZWFjdFdhcm5pbmciaW4gdCYmdC5pc1JlYWN0V2FybmluZztyZXR1cm4gcj9lLnJlZjoocj0odD1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsInJlZiIpPy5nZXQpJiYiaXNSZWFjdFdhcm5pbmciaW4gdCYmdC5pc1JlYWN0V2FybmluZyk/ZS5wcm9wcy5yZWY6ZS5wcm9wcy5yZWZ8fGUucmVmfShyKTtyZXR1cm4gaS5jbG9uZUVsZW1lbnQocix7Li4uZnVuY3Rpb24oZSx0KXtsZXQgcj17Li4udH07Zm9yKGxldCBpIGluIHQpe2xldCBuPWVbaV0sbz10W2ldOy9eb25bQS1aXS8udGVzdChpKT9uJiZvP3JbaV09KC4uLmUpPT57byguLi5lKSxuKC4uLmUpfTpuJiYocltpXT1uKToic3R5bGUiPT09aT9yW2ldPXsuLi5uLC4uLm99OiJjbGFzc05hbWUiPT09aSYmKHJbaV09W24sb10uZmlsdGVyKEJvb2xlYW4pLmpvaW4oIiAiKSl9cmV0dXJuey4uLmUsLi4ucn19KG8sci5wcm9wcykscmVmOnQ/KDAsbi50KSh0LGUpOmV9KX1yZXR1cm4gaS5DaGlsZHJlbi5jb3VudChyKT4xP2kuQ2hpbGRyZW4ub25seShudWxsKTpudWxsfSk7YS5kaXNwbGF5TmFtZT0iU2xvdENsb25lIjt2YXIgbD0oe2NoaWxkcmVuOmV9KT0+KDAsby5qc3gpKG8uRnJhZ21lbnQse2NoaWxkcmVuOmV9KTtmdW5jdGlvbiBkKGUpe3JldHVybiBpLmlzVmFsaWRFbGVtZW50KGUpJiZlLnR5cGU9PT1sfX0sMjY4MjY6KGUsdCxyKT0+eyJ1c2Ugc3RyaWN0IjtyLmQodCx7QTooKT0+aX0pO2xldCBpPSgwLHIoNjE0OTgpLkEpKCJDaGVjayIsW1sicGF0aCIse2Q6Ik0yMCA2IDkgMTdsLTUtNSIsa2V5OiIxZ21mMmMifV1dKX0sMjgwNzM6KGUsdCxyKT0+eyJ1c2Ugc3RyaWN0IjtyLmQodCx7QTooKT0+aX0pO2xldCBpPSgwLHIoNjE0OTgpLkEpKCJDaGV2cm9uVXAiLFtbInBhdGgiLHtkOiJtMTggMTUtNi02LTYgNiIsa2V5OiIxNTN1ZHoifV1dKX0sMjgyOTc6KGUsdCxyKT0+eyJ1c2Ugc3RyaWN0IjtPYmplY3QuZGVmaW5lUHJvcGVydHkodCwiX19lc01vZHVsZSIse3ZhbHVlOiEwfSksdC5zaG93UG9wdXA9dm9pZCAwO2xldCBpPXIoODI1MjgpLG49cigzNDEyMyksbz1yKDU4NDQ5KSxzPXIoNDQ2MjgpO3Quc2hvd1BvcHVwPWZ1bmN0aW9uKGUsdCxyLHMsbCxkKXt2YXIgYztsZXQgdT1zLmdldFJvb3REaXYoKSxoPXMuZ2V0Q2xhc3NOYW1lLHA9ZS5vd25lckRvY3VtZW50LGY9ZS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSxnPW51bGwhPT0oYz1udWxsPT11P3ZvaWQgMDp1LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpKSYmdm9pZCAwIT09Yz9jOm5ldyBET01SZWN0KDAsMCwxMDAsMTAwKSx5PXAuY3JlYXRlRWxlbWVudCgiZGl2Iik7eS5jbGFzc05hbWU9aChvLkNMQVNTRVMuRkxFWExBWU9VVF9fUE9QVVBfTUVOVV9DT05UQUlORVIpLGYubGVmdDxnLmxlZnQrZy53aWR0aC8yP3kuc3R5bGUubGVmdD1mLmxlZnQtZy5sZWZ0KyJweCI6eS5zdHlsZS5yaWdodD1nLnJpZ2h0LWYucmlnaHQrInB4IixmLnRvcDxnLnRvcCtnLmhlaWdodC8yP3kuc3R5bGUudG9wPWYudG9wLWcudG9wKyJweCI6eS5zdHlsZS5ib3R0b209Zy5ib3R0b20tZi5ib3R0b20rInB4IixuLkRyYWdEcm9wLmluc3RhbmNlLmFkZEdsYXNzKCgpPT5tKCkpLG4uRHJhZ0Ryb3AuaW5zdGFuY2Uuc2V0R2xhc3NDdXJzb3JPdmVycmlkZSgiZGVmYXVsdCIpLHUmJnUuYXBwZW5kQ2hpbGQoeSk7bGV0IG09KCk9PntzLmhpZGVQb3J0YWwoKSxuLkRyYWdEcm9wLmluc3RhbmNlLmhpZGVHbGFzcygpLHUmJnUucmVtb3ZlQ2hpbGQoeSkseS5yZW1vdmVFdmVudExpc3RlbmVyKCJtb3VzZWRvd24iLGIpLHAucmVtb3ZlRXZlbnRMaXN0ZW5lcigibW91c2Vkb3duIixfKX0sYj1lPT57ZS5zdG9wUHJvcGFnYXRpb24oKX0sXz1lPT57bSgpfTt5LmFkZEV2ZW50TGlzdGVuZXIoIm1vdXNlZG93biIsYikscC5hZGRFdmVudExpc3RlbmVyKCJtb3VzZWRvd24iLF8pLHMuc2hvd1BvcnRhbChpLmNyZWF0ZUVsZW1lbnQoYSx7Y3VycmVudERvY3VtZW50OnAsb25TZWxlY3Q6cixvbkhpZGU6bSxpdGVtczp0LGNsYXNzTmFtZU1hcHBlcjpoLGxheW91dDpzLGljb25GYWN0b3J5OmwsdGl0bGVGYWN0b3J5OmR9KSx5KX07bGV0IGE9ZT0+e2xldHtpdGVtczp0LG9uSGlkZTpyLG9uU2VsZWN0Om4sY2xhc3NOYW1lTWFwcGVyOmEsbGF5b3V0OmwsaWNvbkZhY3Rvcnk6ZCx0aXRsZUZhY3Rvcnk6Y309ZSx1PShlLHQpPT57bihlKSxyKCksdC5zdG9wUHJvcGFnYXRpb24oKX0saD10Lm1hcCgoZSx0KT0+aS5jcmVhdGVFbGVtZW50KCJkaXYiLHtrZXk6ZS5pbmRleCxjbGFzc05hbWU6YShvLkNMQVNTRVMuRkxFWExBWU9VVF9fUE9QVVBfTUVOVV9JVEVNKSwiZGF0YS1sYXlvdXQtcGF0aCI6Ii9wb3B1cC1tZW51L3RiIit0LG9uQ2xpY2s6dD0+dShlLHQpLHRpdGxlOmUubm9kZS5nZXRIZWxwVGV4dCgpfSxlLm5vZGUuZ2V0TW9kZWwoKS5pc0xlZ2FjeU92ZXJmbG93TWVudSgpP2Uubm9kZS5fZ2V0TmFtZUZvck92ZXJmbG93TWVudSgpOmkuY3JlYXRlRWxlbWVudChzLlRhYkJ1dHRvblN0YW1wLHtub2RlOmUubm9kZSxsYXlvdXQ6bCxpY29uRmFjdG9yeTpkLHRpdGxlRmFjdG9yeTpjfSkpKTtyZXR1cm4gaS5jcmVhdGVFbGVtZW50KCJkaXYiLHtjbGFzc05hbWU6YShvLkNMQVNTRVMuRkxFWExBWU9VVF9fUE9QVVBfTUVOVSksImRhdGEtbGF5b3V0LXBhdGgiOiIvcG9wdXAtbWVudSJ9LGgpfX0sMjkyOTk6KGUsdCxyKT0+eyJ1c2Ugc3RyaWN0IjtyLmQodCx7bCQ6KCk9PlQsb1I6KCk9Pm19KTt2YXIgaT1yKDgyNTI4KSxuPXIoMTQ3MDUpLG89ZT0+e3N3aXRjaChlKXtjYXNlInN1Y2Nlc3MiOnJldHVybiBsO2Nhc2UiaW5mbyI6cmV0dXJuIGM7Y2FzZSJ3YXJuaW5nIjpyZXR1cm4gZDtjYXNlImVycm9yIjpyZXR1cm4gdTtkZWZhdWx0OnJldHVybiBudWxsfX0scz1BcnJheSgxMikuZmlsbCgwKSxhPWU9PntsZXR7dmlzaWJsZTp0LGNsYXNzTmFtZTpyfT1lO3JldHVybiBpLmNyZWF0ZUVsZW1lbnQoImRpdiIse2NsYXNzTmFtZTpbInNvbm5lci1sb2FkaW5nLXdyYXBwZXIiLHJdLmZpbHRlcihCb29sZWFuKS5qb2luKCIgIiksImRhdGEtdmlzaWJsZSI6dH0saS5jcmVhdGVFbGVtZW50KCJkaXYiLHtjbGFzc05hbWU6InNvbm5lci1zcGlubmVyIn0scy5tYXAoKGUsdCk9PmkuY3JlYXRlRWxlbWVudCgiZGl2Iix7Y2xhc3NOYW1lOiJzb25uZXItbG9hZGluZy1iYXIiLGtleToic3Bpbm5lci"
     ""
     ""
     ""
     ""
     ""
     "LCJweCIpOmV9KX0ibnVtYmVyIj09dHlwZW9mIGV8fCJzdHJpbmciPT10eXBlb2YgZT9vKGUpOiJvYmplY3QiPT10eXBlb2YgZT9bInRvcCIsInJpZ2h0IiwiYm90dG9tIiwibGVmdCJdLmZvckVhY2godD0+e3ZvaWQgMD09PWVbdF0/c1siIi5jb25jYXQoaSwiLSIpLmNvbmNhdCh0KV09bjpzWyIiLmNvbmNhdChpLCItIikuY29uY2F0KHQpXT0ibnVtYmVyIj09dHlwZW9mIGVbdF0/IiIuY29uY2F0KGVbdF0sInB4Iik6ZVt0XX0pOm8obil9KSxzKX0sb25CbHVyOmU9Pnt6LmN1cnJlbnQmJiFlLmN1cnJlbnRUYXJnZXQuY29udGFpbnMoZS5yZWxhdGVkVGFyZ2V0KSYmKHouY3VycmVudD0hMSxqLmN1cnJlbnQmJihqLmN1cnJlbnQuZm9jdXMoe3ByZXZlbnRTY3JvbGw6ITB9KSxqLmN1cnJlbnQ9bnVsbCkpfSxvbkZvY3VzOmU9PntlLnRhcmdldCBpbnN0YW5jZW9mIEhUTUxFbGVtZW50JiYiZmFsc2UiPT09ZS50YXJnZXQuZGF0YXNldC5kaXNtaXNzaWJsZXx8ei5jdXJyZW50fHwoei5jdXJyZW50PSEwLGouY3VycmVudD1lLnJlbGF0ZWRUYXJnZXQpfSxvbk1vdXNlRW50ZXI6KCk9PkMoITApLG9uTW91c2VNb3ZlOigpPT5DKCEwKSxvbk1vdXNlTGVhdmU6KCk9PntCfHxDKCExKX0sb25Qb2ludGVyRG93bjplPT57ZS50YXJnZXQgaW5zdGFuY2VvZiBIVE1MRWxlbWVudCYmImZhbHNlIj09PWUudGFyZ2V0LmRhdGFzZXQuZGlzbWlzc2libGV8fE0oITApfSxvblBvaW50ZXJVcDooKT0+TSghMSl9LE8uZmlsdGVyKGU9PiFlLnBvc2l0aW9uJiYwPT09bnx8ZS5wb3NpdGlvbj09PXQpLm1hcCgobixvKT0+e3ZhciBzLGQ7cmV0dXJuIGkuY3JlYXRlRWxlbWVudCh2LHtrZXk6bi5pZCxpY29uczpTLGluZGV4Om8sdG9hc3Q6bixkZWZhdWx0UmljaENvbG9yczpwLGR1cmF0aW9uOm51bGwhPShzPW51bGw9PWI/dm9pZCAwOmIuZHVyYXRpb24pP3M6ZixjbGFzc05hbWU6bnVsbD09Yj92b2lkIDA6Yi5jbGFzc05hbWUsZGVzY3JpcHRpb25DbGFzc05hbWU6bnVsbD09Yj92b2lkIDA6Yi5kZXNjcmlwdGlvbkNsYXNzTmFtZSxpbnZlcnQ6cix2aXNpYmxlVG9hc3RzOm0sY2xvc2VCdXR0b246bnVsbCE9KGQ9bnVsbD09Yj92b2lkIDA6Yi5jbG9zZUJ1dHRvbik/ZDpsLGludGVyYWN0aW5nOkIscG9zaXRpb246dCxzdHlsZTpudWxsPT1iP3ZvaWQgMDpiLnN0eWxlLHVuc3R5bGVkOm51bGw9PWI/dm9pZCAwOmIudW5zdHlsZWQsY2xhc3NOYW1lczpudWxsPT1iP3ZvaWQgMDpiLmNsYXNzTmFtZXMsY2FuY2VsQnV0dG9uU3R5bGU6bnVsbD09Yj92b2lkIDA6Yi5jYW5jZWxCdXR0b25TdHlsZSxhY3Rpb25CdXR0b25TdHlsZTpudWxsPT1iP3ZvaWQgMDpiLmFjdGlvbkJ1dHRvblN0eWxlLHJlbW92ZVRvYXN0OkgsdG9hc3RzOk8uZmlsdGVyKGU9PmUucG9zaXRpb249PW4ucG9zaXRpb24pLGhlaWdodHM6Ti5maWx0ZXIoZT0+ZS5wb3NpdGlvbj09bi5wb3NpdGlvbiksc2V0SGVpZ2h0czpMLGV4cGFuZEJ5RGVmYXVsdDphLGdhcDpULGxvYWRpbmdJY29uOkUsZXhwYW5kZWQ6RCxwYXVzZVdoZW5QYWdlSXNIaWRkZW46eCxzd2lwZURpcmVjdGlvbnM6ZS5zd2lwZURpcmVjdGlvbnN9KX0pKTpudWxsfSkpfSl9LDMwNTg3OihlLHQscik9PnsidXNlIHN0cmljdCI7ci5kKHQse0E6KCk9Pml9KTtsZXQgaT0oMCxyKDYxNDk4KS5BKSgiQ29weSIsW1sicmVjdCIse3dpZHRoOiIxNCIsaGVpZ2h0OiIxNCIseDoiOCIseToiOCIscng6IjIiLHJ5OiIyIixrZXk6IjE3anllYSJ9XSxbInBhdGgiLHtkOiJNNCAxNmMtMS4xIDAtMi0uOS0yLTJWNGMwLTEuMS45LTIgMi0yaDEwYzEuMSAwIDIgLjkgMiAyIixrZXk6InppeDl1ZiJ9XV0pfSwzMDY4MjplPT57IWZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3ZhciB0PXsxMTQ6ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdChlKXtpZigic3RyaW5nIiE9dHlwZW9mIGUpdGhyb3cgVHlwZUVycm9yKCJQYXRoIG11c3QgYmUgYSBzdHJpbmcuIFJlY2VpdmVkICIrSlNPTi5zdHJpbmdpZnkoZSkpfWZ1bmN0aW9uIHIoZSx0KXtmb3IodmFyIHIsaT0iIixuPTAsbz0tMSxzPTAsYT0wO2E8PWUubGVuZ3RoOysrYSl7aWYoYTxlLmxlbmd0aClyPWUuY2hhckNvZGVBdChhKTtlbHNlIGlmKDQ3PT09cilicmVhaztlbHNlIHI9NDc7aWYoNDc9PT1yKXtpZihvPT09YS0xfHwxPT09cyk7ZWxzZSBpZihvIT09YS0xJiYyPT09cyl7aWYoaS5sZW5ndGg8Mnx8MiE9PW58fDQ2IT09aS5jaGFyQ29kZUF0KGkubGVuZ3RoLTEpfHw0NiE9PWkuY2hhckNvZGVBdChpLmxlbmd0aC0yKSl7aWYoaS5sZW5ndGg+Mil7dmFyIGw9aS5sYXN0SW5kZXhPZigiLyIpO2lmKGwhPT1pLmxlbmd0aC0xKXstMT09PWw/KGk9IiIsbj0wKTpuPShpPWkuc2xpY2UoMCxsKSkubGVuZ3RoLTEtaS5sYXN0SW5kZXhPZigiLyIpLG89YSxzPTA7Y29udGludWV9fWVsc2UgaWYoMj09PWkubGVuZ3RofHwxPT09aS5sZW5ndGgpe2k9IiIsbj0wLG89YSxzPTA7Y29udGludWV9fXQmJihpLmxlbmd0aD4wP2krPSIvLi4iOmk9Ii4uIixuPTIpfWVsc2UgaS5sZW5ndGg+MD9pKz0iLyIrZS5zbGljZShvKzEsYSk6aT1lLnNsaWNlKG8rMSxhKSxuPWEtby0xO289YSxzPTB9ZWxzZSA0Nj09PXImJi0xIT09cz8rK3M6cz0tMX1yZXR1cm4gaX12YXIgaT17cmVzb2x2ZTpmdW5jdGlvbigpe2Zvcih2YXIgZSxpLG49IiIsbz0hMSxzPWFyZ3VtZW50cy5sZW5ndGgtMTtzPj0tMSYmIW87cy0tKXM+PTA/aT1hcmd1bWVudHNbc106KHZvaWQgMD09PWUmJihlPSIiKSxpPWUpLHQoaSksMCE9PWkubGVuZ3RoJiYobj1pKyIvIituLG89NDc9PT1pLmNoYXJDb2RlQXQoMCkpO3JldHVybihuPXIobiwhbyksbyk/bi5sZW5ndGg+MD8iLyIrbjoiLyI6bi5sZW5ndGg+MD9uOiIuIn0sbm9ybWFsaXplOmZ1bmN0aW9uKGUpe2lmKHQoZSksMD09PWUubGVuZ3RoKXJldHVybiIuIjt2YXIgaT00Nz09PWUuY2hhckNvZGVBdCgwKSxuPTQ3PT09ZS5jaGFyQ29kZUF0KGUubGVuZ3RoLTEpO3JldHVybigwIT09KGU9cihlLCFpKSkubGVuZ3RofHxpfHwoZT0iLiIpLGUubGVuZ3RoPjAmJm4mJihlKz0iLyIpLGkpPyIvIitlOmV9LGlzQWJzb2x1dGU6ZnVuY3Rpb24oZSl7cmV0dXJuIHQoZSksZS5sZW5ndGg+MCYmNDc9PT1lLmNoYXJDb2RlQXQoMCl9LGpvaW46ZnVuY3Rpb24oKXtpZigwPT1hcmd1bWVudHMubGVuZ3RoKXJldHVybiIuIjtmb3IodmFyIGUscj0wO3I8YXJndW1lbnRzLmxlbmd0aDsrK3Ipe3ZhciBuPWFyZ3VtZW50c1tyXTt0KG4pLG4ubGVuZ3RoPjAmJih2b2lkIDA9PT1lP2U9bjplKz0iLyIrbil9cmV0dXJuIHZvaWQgMD09PWU/Ii4iOmkubm9ybWFsaXplKGUpfSxyZWxhdGl2ZTpmdW5jdGlvbihlLHIpe2lmKHQoZSksdChyKSxlPT09cnx8KGU9aS5yZXNvbHZlKGUpKT09PShyPWkucmVzb2x2ZShyKSkpcmV0dXJuIiI7Zm9yKHZhciBuPTE7bjxlLmxlbmd0aCYmNDc9PT1lLmNoYXJDb2RlQXQobik7KytuKTtmb3IodmFyIG89ZS5sZW5ndGgscz1vLW4sYT0xO2E8ci5sZW5ndGgmJjQ3PT09ci5jaGFyQ29kZUF0KGEpOysrYSk7Zm9yKHZhciBsPXIubGVuZ3RoLWEsZD1zPGw/czpsLGM9LTEsdT0wO3U8PWQ7Kyt1KXtpZih1PT09ZCl7aWYobD5kKXtpZig0Nz09PXIuY2hhckNvZGVBdChhK3UpKXJldHVybiByLnNsaWNlKGErdSsxKTtpZigwPT09dSlyZXR1cm4gci5zbGljZShhK3UpfWVsc2Ugcz5kJiYoNDc9PT1lLmNoYXJDb2RlQXQobit1KT9jPXU6MD09PXUmJihjPTApKTticmVha312YXIgaD1lLmNoYXJDb2RlQXQobit1KTtpZihoIT09ci5jaGFyQ29kZUF0KGErdSkpYnJlYWs7NDc9PT1oJiYoYz11KX12YXIgcD0iIjtmb3IodT1uK2MrMTt1PD1vOysrdSkodT09PW98fDQ3PT09ZS5jaGFyQ29kZUF0KHUpKSYmKDA9PT1wLmxlbmd0aD9wKz0iLi4iOnArPSIvLi4iKTtyZXR1cm4gcC5sZW5ndGg+MD9wK3Iuc2xpY2UoYStjKTooYSs9Yyw0Nz09PXIuY2hhckNvZGVBdChhKSYmKythLHIuc2xpY2UoYSkpfSxfbWFrZUxvbmc6ZnVuY3Rpb24oZSl7cmV0dXJuIGV9LGRpcm5hbWU6ZnVuY3Rpb24oZSl7aWYodChlKSwwPT09ZS5sZW5ndGgpcmV0dXJuIi4iO2Zvcih2YXIgcj1lLmNoYXJDb2RlQXQoMCksaT00Nz09PXIsbj0tMSxvPSEwLHM9ZS5sZW5ndGgtMTtzPj0xOy0tcylpZig0Nz09PShyPWUuY2hhckNvZGVBdChzKSkpe2lmKCFvKXtuPXM7YnJlYWt9fWVsc2Ugbz0hMTtyZXR1cm4gLTE9PT1uP2k/Ii8iOiIuIjppJiYxPT09bj8iLy8iOmUuc2xpY2UoMCxuKX0sYmFzZW5hbWU6ZnVuY3Rpb24oZSxyKXtpZih2b2lkIDAhPT1yJiYic3RyaW5nIiE9dHlwZW9mIHIpdGhyb3cgVHlwZUVycm9yKCciZXh0IiBhcmd1bWVudCBtdXN0IGJlIGEgc3RyaW5nJyk7dChlKTt2YXIgaSxuPTAsbz0tMSxzPSEwO2lmKHZvaWQgMCE9PXImJnIubGVuZ3RoPjAmJnIubGVuZ3RoPD1lLmxlbmd0aCl7aWYoci5sZW5ndGg9PT1lLmxlbmd0aCYmcj09PWUpcmV0dXJuIiI7dmFyIGE9ci5sZW5ndGgtMSxsPS0xO2ZvcihpPWUubGVuZ3RoLTE7aT49MDstLWkpe3ZhciBkPWUuY2hhckNvZGVBdChpKTtpZig0Nz09PWQpe2lmKCFzKXtuPWkrMTticmVha319ZWxzZSAtMT09PWwmJihzPSExLGw9aSsxKSxhPj0wJiYoZD09PXIuY2hhckNvZGVBdChhKT8tMT09LS1hJiYobz1pKTooYT0tMSxvPWwpKX1yZXR1cm4gbj09PW8/bz1sOi0xPT09byYmKG89ZS5sZW5ndGgpLGUuc2xpY2UobixvKX1mb3IoaT1lLmxlbmd0aC0xO2k+PTA7LS1pKWlmKDQ3PT09ZS5jaGFyQ29kZUF0KGkpKXtpZighcyl7bj1pKzE7YnJlYWt9fWVsc2UgLTE9PT1vJiYocz0hMSxvPWkrMSk7cmV0dXJuIC0xPT09bz8iIjplLnNsaWNlKG4sbyl9LGV4dG5hbWU6ZnVuY3Rpb24oZSl7dChlKTtmb3IodmFyIHI9LTEsaT0wLG49LTEsbz0hMCxzPTAsYT1lLmxlbmd0aC0xO2E+PTA7LS1hKXt2YXIgbD1lLmNoYXJDb2RlQXQoYSk7aWYoNDc9PT1sKXtpZighbyl7aT1hKzE7YnJlYWt9Y29udGludWV9LTE9PT1uJiYobz0hMSxuPWErMSksNDY9PT1sPy0xPT09cj9yPWE6MSE9PXMmJihzPTEpOi0xIT09ciYmKHM9LTEpfXJldHVybiAtMT09PXJ8fC0xPT09bnx8MD09PXN8fDE9PT1zJiZyPT09bi0xJiZyPT09aSsxPyIiOmUuc2xpY2UocixuKX0sZm9ybWF0OmZ1bmN0aW9uKGUpe3ZhciB0LHI7aWYobnVsbD09PWV8fCJvYmplY3QiIT10eXBlb2YgZSl0aHJvdyBUeXBlRXJyb3IoJ1RoZSAicGF0aE9iamVjdCIgYXJndW1lbnQgbXVzdCBiZSBvZiB0eXBlIE9iamVjdC4gUmVjZWl2ZWQgdHlwZSAnK3R5cGVvZiBlKTtyZXR1cm4gdD1lLmRpcnx8ZS5yb290LHI9ZS5iYXNlfHwoZS5uYW1lfHwiIikrKGUuZXh0fHwiIiksdD90PT09ZS5yb290P3Qrcjp0KyIvIityOnJ9LHBhcnNlOmZ1bmN0aW9uKGUpe3QoZSk7dmFyIHIsaT17cm9vdDoiIixkaXI6IiIsYmFzZToiIixleHQ6IiIsbmFtZToiIn07aWYoMD09PWUubGVuZ3RoKXJldHVybiBpO3ZhciBuPWUuY2hhckNvZGVBdCgwKSxvPTQ3PT09bjtvPyhpLnJvb3Q9Ii8iLHI9MSk6cj0wO2Zvcih2YXIgcz0tMSxhPTAsbD0tMSxkPSEwLGM9ZS5sZW5ndGgtMSx1PTA7Yz49cjstLWMpe2lmKDQ3PT09KG49ZS5jaGFyQ29kZUF0KGMpKSl7aWYoIWQpe2E9YysxO2JyZWFrfWNvbnRpbnVlfS0xPT09bCYmKGQ9ITEsbD1jKzEpLDQ2PT09bj8tMT09PXM/cz1jOjEhPT11JiYodT0xKTotMSE9PXMmJih1PS0xKX1yZXR1cm4gLTE9PT1zfHwtMT09PWx8fDA9PT11fHwxPT09dSYmcz09PWwtMSYmcz09PWErMT8tMSE9PWwmJigwPT09YSYmbz9pLmJhc2U9aS5uYW1lPWUuc2xpY2UoMSxsKTppLmJhc2U9aS5uYW1lPWUuc2xpY2UoYSxsKSk6KDA9PT1hJiZvPyhpLm5hbWU9ZS5zbGljZSgxLHMpLGkuYmFzZT1lLnNsaWNlKDEsbCkpOihpLm5hbWU9ZS5zbGljZShhLHMpLGkuYmFzZT1lLnNsaWNlKGEsbCkpLGkuZXh0PWUuc2xpY2UocyxsKSksYT4wP2kuZGlyPWUuc2xpY2UoMCxhLTEpOm8mJihpLmRpcj0iLyIpLGl9LHNlcDoiLyIsZGVsaW1pdGVyOiI6Iix3aW4zMjpudWxsLHBvc2l4Om51bGx9O2kucG9zaXg9aSxlLmV4cG9ydHM9aX19LHI9e307ZnVuY3Rpb24gaShlKXt2YXIgbj1yW2VdO2lmKHZvaWQgMCE9PW4pcmV0dXJuIG4uZXhwb3J0czt2YXIgbz1yW2VdPXtleHBvcnRzOnt9fSxzPSEwO3RyeXt0W2VdKG8sby5leHBvcnRzLGkpLHM9ITF9ZmluYWxseXtzJiZkZWxldGUgcltlXX1yZXR1cm4gby5leHBvcnRzfWkuYWI9Ii8vIixlLmV4cG9ydHM9aS"
     ""
     ""
     ""
     "KShjLnNHLmRpdix7ImRhdGEtc3RhdGUiOkEoaCksImRhdGEtZGlzYWJsZWQiOnM/IiI6dm9pZCAwLC4uLnUscmVmOnR9KX0pfSk7Xy5kaXNwbGF5TmFtZT1mO3ZhciB2PSJDb2xsYXBzaWJsZVRyaWdnZXIiLHc9aS5mb3J3YXJkUmVmKChlLHQpPT57bGV0e19fc2NvcGVDb2xsYXBzaWJsZTpyLC4uLml9PWUsbj1iKHYscik7cmV0dXJuKDAsYS5qc3gpKGMuc0cuYnV0dG9uLHt0eXBlOiJidXR0b24iLCJhcmlhLWNvbnRyb2xzIjpuLmNvbnRlbnRJZCwiYXJpYS1leHBhbmRlZCI6bi5vcGVufHwhMSwiZGF0YS1zdGF0ZSI6QShuLm9wZW4pLCJkYXRhLWRpc2FibGVkIjpuLmRpc2FibGVkPyIiOnZvaWQgMCxkaXNhYmxlZDpuLmRpc2FibGVkLC4uLmkscmVmOnQsb25DbGljazooMCxsLm0pKGUub25DbGljayxuLm9uT3BlblRvZ2dsZSl9KX0pO3cuZGlzcGxheU5hbWU9djt2YXIgVD0iQ29sbGFwc2libGVDb250ZW50IixFPWkuZm9yd2FyZFJlZigoZSx0KT0+e2xldHtmb3JjZU1vdW50OnIsLi4uaX09ZSxuPWIoVCxlLl9fc2NvcGVDb2xsYXBzaWJsZSk7cmV0dXJuKDAsYS5qc3gpKGguQyx7cHJlc2VudDpyfHxuLm9wZW4sY2hpbGRyZW46ZT0+e2xldHtwcmVzZW50OnJ9PWU7cmV0dXJuKDAsYS5qc3gpKFMsey4uLmkscmVmOnQscHJlc2VudDpyfSl9fSl9KTtFLmRpc3BsYXlOYW1lPVQ7dmFyIFM9aS5mb3J3YXJkUmVmKChlLHQpPT57bGV0e19fc2NvcGVDb2xsYXBzaWJsZTpyLHByZXNlbnQ6bixjaGlsZHJlbjpzLC4uLmx9PWUsZD1iKFQsciksW2gscF09aS51c2VTdGF0ZShuKSxmPWkudXNlUmVmKG51bGwpLGc9KDAsby5zKSh0LGYpLHk9aS51c2VSZWYoMCksbT15LmN1cnJlbnQsXz1pLnVzZVJlZigwKSx2PV8uY3VycmVudCx3PWQub3Blbnx8aCxFPWkudXNlUmVmKHcpLFM9aS51c2VSZWYodm9pZCAwKTtyZXR1cm4gaS51c2VFZmZlY3QoKCk9PntsZXQgZT1yZXF1ZXN0QW5pbWF0aW9uRnJhbWUoKCk9PkUuY3VycmVudD0hMSk7cmV0dXJuKCk9PmNhbmNlbEFuaW1hdGlvbkZyYW1lKGUpfSxbXSksKDAsdS5OKSgoKT0+e2xldCBlPWYuY3VycmVudDtpZihlKXtTLmN1cnJlbnQ9Uy5jdXJyZW50fHx7dHJhbnNpdGlvbkR1cmF0aW9uOmUuc3R5bGUudHJhbnNpdGlvbkR1cmF0aW9uLGFuaW1hdGlvbk5hbWU6ZS5zdHlsZS5hbmltYXRpb25OYW1lfSxlLnN0eWxlLnRyYW5zaXRpb25EdXJhdGlvbj0iMHMiLGUuc3R5bGUuYW5pbWF0aW9uTmFtZT0ibm9uZSI7bGV0IHQ9ZS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTt5LmN1cnJlbnQ9dC5oZWlnaHQsXy5jdXJyZW50PXQud2lkdGgsRS5jdXJyZW50fHwoZS5zdHlsZS50cmFuc2l0aW9uRHVyYXRpb249Uy5jdXJyZW50LnRyYW5zaXRpb25EdXJhdGlvbixlLnN0eWxlLmFuaW1hdGlvbk5hbWU9Uy5jdXJyZW50LmFuaW1hdGlvbk5hbWUpLHAobil9fSxbZC5vcGVuLG5dKSwoMCxhLmpzeCkoYy5zRy5kaXYseyJkYXRhLXN0YXRlIjpBKGQub3BlbiksImRhdGEtZGlzYWJsZWQiOmQuZGlzYWJsZWQ/IiI6dm9pZCAwLGlkOmQuY29udGVudElkLGhpZGRlbjohdywuLi5sLHJlZjpnLHN0eWxlOnsiLS1yYWRpeC1jb2xsYXBzaWJsZS1jb250ZW50LWhlaWdodCI6bT8iIi5jb25jYXQobSwicHgiKTp2b2lkIDAsIi0tcmFkaXgtY29sbGFwc2libGUtY29udGVudC13aWR0aCI6dj8iIi5jb25jYXQodiwicHgiKTp2b2lkIDAsLi4uZS5zdHlsZX0sY2hpbGRyZW46dyYmc30pfSk7ZnVuY3Rpb24gQShlKXtyZXR1cm4gZT8ib3BlbiI6ImNsb3NlZCJ9dmFyIHg9cig3NDQ3MCksTz0iQWNjb3JkaW9uIixSPVsiSG9tZSIsIkVuZCIsIkFycm93RG93biIsIkFycm93VXAiLCJBcnJvd0xlZnQiLCJBcnJvd1JpZ2h0Il0sW0ksTixMXT1mdW5jdGlvbihlKXtsZXQgdD1lKyJDb2xsZWN0aW9uUHJvdmlkZXIiLFtyLGxdPSgwLG4uQSkodCksW2QsY109cih0LHtjb2xsZWN0aW9uUmVmOntjdXJyZW50Om51bGx9LGl0ZW1NYXA6bmV3IE1hcH0pLHU9ZT0+e2xldHtzY29wZTp0LGNoaWxkcmVuOnJ9PWUsbj1pLnVzZVJlZihudWxsKSxvPWkudXNlUmVmKG5ldyBNYXApLmN1cnJlbnQ7cmV0dXJuKDAsYS5qc3gpKGQse3Njb3BlOnQsaXRlbU1hcDpvLGNvbGxlY3Rpb25SZWY6bixjaGlsZHJlbjpyfSl9O3UuZGlzcGxheU5hbWU9dDtsZXQgaD1lKyJDb2xsZWN0aW9uU2xvdCIscD1pLmZvcndhcmRSZWYoKGUsdCk9PntsZXR7c2NvcGU6cixjaGlsZHJlbjppfT1lLG49YyhoLHIpLGw9KDAsby5zKSh0LG4uY29sbGVjdGlvblJlZik7cmV0dXJuKDAsYS5qc3gpKHMuRFgse3JlZjpsLGNoaWxkcmVuOml9KX0pO3AuZGlzcGxheU5hbWU9aDtsZXQgZj1lKyJDb2xsZWN0aW9uSXRlbVNsb3QiLGc9ImRhdGEtcmFkaXgtY29sbGVjdGlvbi1pdGVtIix5PWkuZm9yd2FyZFJlZigoZSx0KT0+e2xldHtzY29wZTpyLGNoaWxkcmVuOm4sLi4ubH09ZSxkPWkudXNlUmVmKG51bGwpLHU9KDAsby5zKSh0LGQpLGg9YyhmLHIpO3JldHVybiBpLnVzZUVmZmVjdCgoKT0+KGguaXRlbU1hcC5zZXQoZCx7cmVmOmQsLi4ubH0pLCgpPT52b2lkIGguaXRlbU1hcC5kZWxldGUoZCkpKSwoMCxhLmpzeCkocy5EWCx7W2ddOiIiLHJlZjp1LGNoaWxkcmVuOm59KX0pO3JldHVybiB5LmRpc3BsYXlOYW1lPWYsW3tQcm92aWRlcjp1LFNsb3Q6cCxJdGVtU2xvdDp5fSxmdW5jdGlvbih0KXtsZXQgcj1jKGUrIkNvbGxlY3Rpb25Db25zdW1lciIsdCk7cmV0dXJuIGkudXNlQ2FsbGJhY2soKCk9PntsZXQgZT1yLmNvbGxlY3Rpb25SZWYuY3VycmVudDtpZighZSlyZXR1cm5bXTtsZXQgdD1BcnJheS5mcm9tKGUucXVlcnlTZWxlY3RvckFsbCgiWyIuY29uY2F0KGcsIl0iKSkpO3JldHVybiBBcnJheS5mcm9tKHIuaXRlbU1hcC52YWx1ZXMoKSkuc29ydCgoZSxyKT0+dC5pbmRleE9mKGUucmVmLmN1cnJlbnQpLXQuaW5kZXhPZihyLnJlZi5jdXJyZW50KSl9LFtyLmNvbGxlY3Rpb25SZWYsci5pdGVtTWFwXSl9LGxdfShPKSxbRCxDXT0oMCxuLkEpKE8sW0wseV0pLEI9eSgpLE09aS5mb3J3YXJkUmVmKChlLHQpPT57bGV0e3R5cGU6ciwuLi5pfT1lO3JldHVybigwLGEuanN4KShJLlByb3ZpZGVyLHtzY29wZTplLl9fc2NvcGVBY2NvcmRpb24sY2hpbGRyZW46Im11bHRpcGxlIj09PXI/KDAsYS5qc3gpKHosey4uLmkscmVmOnR9KTooMCxhLmpzeCkoaix7Li4uaSxyZWY6dH0pfSl9KTtNLmRpc3BsYXlOYW1lPU87dmFyW1UsRl09RChPKSxbayxQXT1EKE8se2NvbGxhcHNpYmxlOiExfSksaj1pLmZvcndhcmRSZWYoKGUsdCk9PntsZXR7dmFsdWU6cixkZWZhdWx0VmFsdWU6bixvblZhbHVlQ2hhbmdlOm89KCk9Pnt9LGNvbGxhcHNpYmxlOnM9ITEsLi4ubH09ZSxbYyx1XT0oMCxkLmkpKHtwcm9wOnIsZGVmYXVsdFByb3A6bixvbkNoYW5nZTpvfSk7cmV0dXJuKDAsYS5qc3gpKFUse3Njb3BlOmUuX19zY29wZUFjY29yZGlvbix2YWx1ZTpjP1tjXTpbXSxvbkl0ZW1PcGVuOnUsb25JdGVtQ2xvc2U6aS51c2VDYWxsYmFjaygoKT0+cyYmdSgiIiksW3MsdV0pLGNoaWxkcmVuOigwLGEuanN4KShrLHtzY29wZTplLl9fc2NvcGVBY2NvcmRpb24sY29sbGFwc2libGU6cyxjaGlsZHJlbjooMCxhLmpzeCkoVyx7Li4ubCxyZWY6dH0pfSl9KX0pLHo9aS5mb3J3YXJkUmVmKChlLHQpPT57bGV0e3ZhbHVlOnIsZGVmYXVsdFZhbHVlOm4sb25WYWx1ZUNoYW5nZTpvPSgpPT57fSwuLi5zfT1lLFtsPVtdLGNdPSgwLGQuaSkoe3Byb3A6cixkZWZhdWx0UHJvcDpuLG9uQ2hhbmdlOm99KSx1PWkudXNlQ2FsbGJhY2soZT0+YyhmdW5jdGlvbigpe2xldCB0PWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTpbXTtyZXR1cm5bLi4udCxlXX0pLFtjXSksaD1pLnVzZUNhbGxiYWNrKGU9PmMoZnVuY3Rpb24oKXtsZXQgdD1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06W107cmV0dXJuIHQuZmlsdGVyKHQ9PnQhPT1lKX0pLFtjXSk7cmV0dXJuKDAsYS5qc3gpKFUse3Njb3BlOmUuX19zY29wZUFjY29yZGlvbix2YWx1ZTpsLG9uSXRlbU9wZW46dSxvbkl0ZW1DbG9zZTpoLGNoaWxkcmVuOigwLGEuanN4KShrLHtzY29wZTplLl9fc2NvcGVBY2NvcmRpb24sY29sbGFwc2libGU6ITAsY2hpbGRyZW46KDAsYS5qc3gpKFcsey4uLnMscmVmOnR9KX0pfSl9KSxbSCxZXT1EKE8pLFc9aS5mb3J3YXJkUmVmKChlLHQpPT57bGV0e19fc2NvcGVBY2NvcmRpb246cixkaXNhYmxlZDpuLGRpcjpzLG9yaWVudGF0aW9uOmQ9InZlcnRpY2FsIiwuLi51fT1lLGg9aS51c2VSZWYobnVsbCkscD0oMCxvLnMpKGgsdCksZj1OKHIpLGc9Imx0ciI9PT0oMCx4LmpIKShzKSx5PSgwLGwubSkoZS5vbktleURvd24sZT0+e3ZhciB0O2lmKCFSLmluY2x1ZGVzKGUua2V5KSlyZXR1cm47bGV0IHI9ZS50YXJnZXQsaT1mKCkuZmlsdGVyKGU9Pnt2YXIgdDtyZXR1cm4hKG51bGw9PT0odD1lLnJlZi5jdXJyZW50KXx8dm9pZCAwPT09dD92b2lkIDA6dC5kaXNhYmxlZCl9KSxuPWkuZmluZEluZGV4KGU9PmUucmVmLmN1cnJlbnQ9PT1yKSxvPWkubGVuZ3RoO2lmKC0xPT09bilyZXR1cm47ZS5wcmV2ZW50RGVmYXVsdCgpO2xldCBzPW4sYT1vLTEsbD0oKT0+eyhzPW4rMSk+YSYmKHM9MCl9LGM9KCk9Pnsocz1uLTEpPDAmJihzPWEpfTtzd2l0Y2goZS5rZXkpe2Nhc2UiSG9tZSI6cz0wO2JyZWFrO2Nhc2UiRW5kIjpzPWE7YnJlYWs7Y2FzZSJBcnJvd1JpZ2h0IjoiaG9yaXpvbnRhbCI9PT1kJiYoZz9sKCk6YygpKTticmVhaztjYXNlIkFycm93RG93biI6InZlcnRpY2FsIj09PWQmJmwoKTticmVhaztjYXNlIkFycm93TGVmdCI6Imhvcml6b250YWwiPT09ZCYmKGc/YygpOmwoKSk7YnJlYWs7Y2FzZSJBcnJvd1VwIjoidmVydGljYWwiPT09ZCYmYygpfW51bGw9PT0odD1pW3Mlb10ucmVmLmN1cnJlbnQpfHx2b2lkIDA9PT10fHx0LmZvY3VzKCl9KTtyZXR1cm4oMCxhLmpzeCkoSCx7c2NvcGU6cixkaXNhYmxlZDpuLGRpcmVjdGlvbjpzLG9yaWVudGF0aW9uOmQsY2hpbGRyZW46KDAsYS5qc3gpKEkuU2xvdCx7c2NvcGU6cixjaGlsZHJlbjooMCxhLmpzeCkoYy5zRy5kaXYsey4uLnUsImRhdGEtb3JpZW50YXRpb24iOmQscmVmOnAsb25LZXlEb3duOm4/dm9pZCAwOnl9KX0pfSl9KSxWPSJBY2NvcmRpb25JdGVtIixbWixHXT1EKFYpLFg9aS5mb3J3YXJkUmVmKChlLHQpPT57bGV0e19fc2NvcGVBY2NvcmRpb246cix2YWx1ZTppLC4uLm59PWUsbz1ZKFYscikscz1GKFYsciksbD1CKHIpLGQ9KDAscC5CKSgpLGM9aSYmcy52YWx1ZS5pbmNsdWRlcyhpKXx8ITEsdT1vLmRpc2FibGVkfHxlLmRpc2FibGVkO3JldHVybigwLGEuanN4KShaLHtzY29wZTpyLG9wZW46YyxkaXNhYmxlZDp1LHRyaWdnZXJJZDpkLGNoaWxkcmVuOigwLGEuanN4KShfLHsiZGF0YS1vcmllbnRhdGlvbiI6by5vcmllbnRhdGlvbiwiZGF0YS1zdGF0ZSI6ZXQoYyksLi4ubCwuLi5uLHJlZjp0LGRpc2FibGVkOnUsb3BlbjpjLG9uT3BlbkNoYW5nZTplPT57ZT9zLm9uSXRlbU9wZW4oaSk6cy5vbkl0ZW1DbG9zZShpKX19KX0pfSk7WC5kaXNwbGF5TmFtZT1WO3ZhciAkPSJBY2NvcmRpb25IZWFkZXIiLEs9aS5mb3J3YXJkUmVmKChlLHQpPT57bGV0e19fc2NvcGVBY2NvcmRpb246ciwuLi5pfT1lLG49WShPLHIpLG89RygkLHIpO3JldHVybigwLGEuanN4KShjLnNHLmgzLHsiZGF0YS1vcmllbnRhdGlvbiI6bi5vcmllbnRhdGlvbiwiZGF0YS1zdGF0ZSI6ZXQoby5vcGVuKSwiZGF0YS1kaXNhYmxlZCI6by5kaXNhYmxlZD8iIjp2b2lkIDAsLi4uaSxyZWY6dH0pfSk7Sy5kaXNwbGF5TmFtZT0kO3ZhciBKPSJBY2NvcmRpb25UcmlnZ2VyIixxPWkuZm9yd2FyZFJlZigoZSx0KT0+e2xldHtfX3Njb3BlQWNjb3JkaW9uOnIsLi4uaX09ZSxuPVkoTyxyKSxvPUcoSixyKSxzPVAoSixyKSxsPUIocik7cmV0dXJuKDAsYS5qc3gpKEkuSXRlbVNsb3Qse3Njb3BlOnIsY2hpbGRyZW46KDAsYS5qc3gpKHcseyJhcmlhLWRpc2FibGVkIjpvLm9wZW4mJiFzLmNvbGxhcHNpYmxlfHx2b2lkIDAsImRhdGEtb3JpZW50YXRpb24iOm4ub3JpZW50YXRpb24saWQ6by50cmlnZ2VySWQsLi4ubCwuLi5pLHJlZjp0fSl9KX0pO3EuZGlzcGxheU5hbWU9Sjt2YXIgUT0iQWNjb3JkaW9uQ29udGVudCIsZWU9aS5mb3J3YXJkUmVmKChlLHQpPT57bGV0e19fc2NvcGVBY2NvcmRpb246ciwuLi5pfT1lLG"
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     "codCkrIiBpcyBub3QgYSBjb25zdHJ1Y3RvciBvciBudWxsIik7ZnVuY3Rpb24gcigpe3RoaXMuY29uc3RydWN0b3I9ZX1pKGUsdCksZS5wcm90b3R5cGU9bnVsbD09PXQ/T2JqZWN0LmNyZWF0ZSh0KTooci5wcm90b3R5cGU9dC5wcm90b3R5cGUsbmV3IHIpfXZhciBvPWZ1bmN0aW9uKCl7cmV0dXJuKG89T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24oZSl7Zm9yKHZhciB0LHI9MSxpPWFyZ3VtZW50cy5sZW5ndGg7cjxpO3IrKylmb3IodmFyIG4gaW4gdD1hcmd1bWVudHNbcl0pT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHQsbikmJihlW25dPXRbbl0pO3JldHVybiBlfSkuYXBwbHkodGhpcyxhcmd1bWVudHMpfTtmdW5jdGlvbiBzKGUsdCl7dmFyIHI9e307Zm9yKHZhciBpIGluIGUpT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsaSkmJjA+dC5pbmRleE9mKGkpJiYocltpXT1lW2ldKTtpZihudWxsIT1lJiYiZnVuY3Rpb24iPT10eXBlb2YgT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scylmb3IodmFyIG49MCxpPU9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZSk7bjxpLmxlbmd0aDtuKyspMD50LmluZGV4T2YoaVtuXSkmJk9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGUuY2FsbChlLGlbbl0pJiYocltpW25dXT1lW2lbbl1dKTtyZXR1cm4gcn1mdW5jdGlvbiBhKGUsdCxyLGkpe3JldHVybiBuZXcocnx8KHI9UHJvbWlzZSkpKGZ1bmN0aW9uKG4sbyl7ZnVuY3Rpb24gcyhlKXt0cnl7bChpLm5leHQoZSkpfWNhdGNoKGUpe28oZSl9fWZ1bmN0aW9uIGEoZSl7dHJ5e2woaS50aHJvdyhlKSl9Y2F0Y2goZSl7byhlKX19ZnVuY3Rpb24gbChlKXt2YXIgdDtlLmRvbmU/bihlLnZhbHVlKTooKHQ9ZS52YWx1ZSlpbnN0YW5jZW9mIHI/dDpuZXcgcihmdW5jdGlvbihlKXtlKHQpfSkpLnRoZW4ocyxhKX1sKChpPWkuYXBwbHkoZSx0fHxbXSkpLm5leHQoKSl9KX1PYmplY3QuY3JlYXRlO2Z1bmN0aW9uIGwoZSx0LHIpe2lmKHJ8fDI9PWFyZ3VtZW50cy5sZW5ndGgpZm9yKHZhciBpLG49MCxvPXQubGVuZ3RoO248bztuKyspIWkmJm4gaW4gdHx8KGl8fChpPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKHQsMCxuKSksaVtuXT10W25dKTtyZXR1cm4gZS5jb25jYXQoaXx8QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwodCkpfWZ1bmN0aW9uIGQoZSl7cmV0dXJuIHRoaXMgaW5zdGFuY2VvZiBkPyh0aGlzLnY9ZSx0aGlzKTpuZXcgZChlKX1mdW5jdGlvbiBjKGUsdCxyKXtpZighU3ltYm9sLmFzeW5jSXRlcmF0b3IpdGhyb3cgVHlwZUVycm9yKCJTeW1ib2wuYXN5bmNJdGVyYXRvciBpcyBub3QgZGVmaW5lZC4iKTt2YXIgaSxuPXIuYXBwbHkoZSx0fHxbXSksbz1bXTtyZXR1cm4gaT1PYmplY3QuY3JlYXRlKCgiZnVuY3Rpb24iPT10eXBlb2YgQXN5bmNJdGVyYXRvcj9Bc3luY0l0ZXJhdG9yOk9iamVjdCkucHJvdG90eXBlKSxzKCJuZXh0IikscygidGhyb3ciKSxzKCJyZXR1cm4iLGZ1bmN0aW9uKGUpe3JldHVybiBmdW5jdGlvbih0KXtyZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHQpLnRoZW4oZSxjKX19KSxpW1N5bWJvbC5hc3luY0l0ZXJhdG9yXT1mdW5jdGlvbigpe3JldHVybiB0aGlzfSxpO2Z1bmN0aW9uIHMoZSx0KXtuW2VdJiYoaVtlXT1mdW5jdGlvbih0KXtyZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24ocixpKXtvLnB1c2goW2UsdCxyLGldKT4xfHxhKGUsdCl9KX0sdCYmKGlbZV09dChpW2VdKSkpfWZ1bmN0aW9uIGEoZSx0KXt0cnl7dmFyIHI7KHI9bltlXSh0KSkudmFsdWUgaW5zdGFuY2VvZiBkP1Byb21pc2UucmVzb2x2ZShyLnZhbHVlLnYpLnRoZW4obCxjKTp1KG9bMF1bMl0scil9Y2F0Y2goZSl7dShvWzBdWzNdLGUpfX1mdW5jdGlvbiBsKGUpe2EoIm5leHQiLGUpfWZ1bmN0aW9uIGMoZSl7YSgidGhyb3ciLGUpfWZ1bmN0aW9uIHUoZSx0KXtlKHQpLG8uc2hpZnQoKSxvLmxlbmd0aCYmYShvWzBdWzBdLG9bMF1bMV0pfX1mdW5jdGlvbiB1KGUpe3ZhciB0LHI7cmV0dXJuIHQ9e30saSgibmV4dCIpLGkoInRocm93IixmdW5jdGlvbihlKXt0aHJvdyBlfSksaSgicmV0dXJuIiksdFtTeW1ib2wuaXRlcmF0b3JdPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9LHQ7ZnVuY3Rpb24gaShpLG4pe3RbaV09ZVtpXT9mdW5jdGlvbih0KXtyZXR1cm4ocj0hcik/e3ZhbHVlOmQoZVtpXSh0KSksZG9uZTohMX06bj9uKHQpOnR9Om59fWZ1bmN0aW9uIGgoZSl7aWYoIVN5bWJvbC5hc3luY0l0ZXJhdG9yKXRocm93IFR5cGVFcnJvcigiU3ltYm9sLmFzeW5jSXRlcmF0b3IgaXMgbm90IGRlZmluZWQuIik7dmFyIHQscj1lW1N5bWJvbC5hc3luY0l0ZXJhdG9yXTtyZXR1cm4gcj9yLmNhbGwoZSk6KGU9ZnVuY3Rpb24oZSl7dmFyIHQ9ImZ1bmN0aW9uIj09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yLHI9dCYmZVt0XSxpPTA7aWYocilyZXR1cm4gci5jYWxsKGUpO2lmKGUmJiJudW1iZXIiPT10eXBlb2YgZS5sZW5ndGgpcmV0dXJue25leHQ6ZnVuY3Rpb24oKXtyZXR1cm4gZSYmaT49ZS5sZW5ndGgmJihlPXZvaWQgMCkse3ZhbHVlOmUmJmVbaSsrXSxkb25lOiFlfX19O3Rocm93IFR5cGVFcnJvcih0PyJPYmplY3QgaXMgbm90IGl0ZXJhYmxlLiI6IlN5bWJvbC5pdGVyYXRvciBpcyBub3QgZGVmaW5lZC4iKX0oZSksdD17fSxpKCJuZXh0IiksaSgidGhyb3ciKSxpKCJyZXR1cm4iKSx0W1N5bWJvbC5hc3luY0l0ZXJhdG9yXT1mdW5jdGlvbigpe3JldHVybiB0aGlzfSx0KTtmdW5jdGlvbiBpKHIpe3Rbcl09ZVtyXSYmZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKGksbil7IWZ1bmN0aW9uKGUsdCxyLGkpe1Byb21pc2UucmVzb2x2ZShpKS50aGVuKGZ1bmN0aW9uKHQpe2Uoe3ZhbHVlOnQsZG9uZTpyfSl9LHQpfShpLG4sKHQ9ZVtyXSh0KSkuZG9uZSx0LnZhbHVlKX0pfX19T2JqZWN0LmNyZWF0ZSwiZnVuY3Rpb24iPT10eXBlb2YgU3VwcHJlc3NlZEVycm9yJiZTdXBwcmVzc2VkRXJyb3J9LDcyNjQwOihlLHQscik9PnsidXNlIHN0cmljdCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pLHQuRmxvYXRpbmdXaW5kb3c9dm9pZCAwO2xldCBpPXIoODI1MjgpLG49cigxNDcwNSksbz1yKDk1MTQyKSxzPXIoNTg0NDkpO3QuRmxvYXRpbmdXaW5kb3c9ZT0+e2xldHt0aXRsZTp0LGlkOnIsdXJsOmEscmVjdDpsLG9uQ2xvc2VXaW5kb3c6ZCxvblNldFdpbmRvdzpjLGNoaWxkcmVuOnV9PWUsaD1pLnVzZVJlZihudWxsKSxwPWkudXNlUmVmKG51bGwpLFtmLGddPWkudXNlU3RhdGUodm9pZCAwKTtyZXR1cm4oaS51c2VMYXlvdXRFZmZlY3QoKCk9PntwLmN1cnJlbnQmJmNsZWFyVGltZW91dChwLmN1cnJlbnQpO2xldCBlPSEwLGk9bHx8bmV3IG8uUmVjdCgwLDAsMTAwLDEwMCksbj1BcnJheS5mcm9tKHdpbmRvdy5kb2N1bWVudC5zdHlsZVNoZWV0cykucmVkdWNlKChlLHQpPT57bGV0IHI7dHJ5e3I9dC5jc3NSdWxlc31jYXRjaChlKXt9dHJ5e3JldHVyblsuLi5lLHtocmVmOnQuaHJlZix0eXBlOnQudHlwZSxydWxlczpyP0FycmF5LmZyb20ocikubWFwKGU9PmUuY3NzVGV4dCk6bnVsbH1dfWNhdGNoKHQpe3JldHVybiBlfX0sW10pO3JldHVybiBoLmN1cnJlbnQ9d2luZG93Lm9wZW4oYSxyLGBsZWZ0PSR7aS54fSx0b3A9JHtpLnl9LHdpZHRoPSR7aS53aWR0aH0saGVpZ2h0PSR7aS5oZWlnaHR9YCksbnVsbCE9PWguY3VycmVudD8oYyhyLGguY3VycmVudCksd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoImJlZm9yZXVubG9hZCIsKCk9PntoLmN1cnJlbnQmJihoLmN1cnJlbnQuY2xvc2UoKSxoLmN1cnJlbnQ9bnVsbCl9KSxoLmN1cnJlbnQuYWRkRXZlbnRMaXN0ZW5lcigibG9hZCIsKCk9PntpZihlKXtsZXQgZT1oLmN1cnJlbnQuZG9jdW1lbnQ7ZS50aXRsZT10O2xldCBpPWUuY3JlYXRlRWxlbWVudCgiZGl2Iik7aS5jbGFzc05hbWU9cy5DTEFTU0VTLkZMRVhMQVlPVVRfX0ZMT0FUSU5HX1dJTkRPV19DT05URU5ULGUuYm9keS5hcHBlbmRDaGlsZChpKSwoZnVuY3Rpb24oZSx0KXtsZXQgcj1lLmhlYWQsaT1bXTtmb3IobGV0IG4gb2YgdClpZihuLmhyZWYpe2xldCB0PWUuY3JlYXRlRWxlbWVudCgibGluayIpO3QudHlwZT1uLnR5cGUsdC5yZWw9InN0eWxlc2hlZXQiLHQuaHJlZj1uLmhyZWYsci5hcHBlbmRDaGlsZCh0KSxpLnB1c2gobmV3IFByb21pc2UoZT0+e3Qub25sb2FkPSgpPT5lKCEwKX0pKX1lbHNlIGlmKG4ucnVsZXMpe2xldCB0PWUuY3JlYXRlRWxlbWVudCgic3R5bGUiKTtmb3IobGV0IHIgb2Ygbi5ydWxlcyl0LmFwcGVuZENoaWxkKGUuY3JlYXRlVGV4dE5vZGUocikpO3IuYXBwZW5kQ2hpbGQodCl9cmV0dXJuIFByb21pc2UuYWxsKGkpfSkoZSxuKS50aGVuKCgpPT57ZyhpKX0pLGguY3VycmVudC5hZGRFdmVudExpc3RlbmVyKCJiZWZvcmV1bmxvYWQiLCgpPT57ZChyKX0pfX0pKTooY29uc29sZS53YXJuKGBVbmFibGUgdG8gb3BlbiB3aW5kb3cgJHthfWApLGQocikpLCgpPT57ZT0hMSxwLmN1cnJlbnQ9c2V0VGltZW91dCgoKT0+e2guY3VycmVudCYmKGguY3VycmVudC5jbG9zZSgpLGguY3VycmVudD1udWxsKX0sMCl9fSxbXSksdm9pZCAwIT09Zik/KDAsbi5jcmVhdGVQb3J0YWwpKHUsZik6bnVsbH19LDczMDAzOihlLHQscik9PnsidXNlIHN0cmljdCI7ci5kKHQse1M6KCk9PmF9KTt2YXIgaT1yKDgyNTI4KTtmdW5jdGlvbiBuKGUsdCl7cmV0dXJuImZ1bmN0aW9uIj09dHlwZW9mIGU/ZSh0KTplJiYoZS5jdXJyZW50PXQpLGV9dmFyIG89InVuZGVmaW5lZCIhPXR5cGVvZiB3aW5kb3c/aS51c2VMYXlvdXRFZmZlY3Q6aS51c2VFZmZlY3Qscz1uZXcgV2Vha01hcDtmdW5jdGlvbiBhKGUsdCl7dmFyIHIsYSxsLGQ9KHI9dHx8bnVsbCxhPWZ1bmN0aW9uKHQpe3JldHVybiBlLmZvckVhY2goZnVuY3Rpb24oZSl7cmV0dXJuIG4oZSx0KX0pfSwobD0oMCxpLnVzZVN0YXRlKShmdW5jdGlvbigpe3JldHVybnt2YWx1ZTpyLGNhbGxiYWNrOmEsZmFjYWRlOntnZXQgY3VycmVudCgpe3JldHVybiBsLnZhbHVlfSxzZXQgY3VycmVudCh2YWx1ZSl7dmFyIGU9bC52YWx1ZTtlIT09dmFsdWUmJihsLnZhbHVlPXZhbHVlLGwuY2FsbGJhY2sodmFsdWUsZSkpfX19fSlbMF0pLmNhbGxiYWNrPWEsbC5mYWNhZGUpO3JldHVybiBvKGZ1bmN0aW9uKCl7dmFyIHQ9cy5nZXQoZCk7aWYodCl7dmFyIHI9bmV3IFNldCh0KSxpPW5ldyBTZXQoZSksbz1kLmN1cnJlbnQ7ci5mb3JFYWNoKGZ1bmN0aW9uKGUpe2kuaGFzKGUpfHxuKGUsbnVsbCl9KSxpLmZvckVhY2goZnVuY3Rpb24oZSl7ci5oYXMoZSl8fG4oZSxvKX0pfXMuc2V0KGQsZSl9LFtlXSksZH19LDc0NDcwOihlLHQscik9PnsidXNlIHN0cmljdCI7ci5kKHQse2pIOigpPT5vfSk7dmFyIGk9cig4MjUyOCk7cigxNDc5Nik7dmFyIG49aS5jcmVhdGVDb250ZXh0KHZvaWQgMCk7ZnVuY3Rpb24gbyhlKXtsZXQgdD1pLnVzZUNvbnRleHQobik7cmV0dXJuIGV8fHR8fCJsdHIifX0sNzUzMTY6KGUsdCxyKT0+eyJ1c2Ugc3RyaWN0Ijt2YXIgaSxuO3IuZCh0LHtOWjooKT0+bixaVTooKT0+aX0pLGZ1bmN0aW9uKGUpe2VbZS5OT05FPTBdPSJOT05FIixlW2UuTnVsbD0xXT0iTnVsbCIsZVtlLkludD0yXT0iSW50IixlW2UuRmxvYXQ9M109IkZsb2F0IixlW2UuQmluYXJ5PTRdPSJCaW5hcnkiLGVbZS5VdGY4PTVdPSJVdGY4IixlW2UuQm9vbD02XT0iQm9vbCIsZVtlLkRlY2ltYWw9N109IkRlY2ltYWwiLGVbZS5EYXRlPThdPSJEYXRlIixlW2UuVGltZT05XT0iVGltZSIsZVtlLlRpbWVzdGFtcD0xMF09IlRpbWVzdGFtcCIsZVtlLkludGVydmFsPTExXT0iSW50ZXJ2YWwiLGVbZS5MaXN0PTEyXT0iTGlzdCIsZVtlLlN0cnVjdD0xM109IlN0cnVjdCIsZVtlLlVuaW9uPTE0XT0iVW5pb24iLGVbZS5GaXhlZFNpemVCaW5hcnk9MTVdPSJGaXhlZFNpemVCaW5hcnkiLGVbZS5GaXhlZFNpemVMaXN0PTE2XT0iRml4ZWRTaXplTGlzdCIsZVtlLk1hcD0xN109Ik1hcCIsZVtlLkR1cmF0aW9uPTE4XT0iRHVyYXRpb24iLGVbZS5MYXJnZUJpbmFyeT0xOV09IkxhcmdlQmluYXJ5IixlW2UuTGFyZ2VVdGY4PTIwXT0iTGFyZ2VVdGY4IixlW2UuRGljdGlvbmFyeT0tMV09IkRpY3Rpb25hcnkiLGVbZS5JbnQ4PS0yXT0iSW50OCIsZVtlLkludDE2PS0zXT0iSW50MTYiLGVbZS5J"
     ""
     ""
     "bjppPWUudmlzaXRTcGFyc2VVbmlvbnx8ZS52aXNpdFVuaW9uO2JyZWFrO2Nhc2UgcC5aVS5EaWN0aW9uYXJ5Omk9ZS52aXNpdERpY3Rpb25hcnk7YnJlYWs7Y2FzZSBwLlpVLkludGVydmFsOmk9ZS52aXNpdEludGVydmFsO2JyZWFrO2Nhc2UgcC5aVS5JbnRlcnZhbERheVRpbWU6aT1lLnZpc2l0SW50ZXJ2YWxEYXlUaW1lfHxlLnZpc2l0SW50ZXJ2YWw7YnJlYWs7Y2FzZSBwLlpVLkludGVydmFsWWVhck1vbnRoOmk9ZS52aXNpdEludGVydmFsWWVhck1vbnRofHxlLnZpc2l0SW50ZXJ2YWw7YnJlYWs7Y2FzZSBwLlpVLkR1cmF0aW9uOmk9ZS52aXNpdER1cmF0aW9uO2JyZWFrO2Nhc2UgcC5aVS5EdXJhdGlvblNlY29uZDppPWUudmlzaXREdXJhdGlvblNlY29uZHx8ZS52aXNpdER1cmF0aW9uO2JyZWFrO2Nhc2UgcC5aVS5EdXJhdGlvbk1pbGxpc2Vjb25kOmk9ZS52aXNpdER1cmF0aW9uTWlsbGlzZWNvbmR8fGUudmlzaXREdXJhdGlvbjticmVhaztjYXNlIHAuWlUuRHVyYXRpb25NaWNyb3NlY29uZDppPWUudmlzaXREdXJhdGlvbk1pY3Jvc2Vjb25kfHxlLnZpc2l0RHVyYXRpb247YnJlYWs7Y2FzZSBwLlpVLkR1cmF0aW9uTmFub3NlY29uZDppPWUudmlzaXREdXJhdGlvbk5hbm9zZWNvbmR8fGUudmlzaXREdXJhdGlvbjticmVhaztjYXNlIHAuWlUuRml4ZWRTaXplTGlzdDppPWUudmlzaXRGaXhlZFNpemVMaXN0O2JyZWFrO2Nhc2UgcC5aVS5NYXA6aT1lLnZpc2l0TWFwfWlmKCJmdW5jdGlvbiI9PXR5cGVvZiBpKXJldHVybiBpO2lmKCFyKXJldHVybigpPT5udWxsO3Rocm93IEVycm9yKGBVbnJlY29nbml6ZWQgdHlwZSAnJHtwLlpVW3RdfSdgKX1mdW5jdGlvbiBlcChlKXtzd2l0Y2goZS50eXBlSWQpe2Nhc2UgcC5aVS5OdWxsOnJldHVybiBwLlpVLk51bGw7Y2FzZSBwLlpVLkludDp7bGV0e2JpdFdpZHRoOnQsaXNTaWduZWQ6cn09ZTtzd2l0Y2godCl7Y2FzZSA4OnJldHVybiByP3AuWlUuSW50ODpwLlpVLlVpbnQ4O2Nhc2UgMTY6cmV0dXJuIHI/cC5aVS5JbnQxNjpwLlpVLlVpbnQxNjtjYXNlIDMyOnJldHVybiByP3AuWlUuSW50MzI6cC5aVS5VaW50MzI7Y2FzZSA2NDpyZXR1cm4gcj9wLlpVLkludDY0OnAuWlUuVWludDY0fXJldHVybiBwLlpVLkludH1jYXNlIHAuWlUuRmxvYXQ6c3dpdGNoKGUucHJlY2lzaW9uKXtjYXNlIGVvLmouSEFMRjpyZXR1cm4gcC5aVS5GbG9hdDE2O2Nhc2UgZW8uai5TSU5HTEU6cmV0dXJuIHAuWlUuRmxvYXQzMjtjYXNlIGVvLmouRE9VQkxFOnJldHVybiBwLlpVLkZsb2F0NjR9cmV0dXJuIHAuWlUuRmxvYXQ7Y2FzZSBwLlpVLkJpbmFyeTpyZXR1cm4gcC5aVS5CaW5hcnk7Y2FzZSBwLlpVLkxhcmdlQmluYXJ5OnJldHVybiBwLlpVLkxhcmdlQmluYXJ5O2Nhc2UgcC5aVS5VdGY4OnJldHVybiBwLlpVLlV0Zjg7Y2FzZSBwLlpVLkxhcmdlVXRmODpyZXR1cm4gcC5aVS5MYXJnZVV0Zjg7Y2FzZSBwLlpVLkJvb2w6cmV0dXJuIHAuWlUuQm9vbDtjYXNlIHAuWlUuRGVjaW1hbDpyZXR1cm4gcC5aVS5EZWNpbWFsO2Nhc2UgcC5aVS5UaW1lOnN3aXRjaChlLnVuaXQpe2Nhc2UgZXMueS5TRUNPTkQ6cmV0dXJuIHAuWlUuVGltZVNlY29uZDtjYXNlIGVzLnkuTUlMTElTRUNPTkQ6cmV0dXJuIHAuWlUuVGltZU1pbGxpc2Vjb25kO2Nhc2UgZXMueS5NSUNST1NFQ09ORDpyZXR1cm4gcC5aVS5UaW1lTWljcm9zZWNvbmQ7Y2FzZSBlcy55Lk5BTk9TRUNPTkQ6cmV0dXJuIHAuWlUuVGltZU5hbm9zZWNvbmR9cmV0dXJuIHAuWlUuVGltZTtjYXNlIHAuWlUuVGltZXN0YW1wOnN3aXRjaChlLnVuaXQpe2Nhc2UgZXMueS5TRUNPTkQ6cmV0dXJuIHAuWlUuVGltZXN0YW1wU2Vjb25kO2Nhc2UgZXMueS5NSUxMSVNFQ09ORDpyZXR1cm4gcC5aVS5UaW1lc3RhbXBNaWxsaXNlY29uZDtjYXNlIGVzLnkuTUlDUk9TRUNPTkQ6cmV0dXJuIHAuWlUuVGltZXN0YW1wTWljcm9zZWNvbmQ7Y2FzZSBlcy55Lk5BTk9TRUNPTkQ6cmV0dXJuIHAuWlUuVGltZXN0YW1wTmFub3NlY29uZH1yZXR1cm4gcC5aVS5UaW1lc3RhbXA7Y2FzZSBwLlpVLkRhdGU6c3dpdGNoKGUudW5pdCl7Y2FzZSBlYS5mLkRBWTpyZXR1cm4gcC5aVS5EYXRlRGF5O2Nhc2UgZWEuZi5NSUxMSVNFQ09ORDpyZXR1cm4gcC5aVS5EYXRlTWlsbGlzZWNvbmR9cmV0dXJuIHAuWlUuRGF0ZTtjYXNlIHAuWlUuSW50ZXJ2YWw6c3dpdGNoKGUudW5pdCl7Y2FzZSBlbC5hLkRBWV9USU1FOnJldHVybiBwLlpVLkludGVydmFsRGF5VGltZTtjYXNlIGVsLmEuWUVBUl9NT05USDpyZXR1cm4gcC5aVS5JbnRlcnZhbFllYXJNb250aH1yZXR1cm4gcC5aVS5JbnRlcnZhbDtjYXNlIHAuWlUuRHVyYXRpb246c3dpdGNoKGUudW5pdCl7Y2FzZSBlcy55LlNFQ09ORDpyZXR1cm4gcC5aVS5EdXJhdGlvblNlY29uZDtjYXNlIGVzLnkuTUlMTElTRUNPTkQ6cmV0dXJuIHAuWlUuRHVyYXRpb25NaWxsaXNlY29uZDtjYXNlIGVzLnkuTUlDUk9TRUNPTkQ6cmV0dXJuIHAuWlUuRHVyYXRpb25NaWNyb3NlY29uZDtjYXNlIGVzLnkuTkFOT1NFQ09ORDpyZXR1cm4gcC5aVS5EdXJhdGlvbk5hbm9zZWNvbmR9cmV0dXJuIHAuWlUuRHVyYXRpb247Y2FzZSBwLlpVLk1hcDpyZXR1cm4gcC5aVS5NYXA7Y2FzZSBwLlpVLkxpc3Q6cmV0dXJuIHAuWlUuTGlzdDtjYXNlIHAuWlUuU3RydWN0OnJldHVybiBwLlpVLlN0cnVjdDtjYXNlIHAuWlUuVW5pb246c3dpdGNoKGUubW9kZSl7Y2FzZSBlZC5SLkRlbnNlOnJldHVybiBwLlpVLkRlbnNlVW5pb247Y2FzZSBlZC5SLlNwYXJzZTpyZXR1cm4gcC5aVS5TcGFyc2VVbmlvbn1yZXR1cm4gcC5aVS5VbmlvbjtjYXNlIHAuWlUuRml4ZWRTaXplQmluYXJ5OnJldHVybiBwLlpVLkZpeGVkU2l6ZUJpbmFyeTtjYXNlIHAuWlUuRml4ZWRTaXplTGlzdDpyZXR1cm4gcC5aVS5GaXhlZFNpemVMaXN0O2Nhc2UgcC5aVS5EaWN0aW9uYXJ5OnJldHVybiBwLlpVLkRpY3Rpb25hcnl9dGhyb3cgRXJyb3IoYFVucmVjb2duaXplZCB0eXBlICcke3AuWlVbZS50eXBlSWRdfSdgKX1ldS5wcm90b3R5cGUudmlzaXRJbnQ4PW51bGwsZXUucHJvdG90eXBlLnZpc2l0SW50MTY9bnVsbCxldS5wcm90b3R5cGUudmlzaXRJbnQzMj1udWxsLGV1LnByb3RvdHlwZS52aXNpdEludDY0PW51bGwsZXUucHJvdG90eXBlLnZpc2l0VWludDg9bnVsbCxldS5wcm90b3R5cGUudmlzaXRVaW50MTY9bnVsbCxldS5wcm90b3R5cGUudmlzaXRVaW50MzI9bnVsbCxldS5wcm90b3R5cGUudmlzaXRVaW50NjQ9bnVsbCxldS5wcm90b3R5cGUudmlzaXRGbG9hdDE2PW51bGwsZXUucHJvdG90eXBlLnZpc2l0RmxvYXQzMj1udWxsLGV1LnByb3RvdHlwZS52aXNpdEZsb2F0NjQ9bnVsbCxldS5wcm90b3R5cGUudmlzaXREYXRlRGF5PW51bGwsZXUucHJvdG90eXBlLnZpc2l0RGF0ZU1pbGxpc2Vjb25kPW51bGwsZXUucHJvdG90eXBlLnZpc2l0VGltZXN0YW1wU2Vjb25kPW51bGwsZXUucHJvdG90eXBlLnZpc2l0VGltZXN0YW1wTWlsbGlzZWNvbmQ9bnVsbCxldS5wcm90b3R5cGUudmlzaXRUaW1lc3RhbXBNaWNyb3NlY29uZD1udWxsLGV1LnByb3RvdHlwZS52aXNpdFRpbWVzdGFtcE5hbm9zZWNvbmQ9bnVsbCxldS5wcm90b3R5cGUudmlzaXRUaW1lU2Vjb25kPW51bGwsZXUucHJvdG90eXBlLnZpc2l0VGltZU1pbGxpc2Vjb25kPW51bGwsZXUucHJvdG90eXBlLnZpc2l0VGltZU1pY3Jvc2Vjb25kPW51bGwsZXUucHJvdG90eXBlLnZpc2l0VGltZU5hbm9zZWNvbmQ9bnVsbCxldS5wcm90b3R5cGUudmlzaXREZW5zZVVuaW9uPW51bGwsZXUucHJvdG90eXBlLnZpc2l0U3BhcnNlVW5pb249bnVsbCxldS5wcm90b3R5cGUudmlzaXRJbnRlcnZhbERheVRpbWU9bnVsbCxldS5wcm90b3R5cGUudmlzaXRJbnRlcnZhbFllYXJNb250aD1udWxsLGV1LnByb3RvdHlwZS52aXNpdER1cmF0aW9uPW51bGwsZXUucHJvdG90eXBlLnZpc2l0RHVyYXRpb25TZWNvbmQ9bnVsbCxldS5wcm90b3R5cGUudmlzaXREdXJhdGlvbk1pbGxpc2Vjb25kPW51bGwsZXUucHJvdG90eXBlLnZpc2l0RHVyYXRpb25NaWNyb3NlY29uZD1udWxsLGV1LnByb3RvdHlwZS52aXNpdER1cmF0aW9uTmFub3NlY29uZD1udWxsO2xldCBlZj1uZXcgRmxvYXQ2NEFycmF5KDEpLGVnPW5ldyBVaW50MzJBcnJheShlZi5idWZmZXIpO2Z1bmN0aW9uIGV5KGUpe2xldCB0PSgzMTc0NCZlKT4+MTAscj0oMTAyMyZlKS8xMDI0LGk9TWF0aC5wb3coLTEsKDMyNzY4JmUpPj4xNSk7c3dpdGNoKHQpe2Nhc2UgMzE6cmV0dXJuIGkqKHI/TnVtYmVyLk5hTjoxLzApO2Nhc2UgMDpyZXR1cm4gaSoocj82MTAzNTE1NjI1ZS0xNCpyOjApfXJldHVybiBpKk1hdGgucG93KDIsdC0xNSkqKDErcil9Y2xhc3MgZW0gZXh0ZW5kcyBldXt9ZnVuY3Rpb24gZWIoZSl7cmV0dXJuKHQscixpKT0+e2lmKHQuc2V0VmFsaWQocixudWxsIT1pKSlyZXR1cm4gZSh0LHIsaSl9fWxldCBlXz0oZSx0LHIpPT57ZVt0XT1NYXRoLmZsb29yKHIvODY0ZTUpfSxldj0oZSx0LHIsaSk9PntpZihyKzE8dC5sZW5ndGgpe2xldCBuPSgwLFguaSkodFtyXSksbz0oMCxYLmkpKHRbcisxXSk7ZS5zZXQoaS5zdWJhcnJheSgwLG8tbiksbil9fSxldz0oe3ZhbHVlczplfSx0LHIpPT57ZVt0XT1yfSxlVD0oe3ZhbHVlczplfSx0LHIpPT57ZVt0XT1yfSxlRT0oe3ZhbHVlczplfSx0LHIpPT57ZVt0XT1mdW5jdGlvbihlKXtpZihlIT1lKXJldHVybiAzMjI1NjtlZlswXT1lO2xldCB0PSgweDgwMDAwMDAwJmVnWzFdKT4+MTYmNjU1MzUscj0weDdmZjAwMDAwJmVnWzFdLGk9MDtyZXR1cm4gcj49MHg0MGYwMDAwMD9lZ1swXT4wP3I9MzE3NDQ6KHI9KDB4N2MwMDAwMDAmcik+PjE2LGk9KDEwNDg1NzUmZWdbMV0pPj4xMCk6cjw9MHgzZjAwMDAwMD8oaT0xMDQ4NTc2KygoaT0xMDQ4NTc2KygxMDQ4NTc1JmVnWzFdKSk8PChyPj4yMCktOTk4KT4+MjEscj0wKToocj1yLTB4M2YwMDAwMDA+PjEwLGk9KDEwNDg1NzUmZWdbMV0pKzUxMj4+MTApLHR8cnw2NTUzNSZpfShyKX0sZVM9KHt2YWx1ZXM6ZX0sdCxyKT0+e2VfKGUsdCxyLnZhbHVlT2YoKSl9LGVBPSh7dmFsdWVzOmV9LHQscik9PntlW3RdPUJpZ0ludChyKX0sZXg9KHt2YWx1ZXM6ZSx2YWx1ZU9mZnNldHM6dH0scixpKT0+ZXYoZSx0LHIsaSksZU89KHt2YWx1ZXM6ZSx2YWx1ZU9mZnNldHM6dH0scixpKT0+ZXYoZSx0LHIsXyhpKSksZVI9KHt2YWx1ZXM6ZX0sdCxyKT0+e2VbdF09QmlnSW50KHIvMWUzKX0sZUk9KHt2YWx1ZXM6ZX0sdCxyKT0+e2VbdF09QmlnSW50KHIpfSxlTj0oe3ZhbHVlczplfSx0LHIpPT57ZVt0XT1CaWdJbnQoMWUzKnIpfSxlTD0oe3ZhbHVlczplfSx0LHIpPT57ZVt0XT1CaWdJbnQoMWU2KnIpfSxlRD0oe3ZhbHVlczplfSx0LHIpPT57ZVt0XT1yfSxlQz0oe3ZhbHVlczplfSx0LHIpPT57ZVt0XT1yfSxlQj0oe3ZhbHVlczplfSx0LHIpPT57ZVt0XT1yfSxlTT0oe3ZhbHVlczplfSx0LHIpPT57ZVt0XT1yfSxlVT0oZSx0KT0+KHIsaSxuLG8pPT5pJiZyKGksZSx0W29dKSxlRj0oZSx0KT0+KHIsaSxuLG8pPT5pJiZyKGksZSx0LmdldChvKSksZWs9KGUsdCk9PihyLGksbixvKT0+aSYmcihpLGUsdC5nZXQobi5uYW1lKSksZVA9KGUsdCk9PihyLGksbixvKT0+aSYmcihpLGUsdFtuLm5hbWVdKSxlaj0oZSx0LHIpPT57bGV0IGk9ZS50eXBlLnR5cGVJZFRvQ2hpbGRJbmRleFtlLnR5cGVJZHNbdF1dLG49ZS5jaGlsZHJlbltpXTtlWC52aXNpdChuLGUudmFsdWVPZmZzZXRzW3RdLHIpfSxlej0oZSx0LHIpPT57bGV0IGk9ZS50eXBlLnR5cGVJZFRvQ2hpbGRJbmRleFtlLnR5cGVJZHNbdF1dLG49ZS5jaGlsZHJlbltpXTtlWC52aXNpdChuLHQscil9LGVIPSh7dmFsdWVzOmV9LHQscik9PntlLnNldChyLnN1YmFycmF5KDAsMiksMip0KX0sZVk9KHt2YWx1ZXM6ZX0sdCxyKT0+e2VbdF09MTIqclswXStyWzFdJTEyfSxlVz0oe3ZhbHVlczplfSx0LHIpPT57ZVt0XT1yfSxlVj0oe3ZhbHVlczplfSx0LHIpPT57ZVt0XT1yfSxlWj0oe3ZhbHVlczplfSx0LHIpPT57ZVt0XT1yfSxlRz0oe3ZhbHVlczplfSx0LHIpPT57ZVt0XT1yfTtlbS5wcm90b3R5cGUudmlzaXRCb29sPWViKCh7b2Zmc2V0OmUsdmFsdWVzOnR9LHIsaSk9PntsZXQgbj1lK3I7aT90W24+PjNdfD0xPDxuJTg6dFtuPj4zXSY9figxPDxuJTgpfSksZW0ucHJvdG90eXBlLnZpc2l0SW50PWViKGV3KSxlbS5wcm90b3R5cGUudmlzaXRJbnQ4PWViKGV3KSxlbS"
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     "cyhlLmNoaWxkcmVuLHQuY2hpbGRyZW4pfSxyai5wcm90b3R5cGUudmlzaXRNYXA9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZT09PXR8fHJ6KGUsdCkmJmUua2V5c1NvcnRlZD09PXQua2V5c1NvcnRlZCYmZS5jaGlsZHJlbi5sZW5ndGg9PT10LmNoaWxkcmVuLmxlbmd0aCYmckouY29tcGFyZU1hbnlGaWVsZHMoZS5jaGlsZHJlbix0LmNoaWxkcmVuKX07bGV0IHJKPW5ldyByajtmdW5jdGlvbiBycShlLHQpe3JldHVybiBySi5jb21wYXJlU2NoZW1hcyhlLHQpfWZ1bmN0aW9uIHJRKGUsdCl7cmV0dXJuIGZ1bmN0aW9uKGUsdCl7bGV0IHI9Wy4uLmUuZmllbGRzXSxpPVtdLG49e251bUJhdGNoZXM6dC5yZWR1Y2UoKGUsdCk9Pk1hdGgubWF4KGUsdC5sZW5ndGgpLDApfSxvPTAscz0wLGE9LTEsbD10Lmxlbmd0aCxkLGM9W107Zm9yKDtuLm51bUJhdGNoZXMtLSA+MDspe2ZvcihzPU51bWJlci5QT1NJVElWRV9JTkZJTklUWSxhPS0xOysrYTxsOyljW2FdPWQ9dFthXS5zaGlmdCgpLHM9TWF0aC5taW4ocyxkP2QubGVuZ3RoOnMpO051bWJlci5pc0Zpbml0ZShzKSYmKGM9ZnVuY3Rpb24oZSx0LHIsaSxuKXt2YXIgbztsZXQgcz0odCs2MyYtNjQpPj4zO2ZvcihsZXQgYT0tMSxsPWkubGVuZ3RoOysrYTxsOyl7bGV0IGw9clthXSxkPW51bGw9PWw/dm9pZCAwOmwubGVuZ3RoO2lmKGQ+PXQpZD09PXQ/clthXT1sOihyW2FdPWwuc2xpY2UoMCx0KSxuLm51bUJhdGNoZXM9TWF0aC5tYXgobi5udW1CYXRjaGVzLGlbYV0udW5zaGlmdChsLnNsaWNlKHQsZC10KSkpKTtlbHNle2xldCBpPWVbYV07ZVthXT1pLmNsb25lKHtudWxsYWJsZTohMH0pLHJbYV09bnVsbCE9PShvPW51bGw9PWw/dm9pZCAwOmwuX2NoYW5nZUxlbmd0aEFuZEJhY2tmaWxsTnVsbEJpdG1hcCh0KSkmJnZvaWQgMCE9PW8/bzp0OCh7dHlwZTppLnR5cGUsbGVuZ3RoOnQsbnVsbENvdW50OnQsbnVsbEJpdG1hcDpuZXcgVWludDhBcnJheShzKX0pfX1yZXR1cm4gcn0ocixzLGMsdCxuKSxzPjAmJihpW28rK109dDgoe3R5cGU6bmV3IGVjLl9rKHIpLGxlbmd0aDpzLG51bGxDb3VudDowLGNoaWxkcmVuOmMuc2xpY2UoKX0pKSl9cmV0dXJuW2U9ZS5hc3NpZ24ociksaS5tYXAodD0+bmV3IHIxKGUsdCkpXX0oZSx0Lm1hcChlPT5lLmRhdGEuY29uY2F0KCkpKX1jbGFzcyByMHtjb25zdHJ1Y3RvciguLi5lKXt2YXIgdCxyO2xldCBpLG47aWYoMD09PWUubGVuZ3RoKXJldHVybiB0aGlzLmJhdGNoZXM9W10sdGhpcy5zY2hlbWE9bmV3IHJjKFtdKSx0aGlzLl9vZmZzZXRzPVswXSx0aGlzO2VbMF1pbnN0YW5jZW9mIHJjJiYoaT1lLnNoaWZ0KCkpLGUuYXQoLTEpaW5zdGFuY2VvZiBVaW50MzJBcnJheSYmKG49ZS5wb3AoKSk7bGV0IG89ZT0+e2lmKGUpe2lmKGUgaW5zdGFuY2VvZiByMSlyZXR1cm5bZV07aWYoZSBpbnN0YW5jZW9mIHIwKXJldHVybiBlLmJhdGNoZXM7aWYoZSBpbnN0YW5jZW9mIHQzKXtpZihlLnR5cGUgaW5zdGFuY2VvZiBlYy5faylyZXR1cm5bbmV3IHIxKG5ldyByYyhlLnR5cGUuY2hpbGRyZW4pLGUpXX1lbHNlIGlmKEFycmF5LmlzQXJyYXkoZSkpcmV0dXJuIGUuZmxhdE1hcChlPT5vKGUpKTtlbHNlIGlmKCJmdW5jdGlvbiI9PXR5cGVvZiBlW1N5bWJvbC5pdGVyYXRvcl0pcmV0dXJuWy4uLmVdLmZsYXRNYXAoZT0+byhlKSk7ZWxzZSBpZigib2JqZWN0Ij09dHlwZW9mIGUpe2xldCB0PU9iamVjdC5rZXlzKGUpLHI9dC5tYXAodD0+bmV3IHQxKFtlW3RdXSkpLFssbl09clEobnVsbCE9aT9pOm5ldyByYyh0Lm1hcCgoZSx0KT0+bmV3IHJ1KFN0cmluZyhlKSxyW3RdLnR5cGUsclt0XS5udWxsYWJsZSkpKSxyKTtyZXR1cm4gMD09PW4ubGVuZ3RoP1tuZXcgcjEoZSldOm59fXJldHVybltdfSxzPWUuZmxhdE1hcChlPT5vKGUpKTtpZighKChpPW51bGwhPT0ocj1udWxsIT1pP2k6bnVsbD09PSh0PXNbMF0pfHx2b2lkIDA9PT10P3ZvaWQgMDp0LnNjaGVtYSkmJnZvaWQgMCE9PXI/cjpuZXcgcmMoW10pKWluc3RhbmNlb2YgcmMpKXRocm93IFR5cGVFcnJvcigiVGFibGUgY29uc3RydWN0b3IgZXhwZWN0cyBhIFtTY2hlbWEsIFJlY29yZEJhdGNoW11dIHBhaXIuIik7Zm9yKGxldCBlIG9mIHMpe2lmKCEoZSBpbnN0YW5jZW9mIHIxKSl0aHJvdyBUeXBlRXJyb3IoIlRhYmxlIGNvbnN0cnVjdG9yIGV4cGVjdHMgYSBbU2NoZW1hLCBSZWNvcmRCYXRjaFtdXSBwYWlyLiIpO2lmKCFycShpLGUuc2NoZW1hKSl0aHJvdyBUeXBlRXJyb3IoIlRhYmxlIGFuZCBpbm5lciBSZWNvcmRCYXRjaCBzY2hlbWFzIG11c3QgYmUgZXF1aXZhbGVudC4iKX10aGlzLnNjaGVtYT1pLHRoaXMuYmF0Y2hlcz1zLHRoaXMuX29mZnNldHM9bnVsbCE9bj9uOnREKHRoaXMuZGF0YSl9Z2V0IGRhdGEoKXtyZXR1cm4gdGhpcy5iYXRjaGVzLm1hcCgoe2RhdGE6ZX0pPT5lKX1nZXQgbnVtQ29scygpe3JldHVybiB0aGlzLnNjaGVtYS5maWVsZHMubGVuZ3RofWdldCBudW1Sb3dzKCl7cmV0dXJuIHRoaXMuZGF0YS5yZWR1Y2UoKGUsdCk9PmUrdC5sZW5ndGgsMCl9Z2V0IG51bGxDb3VudCgpe3JldHVybiAtMT09PXRoaXMuX251bGxDb3VudCYmKHRoaXMuX251bGxDb3VudD10TCh0aGlzLmRhdGEpKSx0aGlzLl9udWxsQ291bnR9aXNWYWxpZChlKXtyZXR1cm4hMX1nZXQoZSl7cmV0dXJuIG51bGx9YXQoZSl7cmV0dXJuIHRoaXMuZ2V0KHRBKGUsdGhpcy5udW1Sb3dzKSl9c2V0KGUsdCl7fWluZGV4T2YoZSx0KXtyZXR1cm4gLTF9W1N5bWJvbC5pdGVyYXRvcl0oKXtyZXR1cm4gdGhpcy5iYXRjaGVzLmxlbmd0aD4wP3RxLnZpc2l0KG5ldyB0MSh0aGlzLmRhdGEpKTpbXVtTeW1ib2wuaXRlcmF0b3JdKCl9dG9BcnJheSgpe3JldHVyblsuLi50aGlzXX10b1N0cmluZygpe3JldHVybmBbCiAgJHt0aGlzLnRvQXJyYXkoKS5qb2luKCIsXG4gICIpfQpdYH1jb25jYXQoLi4uZSl7bGV0IHQ9dGhpcy5zY2hlbWE7cmV0dXJuIG5ldyByMCh0LHRoaXMuZGF0YS5jb25jYXQoZS5mbGF0TWFwKCh7ZGF0YTplfSk9PmUpKS5tYXAoZT0+bmV3IHIxKHQsZSkpKX1zbGljZShlLHQpe2xldCByPXRoaXMuc2NoZW1hO3JldHVybltlLHRdPXRTKHtsZW5ndGg6dGhpcy5udW1Sb3dzfSxlLHQpLG5ldyByMChyLHRDKHRoaXMuZGF0YSx0aGlzLl9vZmZzZXRzLGUsdCkubWFwKGU9Pm5ldyByMShyLGUpKSl9Z2V0Q2hpbGQoZSl7cmV0dXJuIHRoaXMuZ2V0Q2hpbGRBdCh0aGlzLnNjaGVtYS5maWVsZHMuZmluZEluZGV4KHQ9PnQubmFtZT09PWUpKX1nZXRDaGlsZEF0KGUpe2lmKGU+LTEmJmU8dGhpcy5zY2hlbWEuZmllbGRzLmxlbmd0aCl7bGV0IHQ9dGhpcy5kYXRhLm1hcCh0PT50LmNoaWxkcmVuW2VdKTtpZigwPT09dC5sZW5ndGgpe2xldHt0eXBlOnJ9PXRoaXMuc2NoZW1hLmZpZWxkc1tlXSxpPXQ4KHt0eXBlOnIsbGVuZ3RoOjAsbnVsbENvdW50OjB9KTt0LnB1c2goaS5fY2hhbmdlTGVuZ3RoQW5kQmFja2ZpbGxOdWxsQml0bWFwKHRoaXMubnVtUm93cykpfXJldHVybiBuZXcgdDEodCl9cmV0dXJuIG51bGx9c2V0Q2hpbGQoZSx0KXt2YXIgcjtyZXR1cm4gdGhpcy5zZXRDaGlsZEF0KG51bGw9PT0ocj10aGlzLnNjaGVtYS5maWVsZHMpfHx2b2lkIDA9PT1yP3ZvaWQgMDpyLmZpbmRJbmRleCh0PT50Lm5hbWU9PT1lKSx0KX1zZXRDaGlsZEF0KGUsdCl7bGV0IHI9dGhpcy5zY2hlbWEsaT1bLi4udGhpcy5iYXRjaGVzXTtpZihlPi0xJiZlPHRoaXMubnVtQ29scyl7dHx8KHQ9bmV3IHQxKFt0OCh7dHlwZTpuZXcgZWMuVXYsbGVuZ3RoOnRoaXMubnVtUm93c30pXSkpO2xldCBuPXIuZmllbGRzLnNsaWNlKCksbz1uW2VdLmNsb25lKHt0eXBlOnQudHlwZX0pLHM9dGhpcy5zY2hlbWEuZmllbGRzLm1hcCgoZSx0KT0+dGhpcy5nZXRDaGlsZEF0KHQpKTtbbltlXSxzW2VdXT1bbyx0XSxbcixpXT1yUShyLHMpfXJldHVybiBuZXcgcjAocixpKX1zZWxlY3QoZSl7bGV0IHQ9dGhpcy5zY2hlbWEuZmllbGRzLnJlZHVjZSgoZSx0LHIpPT5lLnNldCh0Lm5hbWUsciksbmV3IE1hcCk7cmV0dXJuIHRoaXMuc2VsZWN0QXQoZS5tYXAoZT0+dC5nZXQoZSkpLmZpbHRlcihlPT5lPi0xKSl9c2VsZWN0QXQoZSl7cmV0dXJuIG5ldyByMCh0aGlzLnNjaGVtYS5zZWxlY3RBdChlKSx0aGlzLmJhdGNoZXMubWFwKHQ9PnQuc2VsZWN0QXQoZSkpKX1hc3NpZ24oZSl7bGV0IHQ9dGhpcy5zY2hlbWEuZmllbGRzLFtyLGldPWUuc2NoZW1hLmZpZWxkcy5yZWR1Y2UoKGUscixpKT0+e2xldFtuLG9dPWUscz10LmZpbmRJbmRleChlPT5lLm5hbWU9PT1yLm5hbWUpO3JldHVybn5zP29bc109aTpuLnB1c2goaSksZX0sW1tdLFtdXSk7cmV0dXJuIG5ldyByMCguLi5yUSh0aGlzLnNjaGVtYS5hc3NpZ24oZS5zY2hlbWEpLFsuLi50Lm1hcCgoZSx0KT0+W3QsaVt0XV0pLm1hcCgoW3Qscl0pPT52b2lkIDA9PT1yP3RoaXMuZ2V0Q2hpbGRBdCh0KTplLmdldENoaWxkQXQocikpLC4uLnIubWFwKHQ9PmUuZ2V0Q2hpbGRBdCh0KSldLmZpbHRlcihCb29sZWFuKSkpfX1yMFtTeW1ib2wudG9TdHJpbmdUYWddPShlPT4oZS5zY2hlbWE9bnVsbCxlLmJhdGNoZXM9W10sZS5fb2Zmc2V0cz1uZXcgVWludDMyQXJyYXkoWzBdKSxlLl9udWxsQ291bnQ9LTEsZVtTeW1ib2wuaXNDb25jYXRTcHJlYWRhYmxlXT0hMCxlLmlzVmFsaWQ9dFUodE0pLGUuZ2V0PXRVKHR5LmdldFZpc2l0Rm4ocC5aVS5TdHJ1Y3QpKSxlLnNldD10RihlWC5nZXRWaXNpdEZuKHAuWlUuU3RydWN0KSksZS5pbmRleE9mPXRrKHRYLmdldFZpc2l0Rm4ocC5aVS5TdHJ1Y3QpKSwiVGFibGUiKSkocjAucHJvdG90eXBlKTtjbGFzcyByMXtjb25zdHJ1Y3RvciguLi5lKXtzd2l0Y2goZS5sZW5ndGgpe2Nhc2UgMjppZihbdGhpcy5zY2hlbWFdPWUsISh0aGlzLnNjaGVtYSBpbnN0YW5jZW9mIHJjKXx8KFssdGhpcy5kYXRhPXQ4KHtudWxsQ291bnQ6MCx0eXBlOm5ldyBlYy5fayh0aGlzLnNjaGVtYS5maWVsZHMpLGNoaWxkcmVuOnRoaXMuc2NoZW1hLmZpZWxkcy5tYXAoZT0+dDgoe3R5cGU6ZS50eXBlLG51bGxDb3VudDowfSkpfSldPWUsISh0aGlzLmRhdGEgaW5zdGFuY2VvZiB0MykpKXRocm93IFR5cGVFcnJvcigiUmVjb3JkQmF0Y2ggY29uc3RydWN0b3IgZXhwZWN0cyBhIFtTY2hlbWEsIERhdGFdIHBhaXIuIik7W3RoaXMuc2NoZW1hLHRoaXMuZGF0YV09cjIodGhpcy5zY2hlbWEsdGhpcy5kYXRhLmNoaWxkcmVuKTticmVhaztjYXNlIDE6e2xldFt0XT1lLHtmaWVsZHM6cixjaGlsZHJlbjppLGxlbmd0aDpufT1PYmplY3Qua2V5cyh0KS5yZWR1Y2UoKGUscixpKT0+KGUuY2hpbGRyZW5baV09dFtyXSxlLmxlbmd0aD1NYXRoLm1heChlLmxlbmd0aCx0W3JdLmxlbmd0aCksZS5maWVsZHNbaV09cnUubmV3KHtuYW1lOnIsdHlwZTp0W3JdLnR5cGUsbnVsbGFibGU6ITB9KSxlKSx7bGVuZ3RoOjAsZmllbGRzOltdLGNoaWxkcmVuOltdfSksbz1uZXcgcmMocikscz10OCh7dHlwZTpuZXcgZWMuX2sociksbGVuZ3RoOm4sY2hpbGRyZW46aSxudWxsQ291bnQ6MH0pO1t0aGlzLnNjaGVtYSx0aGlzLmRhdGFdPXIyKG8scy5jaGlsZHJlbixuKTticmVha31kZWZhdWx0OnRocm93IFR5cGVFcnJvcigiUmVjb3JkQmF0Y2ggY29uc3RydWN0b3IgZXhwZWN0cyBhbiBPYmplY3QgbWFwcGluZyBuYW1lcyB0byBjaGlsZCBEYXRhLCBvciBhIFtTY2hlbWEsIERhdGFdIHBhaXIuIil9fWdldCBkaWN0aW9uYXJpZXMoKXtyZXR1cm4gdGhpcy5fZGljdGlvbmFyaWVzfHwodGhpcy5fZGljdGlvbmFyaWVzPWZ1bmN0aW9uIGUodCxyLGk9bmV3IE1hcCl7dmFyIG4sbztpZigobnVsbCE9PShuPW51bGw9PXQ/dm9pZCAwOnQubGVuZ3RoKSYmdm9pZCAwIT09bj9uOjApPjAmJihudWxsPT10P3ZvaWQgMDp0Lmxlbmd0aCk9PT0obnVsbD09cj92b2lkIDA6ci5sZW5ndGgpKWZvcihsZXQgbj0tMSxzPXQubGVuZ3RoOysrbjxzOyl7bGV0e3R5cGU6c309dFtuXSxhPXJbbl07Zm9yKGxldCB0IG9mW2EsLi4uKG51bGw9PT0obz1udWxsPT1hP3ZvaWQgMDphLmRpY3Rpb25hcnkpfHx2b2lkIDA9PT1vP3ZvaWQgMDpvLmRhdGEpfHxbXV0pZShzLmNoaWxkcmVuLG51bGw9PXQ/dm9pZCAwOnQuY2hpbGRyZW4saSk7aWYoZWMucGUuaXNEaWN0aW9uYXJ5KHMpKXtsZXR7aWQ6ZX09cztpZihpLmhhcyhlKSl7aWYoaS5nZXQoZSkhPT1hLmRpY3Rpb25hcnkpdGhyb3cgRXJyb3IoIkNhbm5vdCBjcmVhdGUgU2NoZW1hIGNvbnRhaW5pbmcgdHdvIGRpZm"
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     "KSxyW3QuZ2V0SWQoKV09aS5jcmVhdGVFbGVtZW50KHYuVGFiRmxvYXRpbmcse2tleTp0LmdldElkKCksbGF5b3V0OnRoaXMscGF0aDpvLG5vZGU6dCxzZWxlY3RlZDpsPT09cy5nZXRTZWxlY3RlZCgpfSl9ZWxzZSByW3QuZ2V0SWQoKV09aS5jcmVhdGVFbGVtZW50KHkuVGFiLHtrZXk6dC5nZXRJZCgpLGxheW91dDp0aGlzLHBhdGg6byxub2RlOnQsc2VsZWN0ZWQ6bD09PXMuZ2V0U2VsZWN0ZWQoKSxmYWN0b3J5OnRoaXMucHJvcHMuZmFjdG9yeX0pfWwrK319fX1yZW5kZXJDaGlsZHJlbihlLHQscixuLG8scyl7bGV0IGE9dC5fZ2V0RHJhd0NoaWxkcmVuKCksbD0wLGg9MCxwPTA7Zm9yKGxldCB0IG9mIGEpaWYodCBpbnN0YW5jZW9mIGQuU3BsaXR0ZXJOb2RlKXtsZXQgcj1lKyIvcyIrbCsrO3MucHVzaChpLmNyZWF0ZUVsZW1lbnQoZy5TcGxpdHRlcix7a2V5OnQuZ2V0SWQoKSxsYXlvdXQ6dGhpcyxwYXRoOnIsbm9kZTp0fSkpfWVsc2UgaWYodCBpbnN0YW5jZW9mIHUuVGFiU2V0Tm9kZSl7bGV0IGE9ZSsiL3RzIitwKys7ci5wdXNoKGkuY3JlYXRlRWxlbWVudChtLlRhYlNldCx7a2V5OnQuZ2V0SWQoKSxsYXlvdXQ6dGhpcyxwYXRoOmEsbm9kZTp0LGljb25GYWN0b3J5OnRoaXMucHJvcHMuaWNvbkZhY3RvcnksdGl0bGVGYWN0b3J5OnRoaXMucHJvcHMudGl0bGVGYWN0b3J5LGljb25zOnRoaXMuaWNvbnN9KSksdGhpcy5yZW5kZXJDaGlsZHJlbihhLHQscixuLG8scyl9ZWxzZSBpZih0IGluc3RhbmNlb2YgYy5UYWJOb2RlKXtsZXQgcj1lKyIvdCIraCsrLHM9dC5nZXRQYXJlbnQoKS5nZXRDaGlsZHJlbigpW3QuZ2V0UGFyZW50KCkuZ2V0U2VsZWN0ZWQoKV07aWYodm9pZCAwPT09cyYmY29uc29sZS53YXJuKCJ1bmRlZmluZWQgc2VsZWN0ZWRUYWIgc2hvdWxkIG5vdCBoYXBwZW4iKSx0aGlzLnN1cHBvcnRzUG9wb3V0JiZ0LmlzRmxvYXRpbmcoKSl7bGV0IGU9dGhpcy5fZ2V0U2NyZWVuUmVjdCh0KTtvLnB1c2goaS5jcmVhdGVFbGVtZW50KGIuRmxvYXRpbmdXaW5kb3cse2tleTp0LmdldElkKCksdXJsOnRoaXMucG9wb3V0VVJMLHJlY3Q6ZSx0aXRsZTp0LmdldE5hbWUoKSxpZDp0LmdldElkKCksb25TZXRXaW5kb3c6dGhpcy5vblNldFdpbmRvdyxvbkNsb3NlV2luZG93OnRoaXMub25DbG9zZVdpbmRvd30saS5jcmVhdGVFbGVtZW50KF8uRmxvYXRpbmdXaW5kb3dUYWIse2xheW91dDp0aGlzLG5vZGU6dCxmYWN0b3J5OnRoaXMucHJvcHMuZmFjdG9yeX0pKSksblt0LmdldElkKCldPWkuY3JlYXRlRWxlbWVudCh2LlRhYkZsb2F0aW5nLHtrZXk6dC5nZXRJZCgpLGxheW91dDp0aGlzLHBhdGg6cixub2RlOnQsc2VsZWN0ZWQ6dD09PXN9KX1lbHNlIG5bdC5nZXRJZCgpXT1pLmNyZWF0ZUVsZW1lbnQoeS5UYWIse2tleTp0LmdldElkKCksbGF5b3V0OnRoaXMscGF0aDpyLG5vZGU6dCxzZWxlY3RlZDp0PT09cyxmYWN0b3J5OnRoaXMucHJvcHMuZmFjdG9yeX0pfWVsc2V7bGV0IGk9ZSsodC5nZXRPcmllbnRhdGlvbigpPT09dy5PcmllbnRhdGlvbi5IT1JaPyIvciI6Ii9jIikrcCsrO3RoaXMucmVuZGVyQ2hpbGRyZW4oaSx0LHIsbixvLHMpfX1fZ2V0U2NyZWVuUmVjdChlKXt2YXIgdDtsZXQgcj1lLmdldFJlY3QoKS5jbG9uZSgpLGk9bnVsbD09PSh0PXRoaXMuc2VsZlJlZi5jdXJyZW50KXx8dm9pZCAwPT09dD92b2lkIDA6dC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtpZighaSlyZXR1cm4gbnVsbDtsZXQgbj1NYXRoLm1pbig4MCx0aGlzLmN1cnJlbnRXaW5kb3cub3V0ZXJIZWlnaHQtdGhpcy5jdXJyZW50V2luZG93LmlubmVySGVpZ2h0KSxvPU1hdGgubWluKDgwLHRoaXMuY3VycmVudFdpbmRvdy5vdXRlcldpZHRoLXRoaXMuY3VycmVudFdpbmRvdy5pbm5lcldpZHRoKTtyZXR1cm4gci54PXIueCtpLngrdGhpcy5jdXJyZW50V2luZG93LnNjcmVlblgrbyxyLnk9ci55K2kueSt0aGlzLmN1cnJlbnRXaW5kb3cuc2NyZWVuWStuLHJ9YWRkVGFiVG9UYWJTZXQoZSx0KXtpZih2b2lkIDAhPT10aGlzLnByb3BzLm1vZGVsLmdldE5vZGVCeUlkKGUpKXJldHVybiB0aGlzLmRvQWN0aW9uKGEuQWN0aW9ucy5hZGROb2RlKHQsZSxvLkRvY2tMb2NhdGlvbi5DRU5URVIsLTEpKX1hZGRUYWJUb0FjdGl2ZVRhYlNldChlKXtsZXQgdD10aGlzLnByb3BzLm1vZGVsLmdldEFjdGl2ZVRhYnNldCgpO2lmKHZvaWQgMCE9PXQpcmV0dXJuIHRoaXMuZG9BY3Rpb24oYS5BY3Rpb25zLmFkZE5vZGUoZSx0LmdldElkKCksby5Eb2NrTG9jYXRpb24uQ0VOVEVSLC0xKSl9YWRkVGFiV2l0aERyYWdBbmREcm9wKGUsdCxyKXt0aGlzLmZuTmV3Tm9kZURyb3BwZWQ9cix0aGlzLm5ld1RhYkpzb249dCx0aGlzLmRyYWdTdGFydCh2b2lkIDAsZSxjLlRhYk5vZGUuX2Zyb21Kc29uKHQsdGhpcy5wcm9wcy5tb2RlbCwhMSksITAsdm9pZCAwLHZvaWQgMCl9bW92ZVRhYldpdGhEcmFnQW5kRHJvcChlLHQpe3RoaXMuZHJhZ1N0YXJ0KHZvaWQgMCx0LGUsITAsdm9pZCAwLHZvaWQgMCl9YWRkVGFiV2l0aERyYWdBbmREcm9wSW5kaXJlY3QoZSx0LHIpe3RoaXMuZm5OZXdOb2RlRHJvcHBlZD1yLHRoaXMubmV3VGFiSnNvbj10LHMuRHJhZ0Ryb3AuaW5zdGFuY2UuYWRkR2xhc3ModGhpcy5vbkNhbmNlbEFkZCksdGhpcy5kcmFnRGl2VGV4dD1lLHRoaXMuZHJhZ0Rpdj10aGlzLmN1cnJlbnREb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKSx0aGlzLmRyYWdEaXYuY2xhc3NOYW1lPXRoaXMuZ2V0Q2xhc3NOYW1lKHAuQ0xBU1NFUy5GTEVYTEFZT1VUX19EUkFHX1JFQ1QpLHRoaXMuZHJhZ0Rpdi5hZGRFdmVudExpc3RlbmVyKCJtb3VzZWRvd24iLHRoaXMub25EcmFnRGl2TW91c2VEb3duKSx0aGlzLmRyYWdEaXYuYWRkRXZlbnRMaXN0ZW5lcigidG91Y2hzdGFydCIsdGhpcy5vbkRyYWdEaXZNb3VzZURvd24se3Bhc3NpdmU6ITF9KSx0aGlzLmRyYWdSZWN0UmVuZGVyKHRoaXMuZHJhZ0RpdlRleHQsdm9pZCAwLHRoaXMubmV3VGFiSnNvbiwoKT0+e2lmKHRoaXMuZHJhZ0Rpdil7dGhpcy5kcmFnRGl2LnN0eWxlLnZpc2liaWxpdHk9InZpc2libGUiO2xldCBlPXRoaXMuZHJhZ0Rpdi5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSx0PW5ldyBoLlJlY3QoMCwwLG51bGw9PWU/dm9pZCAwOmUud2lkdGgsbnVsbD09ZT92b2lkIDA6ZS5oZWlnaHQpO3QuY2VudGVySW5SZWN0KHRoaXMuc3RhdGUucmVjdCksdGhpcy5kcmFnRGl2LnNldEF0dHJpYnV0ZSgiZGF0YS1sYXlvdXQtcGF0aCIsIi9kcmFnLXJlY3RhbmdsZSIpLHRoaXMuZHJhZ0Rpdi5zdHlsZS5sZWZ0PXQueCsicHgiLHRoaXMuZHJhZ0Rpdi5zdHlsZS50b3A9dC55KyJweCJ9fSksdGhpcy5zZWxmUmVmLmN1cnJlbnQuYXBwZW5kQ2hpbGQodGhpcy5kcmFnRGl2KX1oYW5kbGVDdXN0b21UYWJEcmFnKGUsdCxyKXt2YXIgaSxuLG87bGV0IGE9bnVsbD09PShpPXRoaXMuY3VzdG9tRHJvcCl8fHZvaWQgMD09PWk/dm9pZCAwOmkuaW52YWxpZGF0ZWQsZD1udWxsPT09KG49dGhpcy5jdXN0b21Ecm9wKXx8dm9pZCAwPT09bj92b2lkIDA6bi5jYWxsYmFjazt0aGlzLmN1c3RvbURyb3A9dm9pZCAwO2xldCBmPXRoaXMubmV3VGFiSnNvbnx8KHRoaXMuZHJhZ05vZGUgaW5zdGFuY2VvZiBjLlRhYk5vZGU/dGhpcy5kcmFnTm9kZTp2b2lkIDApO2lmKGYmJihlLm5vZGUgaW5zdGFuY2VvZiB1LlRhYlNldE5vZGV8fGUubm9kZSBpbnN0YW5jZW9mIGwuQm9yZGVyTm9kZSkmJi0xPT09ZS5pbmRleCl7bGV0IGk9ZS5ub2RlLmdldFNlbGVjdGVkTm9kZSgpLG49bnVsbD09aT92b2lkIDA6aS5nZXRSZWN0KCk7aWYoaSYmKG51bGw9PW4/dm9pZCAwOm4uY29udGFpbnModC54LHQueSkpKXtsZXQgbzt0cnl7bGV0IHM9dGhpcy5vblRhYkRyYWcoZixpLHQueC1uLngsdC55LW4ueSxlLmxvY2F0aW9uLCgpPT50aGlzLm9uRHJhZ01vdmUocikpO3MmJihvPXtyZWN0Om5ldyBoLlJlY3Qocy54K24ueCxzLnkrbi55LHMud2lkdGgscy5oZWlnaHQpLGNhbGxiYWNrOnMuY2FsbGJhY2ssaW52YWxpZGF0ZWQ6cy5pbnZhbGlkYXRlZCxkcmFnZ2luZzpmLG92ZXI6aSx4OnQueC1uLngseTp0Lnktbi55LGxvY2F0aW9uOmUubG9jYXRpb24sY3Vyc29yOnMuY3Vyc29yfSl9Y2F0Y2goZSl7Y29uc29sZS5lcnJvcihlKX0obnVsbD09bz92b2lkIDA6by5jYWxsYmFjayk9PT1kJiYoYT12b2lkIDApLHRoaXMuY3VzdG9tRHJvcD1vfX10aGlzLmRyb3BJbmZvPWUsdGhpcy5vdXRsaW5lRGl2JiYodGhpcy5vdXRsaW5lRGl2LmNsYXNzTmFtZT10aGlzLmdldENsYXNzTmFtZSh0aGlzLmN1c3RvbURyb3A/cC5DTEFTU0VTLkZMRVhMQVlPVVRfX09VVExJTkVfUkVDVDplLmNsYXNzTmFtZSksdGhpcy5jdXN0b21Ecm9wP3RoaXMuY3VzdG9tRHJvcC5yZWN0LnBvc2l0aW9uRWxlbWVudCh0aGlzLm91dGxpbmVEaXYpOmUucmVjdC5wb3NpdGlvbkVsZW1lbnQodGhpcy5vdXRsaW5lRGl2KSkscy5EcmFnRHJvcC5pbnN0YW5jZS5zZXRHbGFzc0N1cnNvck92ZXJyaWRlKG51bGw9PT0obz10aGlzLmN1c3RvbURyb3ApfHx2b2lkIDA9PT1vP3ZvaWQgMDpvLmN1cnNvciksdGhpcy5vdXRsaW5lRGl2JiYodGhpcy5vdXRsaW5lRGl2LnN0eWxlLnZpc2liaWxpdHk9InZpc2libGUiKTt0cnl7bnVsbD09YXx8YSgpfWNhdGNoKGUpe2NvbnNvbGUuZXJyb3IoZSl9fW9uRHJhZ0VudGVyKGUpe2lmKHMuRHJhZ0Ryb3AuaW5zdGFuY2UuaXNEcmFnZ2luZygpKXJldHVybjtsZXQgdD10aGlzLnByb3BzLm9uRXh0ZXJuYWxEcmFnKGUpO3QmJih0aGlzLmZuTmV3Tm9kZURyb3BwZWQ9dC5vbkRyb3AsdGhpcy5uZXdUYWJKc29uPXQuanNvbix0aGlzLmRyYWdTdGFydChlLHQuZHJhZ1RleHQsYy5UYWJOb2RlLl9mcm9tSnNvbih0Lmpzb24sdGhpcy5wcm9wcy5tb2RlbCwhMSksITAsdm9pZCAwLHZvaWQgMCkpfWNoZWNrRm9yQm9yZGVyVG9TaG93KGUsdCl7bGV0IHI9dGhpcy5wcm9wcy5tb2RlbC5fZ2V0T3V0ZXJJbm5lclJlY3RzKCkub3V0ZXIsaT1yLmdldENlbnRlcigpLG49dGhpcy5lZGdlUmVjdFdpZHRoLHM9dGhpcy5lZGdlUmVjdExlbmd0aC8yLGE9ITE7dGhpcy5wcm9wcy5tb2RlbC5pc0VuYWJsZUVkZ2VEb2NrKCkmJnRoaXMuc3RhdGUuc2hvd0hpZGRlbkJvcmRlcj09PW8uRG9ja0xvY2F0aW9uLkNFTlRFUiYmKHQ+aS55LXMmJnQ8aS55K3N8fGU+aS54LXMmJmU8aS54K3MpJiYoYT0hMCk7bGV0IGw9by5Eb2NrTG9jYXRpb24uQ0VOVEVSOyFhJiYoZTw9ci54K24/bD1vLkRvY2tMb2NhdGlvbi5MRUZUOmU+PXIuZ2V0UmlnaHQoKS1uP2w9by5Eb2NrTG9jYXRpb24uUklHSFQ6dDw9ci55K24/bD1vLkRvY2tMb2NhdGlvbi5UT1A6dD49ci5nZXRCb3R0b20oKS1uJiYobD1vLkRvY2tMb2NhdGlvbi5CT1RUT00pKSxsIT09dGhpcy5zdGF0ZS5zaG93SGlkZGVuQm9yZGVyJiZ0aGlzLnNldFN0YXRlKHtzaG93SGlkZGVuQm9yZGVyOmx9KX1tYXhpbWl6ZShlKXt0aGlzLmRvQWN0aW9uKGEuQWN0aW9ucy5tYXhpbWl6ZVRvZ2dsZShlLmdldElkKCkpKX1jdXN0b21pemVUYWIoZSx0KXt0aGlzLnByb3BzLm9uUmVuZGVyVGFiJiZ0aGlzLnByb3BzLm9uUmVuZGVyVGFiKGUsdCl9Y3VzdG9taXplVGFiU2V0KGUsdCl7dGhpcy5wcm9wcy5vblJlbmRlclRhYlNldCYmdGhpcy5wcm9wcy5vblJlbmRlclRhYlNldChlLHQpfWkxOG5OYW1lKGUsdCl7bGV0IHI7cmV0dXJuIHRoaXMucHJvcHMuaTE4bk1hcHBlciYmKHI9dGhpcy5wcm9wcy5pMThuTWFwcGVyKGUsdCkpLHZvaWQgMD09PXImJihyPWUrKHZvaWQgMD09PXQ/IiI6dCkpLHJ9Z2V0T25SZW5kZXJGbG9hdGluZ1RhYlBsYWNlaG9sZGVyKCl7cmV0dXJuIHRoaXMucHJvcHMub25SZW5kZXJGbG9hdGluZ1RhYlBsYWNlaG9sZGVyfWdldFNob3dPdmVyZmxvd01lbnUoKXtyZXR1cm4gdGhpcy5wcm9wcy5vblNob3dPdmVyZmxvd01lbnV9Z2V0VGFiU2V0UGxhY2VIb2xkZXJDYWxsYmFjaygpe3JldHVybiB0aGlzLnByb3BzLm9uVGFiU2V0UGxhY2VIb2xkZXJ9c2hvd0NvbnRleHRNZW51KGUsdCl7dGhpcy5wcm9wcy5vbkNvbnRleHRNZW51JiZ0aGlzLnByb3BzLm9uQ29udGV4dE1lbnUoZSx0KX1hdXhNb3VzZUNsaWNrKGUsdCl7dGhpcy5wcm9wcy5vbkF1eE1vdXNlQ2xpY2smJnRoaXMucHJvcHMub25BdXhNb3VzZUNsaWNrKGUsdCl9fXQuTGF5b3V0PU87bGV0IFI9ZT0+KGkudXNlRWZmZWN0KCgpPT57dmFyIHQ7bnVsbD09PSh0PWUub25SZW5kZX"
     ""
     ""
     "R0cnMoZSl7Zi5fYXR0cmlidXRlRGVmaW5pdGlvbnMudXBkYXRlKGUsdGhpcy5fYXR0cmlidXRlcyl9X2dldERyYXdDaGlsZHJlbigpe3JldHVybiB0aGlzLl9kcmF3Q2hpbGRyZW59X3NldEFkanVzdGVkU2l6ZShlKXt0aGlzLl9hZGp1c3RlZFNpemU9ZX1fZ2V0QWRqdXN0ZWRTaXplKCl7cmV0dXJuIHRoaXMuX2FkanVzdGVkU2l6ZX1fbGF5b3V0Qm9yZGVyT3V0ZXIoZSx0KXt0aGlzLmNhbGNCb3JkZXJCYXJTaXplKHQpO2xldCByPXRoaXMuX2xvY2F0aW9uLnNwbGl0KGUsdGhpcy5nZXRCb3JkZXJCYXJTaXplKCkpO3JldHVybiB0aGlzLl90YWJIZWFkZXJSZWN0PXIuc3RhcnQsci5lbmR9X2xheW91dEJvcmRlcklubmVyKGUsdCl7dGhpcy5fZHJhd0NoaWxkcmVuPVtdO2xldCByPXRoaXMuX2xvY2F0aW9uLGk9ci5zcGxpdChlLHRoaXMuX2FkanVzdGVkU2l6ZSt0aGlzLl9tb2RlbC5nZXRTcGxpdHRlclNpemUoKSksbj1yLnJlZmxlY3QoKS5zcGxpdChpLnN0YXJ0LHRoaXMuX21vZGVsLmdldFNwbGl0dGVyU2l6ZSgpKTt0aGlzLl9jb250ZW50UmVjdD1uLmVuZDtmb3IobGV0IGU9MDtlPHRoaXMuX2NoaWxkcmVuLmxlbmd0aDtlKyspe2xldCByPXRoaXMuX2NoaWxkcmVuW2VdO3IuX2xheW91dCh0aGlzLl9jb250ZW50UmVjdCx0KSxyLl9zZXRWaXNpYmxlKGU9PT10aGlzLmdldFNlbGVjdGVkKCkpLHRoaXMuX2RyYXdDaGlsZHJlbi5wdXNoKHIpfWlmKC0xPT09dGhpcy5nZXRTZWxlY3RlZCgpKXJldHVybiBlO3tsZXQgZT1uZXcgdS5TcGxpdHRlck5vZGUodGhpcy5fbW9kZWwpO3JldHVybiBlLl9zZXRQYXJlbnQodGhpcyksZS5fc2V0UmVjdChuLnN0YXJ0KSx0aGlzLl9kcmF3Q2hpbGRyZW4ucHVzaChlKSxpLmVuZH19X3JlbW92ZShlKXtsZXQgdD10aGlzLl9yZW1vdmVDaGlsZChlKTstMSE9PXRoaXMuZ2V0U2VsZWN0ZWQoKSYmKDAscC5hZGp1c3RTZWxlY3RlZEluZGV4KSh0aGlzLHQpfWNhbkRyb3AoZSx0LHIpe2xldCBpO2lmKGUuZ2V0VHlwZSgpIT09aC5UYWJOb2RlLlRZUEUpcmV0dXJuO2xldCBuPW8uRG9ja0xvY2F0aW9uLkNFTlRFUjtpZih0aGlzLl90YWJIZWFkZXJSZWN0LmNvbnRhaW5zKHQscikpe2lmKHRoaXMuX2xvY2F0aW9uLl9vcmllbnRhdGlvbj09PWEuT3JpZW50YXRpb24uVkVSVCl7aWYodGhpcy5fY2hpbGRyZW4ubGVuZ3RoPjApe2xldCBlPXRoaXMuX2NoaWxkcmVuWzBdLHI9ZS5nZXRUYWJSZWN0KCksbz1yLnksYT1yLmhlaWdodCxjPXRoaXMuX3RhYkhlYWRlclJlY3QueCx1PTA7Zm9yKGxldCBoPTA7aDx0aGlzLl9jaGlsZHJlbi5sZW5ndGg7aCsrKXtpZih1PShyPShlPXRoaXMuX2NoaWxkcmVuW2hdKS5nZXRUYWJSZWN0KCkpLngrci53aWR0aC8yLHQ+PWMmJnQ8dSl7bGV0IGU9bmV3IGwuUmVjdChyLngtMixvLDMsYSk7aT1uZXcgcy5Ecm9wSW5mbyh0aGlzLGUsbixoLGQuQ0xBU1NFUy5GTEVYTEFZT1VUX19PVVRMSU5FX1JFQ1QpO2JyZWFrfWM9dX1pZihudWxsPT1pKXtsZXQgZT1uZXcgbC5SZWN0KHIuZ2V0UmlnaHQoKS0yLG8sMyxhKTtpPW5ldyBzLkRyb3BJbmZvKHRoaXMsZSxuLHRoaXMuX2NoaWxkcmVuLmxlbmd0aCxkLkNMQVNTRVMuRkxFWExBWU9VVF9fT1VUTElORV9SRUNUKX19ZWxzZXtsZXQgZT1uZXcgbC5SZWN0KHRoaXMuX3RhYkhlYWRlclJlY3QueCsxLHRoaXMuX3RhYkhlYWRlclJlY3QueSsyLDMsMTgpO2k9bmV3IHMuRHJvcEluZm8odGhpcyxlLG4sMCxkLkNMQVNTRVMuRkxFWExBWU9VVF9fT1VUTElORV9SRUNUKX19ZWxzZSBpZih0aGlzLl9jaGlsZHJlbi5sZW5ndGg+MCl7bGV0IGU9dGhpcy5fY2hpbGRyZW5bMF0sdD1lLmdldFRhYlJlY3QoKSxvPXQueCxhPXQud2lkdGgsYz10aGlzLl90YWJIZWFkZXJSZWN0LnksdT0wO2ZvcihsZXQgaD0wO2g8dGhpcy5fY2hpbGRyZW4ubGVuZ3RoO2grKyl7aWYodT0odD0oZT10aGlzLl9jaGlsZHJlbltoXSkuZ2V0VGFiUmVjdCgpKS55K3QuaGVpZ2h0LzIscj49YyYmcjx1KXtsZXQgZT1uZXcgbC5SZWN0KG8sdC55LTIsYSwzKTtpPW5ldyBzLkRyb3BJbmZvKHRoaXMsZSxuLGgsZC5DTEFTU0VTLkZMRVhMQVlPVVRfX09VVExJTkVfUkVDVCk7YnJlYWt9Yz11fWlmKG51bGw9PWkpe2xldCBlPW5ldyBsLlJlY3Qobyx0LmdldEJvdHRvbSgpLTIsYSwzKTtpPW5ldyBzLkRyb3BJbmZvKHRoaXMsZSxuLHRoaXMuX2NoaWxkcmVuLmxlbmd0aCxkLkNMQVNTRVMuRkxFWExBWU9VVF9fT1VUTElORV9SRUNUKX19ZWxzZXtsZXQgZT1uZXcgbC5SZWN0KHRoaXMuX3RhYkhlYWRlclJlY3QueCsyLHRoaXMuX3RhYkhlYWRlclJlY3QueSsxLDE4LDMpO2k9bmV3IHMuRHJvcEluZm8odGhpcyxlLG4sMCxkLkNMQVNTRVMuRkxFWExBWU9VVF9fT1VUTElORV9SRUNUKX1pZighZS5fY2FuRG9ja0ludG8oZSxpKSlyZXR1cm59ZWxzZSBpZigtMSE9PXRoaXMuZ2V0U2VsZWN0ZWQoKSYmdGhpcy5fY29udGVudFJlY3QuY29udGFpbnModCxyKSl7bGV0IHQ9dGhpcy5fY29udGVudFJlY3Q7aWYoaT1uZXcgcy5Ecm9wSW5mbyh0aGlzLHQsbiwtMSxkLkNMQVNTRVMuRkxFWExBWU9VVF9fT1VUTElORV9SRUNUKSwhZS5fY2FuRG9ja0ludG8oZSxpKSlyZXR1cm59cmV0dXJuIGl9ZHJvcChlLHQscixpKXtsZXQgbj0wLG89ZS5nZXRQYXJlbnQoKTt2b2lkIDAhPT1vJiYobj1vLl9yZW1vdmVDaGlsZChlKSxvIT09dGhpcyYmbyBpbnN0YW5jZW9mIGYmJm8uZ2V0U2VsZWN0ZWQoKT09PW4/by5fc2V0U2VsZWN0ZWQoLTEpOigwLHAuYWRqdXN0U2VsZWN0ZWRJbmRleCkobyxuKSksZS5nZXRUeXBlKCk9PT1oLlRhYk5vZGUuVFlQRSYmbz09PXRoaXMmJm48ciYmcj4wJiZyLS07bGV0IHM9cjstMT09PXMmJihzPXRoaXMuX2NoaWxkcmVuLmxlbmd0aCksZS5nZXRUeXBlKCk9PT1oLlRhYk5vZGUuVFlQRSYmdGhpcy5fYWRkQ2hpbGQoZSxzKSwoaXx8ITEhPT1pJiZ0aGlzLmlzQXV0b1NlbGVjdFRhYigpKSYmdGhpcy5fc2V0U2VsZWN0ZWQocyksdGhpcy5fbW9kZWwuX3RpZHkoKX10b0pzb24oKXtsZXQgZT17fTtyZXR1cm4gZi5fYXR0cmlidXRlRGVmaW5pdGlvbnMudG9Kc29uKGUsdGhpcy5fYXR0cmlidXRlcyksZS5sb2NhdGlvbj10aGlzLl9sb2NhdGlvbi5nZXROYW1lKCksZS5jaGlsZHJlbj10aGlzLl9jaGlsZHJlbi5tYXAoZT0+ZS50b0pzb24oKSksZX1fZ2V0U3BsaXR0ZXJCb3VuZHMoZSx0PSExKXtsZXQgcj1bMCwwXSxpPXQ/dGhpcy5nZXRNaW5TaXplKCk6MCxuPXRoaXMuX21vZGVsLl9nZXRPdXRlcklubmVyUmVjdHMoKS5vdXRlcixzPXRoaXMuX21vZGVsLl9nZXRPdXRlcklubmVyUmVjdHMoKS5pbm5lcixhPXRoaXMuX21vZGVsLmdldFJvb3QoKTtyZXR1cm4gdGhpcy5fbG9jYXRpb249PT1vLkRvY2tMb2NhdGlvbi5UT1A/KHJbMF09bi55K2ksclsxXT1NYXRoLm1heChyWzBdLHMuZ2V0Qm90dG9tKCktZS5nZXRIZWlnaHQoKS1hLmdldE1pbkhlaWdodCgpKSk6dGhpcy5fbG9jYXRpb249PT1vLkRvY2tMb2NhdGlvbi5MRUZUPyhyWzBdPW4ueCtpLHJbMV09TWF0aC5tYXgoclswXSxzLmdldFJpZ2h0KCktZS5nZXRXaWR0aCgpLWEuZ2V0TWluV2lkdGgoKSkpOnRoaXMuX2xvY2F0aW9uPT09by5Eb2NrTG9jYXRpb24uQk9UVE9NPyhyWzFdPW4uZ2V0Qm90dG9tKCktZS5nZXRIZWlnaHQoKS1pLHJbMF09TWF0aC5taW4oclsxXSxzLnkrYS5nZXRNaW5IZWlnaHQoKSkpOnRoaXMuX2xvY2F0aW9uPT09by5Eb2NrTG9jYXRpb24uUklHSFQmJihyWzFdPW4uZ2V0UmlnaHQoKS1lLmdldFdpZHRoKCktaSxyWzBdPU1hdGgubWluKHJbMV0scy54K2EuZ2V0TWluV2lkdGgoKSkpLHJ9X2NhbGN1bGF0ZVNwbGl0KGUsdCl7bGV0IHI9dGhpcy5fZ2V0U3BsaXR0ZXJCb3VuZHMoZSk7cmV0dXJuIHRoaXMuX2xvY2F0aW9uPT09by5Eb2NrTG9jYXRpb24uQk9UVE9NfHx0aGlzLl9sb2NhdGlvbj09PW8uRG9ja0xvY2F0aW9uLlJJR0hUP01hdGgubWF4KDAsclsxXS10KTpNYXRoLm1heCgwLHQtclswXSl9X2dldEF0dHJpYnV0ZURlZmluaXRpb25zKCl7cmV0dXJuIGYuX2F0dHJpYnV0ZURlZmluaXRpb25zfXN0YXRpYyBnZXRBdHRyaWJ1dGVEZWZpbml0aW9ucygpe3JldHVybiBmLl9hdHRyaWJ1dGVEZWZpbml0aW9uc319dC5Cb3JkZXJOb2RlPWYsZi5UWVBFPSJib3JkZXIiLGYuX2F0dHJpYnV0ZURlZmluaXRpb25zPWYuX2NyZWF0ZUF0dHJpYnV0ZURlZmluaXRpb25zKCl9fV0pOw==",    //
     685312, //
     "application/javascript", //
     "/_next/static/chunks/272-d4ff4ae2af9386b2.js/", //
     
};
}
