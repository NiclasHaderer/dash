
#pragma once
#include "files.hpp"
namespace duckdb {
const File FILE_NEXT_STATIC_CHUNKS_862_30C9C157FC05FF0A_JS = {
     // Content
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     "dW50LDApfWZ1bmN0aW9uIGVEKHQpe3JldHVybiB0LnJlZHVjZSgodCxlLGkpPT4odFtpKzFdPXRbaV0rZS5sZW5ndGgsdCksbmV3IFVpbnQzMkFycmF5KHQubGVuZ3RoKzEpKX1mdW5jdGlvbiBlQyh0LGUsaSxyKXtsZXQgbj1bXTtmb3IobGV0IHM9LTEsbz10Lmxlbmd0aDsrK3M8bzspe2xldCBvPXRbc10sYT1lW3NdLHtsZW5ndGg6bH09bztpZihhPj1yKWJyZWFrO2lmKGk+PWErbCljb250aW51ZTtpZihhPj1pJiZhK2w8PXIpe24ucHVzaChvKTtjb250aW51ZX1sZXQgZD1NYXRoLm1heCgwLGktYSksYz1NYXRoLm1pbihyLWEsbCk7bi5wdXNoKG8uc2xpY2UoZCxjLWQpKX1yZXR1cm4gMD09PW4ubGVuZ3RoJiZuLnB1c2godFswXS5zbGljZSgwLDApKSxufWZ1bmN0aW9uIGVCKHQsZSxpLHIpe2xldCBuPTAscz0wLG89ZS5sZW5ndGgtMTtkb3tpZihuPj1vLTEpcmV0dXJuIGk8ZVtvXT9yKHQsbixpLWVbbl0pOm51bGw7aTxlW3M9bitNYXRoLnRydW5jKChvLW4pKi41KV0/bz1zOm49c313aGlsZShuPG8pfWZ1bmN0aW9uIGVNKHQsZSl7cmV0dXJuIHQuZ2V0VmFsaWQoZSl9ZnVuY3Rpb24gZVUodCl7ZnVuY3Rpb24gZShlLGkscil7cmV0dXJuIHQoZVtpXSxyKX1yZXR1cm4gZnVuY3Rpb24odCl7cmV0dXJuIGVCKHRoaXMuZGF0YSx0aGlzLl9vZmZzZXRzLHQsZSl9fWZ1bmN0aW9uIGVGKHQpe2xldCBlO2Z1bmN0aW9uIGkoaSxyLG4pe3JldHVybiB0KGlbcl0sbixlKX1yZXR1cm4gZnVuY3Rpb24odCxyKXtsZXQgbj10aGlzLmRhdGE7ZT1yO2xldCBzPWVCKG4sdGhpcy5fb2Zmc2V0cyx0LGkpO3JldHVybiBlPXZvaWQgMCxzfX1mdW5jdGlvbiBlUCh0KXtsZXQgZTtmdW5jdGlvbiBpKGkscixuKXtsZXQgcz1uLG89MCxhPTA7Zm9yKGxldCBuPXItMSxsPWkubGVuZ3RoOysrbjxsOyl7bGV0IHI9aVtuXTtpZih+KG89dChyLGUscykpKXJldHVybiBhK287cz0wLGErPXIubGVuZ3RofXJldHVybiAtMX1yZXR1cm4gZnVuY3Rpb24odCxyKXtlPXQ7bGV0IG49dGhpcy5kYXRhLHM9Im51bWJlciIhPXR5cGVvZiByP2kobiwwLDApOmVCKG4sdGhpcy5fb2Zmc2V0cyxyLGkpO3JldHVybiBlPXZvaWQgMCxzfX1mdW5jdGlvbiBlayh0LGUsaSxyKXtyZXR1cm4oaSYxPDxyKSE9MH1mdW5jdGlvbiBlaih0LGUsaSxyKXtyZXR1cm4oaSYxPDxyKT4+cn1mdW5jdGlvbiBleih0LGUsaSl7bGV0IHI9aS5ieXRlTGVuZ3RoKzcmLTg7aWYodD4wfHxpLmJ5dGVMZW5ndGg8cil7bGV0IG49bmV3IFVpbnQ4QXJyYXkocik7cmV0dXJuIG4uc2V0KHQlOD09MD9pLnN1YmFycmF5KHQ+PjMpOmVIKG5ldyBlWShpLHQsZSxudWxsLGVrKSkuc3ViYXJyYXkoMCxyKSksbn1yZXR1cm4gaX1mdW5jdGlvbiBlSCh0KXtsZXQgZT1bXSxpPTAscj0wLG49MDtmb3IobGV0IHMgb2YgdClzJiYobnw9MTw8ciksOD09KytyJiYoZVtpKytdPW4sbj1yPTApOygwPT09aXx8cj4wKSYmKGVbaSsrXT1uKTtsZXQgcz1uZXcgVWludDhBcnJheShlLmxlbmd0aCs3Ji04KTtyZXR1cm4gcy5zZXQoZSksc31jbGFzcyBlWXtjb25zdHJ1Y3Rvcih0LGUsaSxyLG4pe3RoaXMuYnl0ZXM9dCx0aGlzLmxlbmd0aD1pLHRoaXMuY29udGV4dD1yLHRoaXMuZ2V0PW4sdGhpcy5iaXQ9ZSU4LHRoaXMuYnl0ZUluZGV4PWU+PjMsdGhpcy5ieXRlPXRbdGhpcy5ieXRlSW5kZXgrK10sdGhpcy5pbmRleD0wfW5leHQoKXtyZXR1cm4gdGhpcy5pbmRleDx0aGlzLmxlbmd0aD8oOD09PXRoaXMuYml0JiYodGhpcy5iaXQ9MCx0aGlzLmJ5dGU9dGhpcy5ieXRlc1t0aGlzLmJ5dGVJbmRleCsrXSkse3ZhbHVlOnRoaXMuZ2V0KHRoaXMuY29udGV4dCx0aGlzLmluZGV4KyssdGhpcy5ieXRlLHRoaXMuYml0KyspfSk6e2RvbmU6ITAsdmFsdWU6bnVsbH19W1N5bWJvbC5pdGVyYXRvcl0oKXtyZXR1cm4gdGhpc319ZnVuY3Rpb24gZVcodCl7bGV0IGU9TWF0aC50cnVuYyh0KTtyZXR1cm4gZS09ZT4+PjEmMHg1NTU1NTU1NSwoKGU9KDB4MzMzMzMzMzMmZSkrKGU+Pj4yJjB4MzMzMzMzMzMpKSsoZT4+PjQpJjB4ZjBmMGYwZikqMHgxMDEwMTAxPj4+MjR9Y2xhc3MgZVYgZXh0ZW5kcyB0dXt9ZnVuY3Rpb24gZVoodCxlLGkpe2lmKHZvaWQgMD09PWUpcmV0dXJuIC0xO2lmKG51bGw9PT1lKXN3aXRjaCh0LnR5cGVJZCl7Y2FzZSBmLlpVLlVuaW9uOmNhc2UgZi5aVS5EaWN0aW9uYXJ5OmJyZWFrO2RlZmF1bHQ6cmV0dXJuIGZ1bmN0aW9uKHQsZSl7bGV0e251bGxCaXRtYXA6aX09dDtpZighaXx8dC5udWxsQ291bnQ8PTApcmV0dXJuIC0xO2xldCByPTA7Zm9yKGxldCBuIG9mIG5ldyBlWShpLHQub2Zmc2V0KyhlfHwwKSx0Lmxlbmd0aCxpLGVrKSl7aWYoIW4pcmV0dXJuIHI7KytyfXJldHVybiAtMX0odCxpKX1sZXQgcj1leS5nZXRWaXNpdEZuKHQpLG49ZUkoZSk7Zm9yKGxldCBlPShpfHwwKS0xLHM9dC5sZW5ndGg7KytlPHM7KWlmKG4ocih0LGUpKSlyZXR1cm4gZTtyZXR1cm4gLTF9ZnVuY3Rpb24gZVgodCxlLGkpe2xldCByPWV5LmdldFZpc2l0Rm4odCksbj1lSShlKTtmb3IobGV0IGU9KGl8fDApLTEscz10Lmxlbmd0aDsrK2U8czspaWYobihyKHQsZSkpKXJldHVybiBlO3JldHVybiAtMX1lVi5wcm90b3R5cGUudmlzaXROdWxsPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIG51bGw9PT1lJiZ0Lmxlbmd0aD4wPzA6LTF9LGVWLnByb3RvdHlwZS52aXNpdEJvb2w9ZVosZVYucHJvdG90eXBlLnZpc2l0SW50PWVaLGVWLnByb3RvdHlwZS52aXNpdEludDg9ZVosZVYucHJvdG90eXBlLnZpc2l0SW50MTY9ZVosZVYucHJvdG90eXBlLnZpc2l0SW50MzI9ZVosZVYucHJvdG90eXBlLnZpc2l0SW50NjQ9ZVosZVYucHJvdG90eXBlLnZpc2l0VWludDg9ZVosZVYucHJvdG90eXBlLnZpc2l0VWludDE2PWVaLGVWLnByb3RvdHlwZS52aXNpdFVpbnQzMj1lWixlVi5wcm90b3R5cGUudmlzaXRVaW50NjQ9ZVosZVYucHJvdG90eXBlLnZpc2l0RmxvYXQ9ZVosZVYucHJvdG90eXBlLnZpc2l0RmxvYXQxNj1lWixlVi5wcm90b3R5cGUudmlzaXRGbG9hdDMyPWVaLGVWLnByb3RvdHlwZS52aXNpdEZsb2F0NjQ9ZVosZVYucHJvdG90eXBlLnZpc2l0VXRmOD1lWixlVi5wcm90b3R5cGUudmlzaXRMYXJnZVV0Zjg9ZVosZVYucHJvdG90eXBlLnZpc2l0QmluYXJ5PWVaLGVWLnByb3RvdHlwZS52aXNpdExhcmdlQmluYXJ5PWVaLGVWLnByb3RvdHlwZS52aXNpdEZpeGVkU2l6ZUJpbmFyeT1lWixlVi5wcm90b3R5cGUudmlzaXREYXRlPWVaLGVWLnByb3RvdHlwZS52aXNpdERhdGVEYXk9ZVosZVYucHJvdG90eXBlLnZpc2l0RGF0ZU1pbGxpc2Vjb25kPWVaLGVWLnByb3RvdHlwZS52aXNpdFRpbWVzdGFtcD1lWixlVi5wcm90b3R5cGUudmlzaXRUaW1lc3RhbXBTZWNvbmQ9ZVosZVYucHJvdG90eXBlLnZpc2l0VGltZXN0YW1wTWlsbGlzZWNvbmQ9ZVosZVYucHJvdG90eXBlLnZpc2l0VGltZXN0YW1wTWljcm9zZWNvbmQ9ZVosZVYucHJvdG90eXBlLnZpc2l0VGltZXN0YW1wTmFub3NlY29uZD1lWixlVi5wcm90b3R5cGUudmlzaXRUaW1lPWVaLGVWLnByb3RvdHlwZS52aXNpdFRpbWVTZWNvbmQ9ZVosZVYucHJvdG90eXBlLnZpc2l0VGltZU1pbGxpc2Vjb25kPWVaLGVWLnByb3RvdHlwZS52aXNpdFRpbWVNaWNyb3NlY29uZD1lWixlVi5wcm90b3R5cGUudmlzaXRUaW1lTmFub3NlY29uZD1lWixlVi5wcm90b3R5cGUudmlzaXREZWNpbWFsPWVaLGVWLnByb3RvdHlwZS52aXNpdExpc3Q9ZVosZVYucHJvdG90eXBlLnZpc2l0U3RydWN0PWVaLGVWLnByb3RvdHlwZS52aXNpdFVuaW9uPWVaLGVWLnByb3RvdHlwZS52aXNpdERlbnNlVW5pb249ZVgsZVYucHJvdG90eXBlLnZpc2l0U3BhcnNlVW5pb249ZVgsZVYucHJvdG90eXBlLnZpc2l0RGljdGlvbmFyeT1lWixlVi5wcm90b3R5cGUudmlzaXRJbnRlcnZhbD1lWixlVi5wcm90b3R5cGUudmlzaXRJbnRlcnZhbERheVRpbWU9ZVosZVYucHJvdG90eXBlLnZpc2l0SW50ZXJ2YWxZZWFyTW9udGg9ZVosZVYucHJvdG90eXBlLnZpc2l0RHVyYXRpb249ZVosZVYucHJvdG90eXBlLnZpc2l0RHVyYXRpb25TZWNvbmQ9ZVosZVYucHJvdG90eXBlLnZpc2l0RHVyYXRpb25NaWxsaXNlY29uZD1lWixlVi5wcm90b3R5cGUudmlzaXREdXJhdGlvbk1pY3Jvc2Vjb25kPWVaLGVWLnByb3RvdHlwZS52aXNpdER1cmF0aW9uTmFub3NlY29uZD1lWixlVi5wcm90b3R5cGUudmlzaXRGaXhlZFNpemVMaXN0PWVaLGVWLnByb3RvdHlwZS52aXNpdE1hcD1lWjtsZXQgZUc9bmV3IGVWO2NsYXNzIGUkIGV4dGVuZHMgdHV7fWZ1bmN0aW9uIGVLKHQpe2xldHt0eXBlOmV9PXQ7aWYoMD09PXQubnVsbENvdW50JiYxPT09dC5zdHJpZGUmJih0Yy5wZS5pc0ludChlKSYmNjQhPT1lLmJpdFdpZHRofHx0Yy5wZS5pc1RpbWUoZSkmJjY0IT09ZS5iaXRXaWR0aHx8dGMucGUuaXNGbG9hdChlKSYmZS5wcmVjaXNpb24hPT10cy5qLkhBTEYpKXJldHVybiBuZXcgZXgodC5kYXRhLmxlbmd0aCxlPT57bGV0IGk9dC5kYXRhW2VdO3JldHVybiBpLnZhbHVlcy5zdWJhcnJheSgwLGkubGVuZ3RoKVtTeW1ib2wuaXRlcmF0b3JdKCl9KTtsZXQgaT0wO3JldHVybiBuZXcgZXgodC5kYXRhLmxlbmd0aCxlPT57bGV0IHI9dC5kYXRhW2VdLmxlbmd0aCxuPXQuc2xpY2UoaSxpK3IpO3JldHVybiBpKz1yLG5ldyBlSihuKX0pfWNsYXNzIGVKe2NvbnN0cnVjdG9yKHQpe3RoaXMudmVjdG9yPXQsdGhpcy5pbmRleD0wfW5leHQoKXtyZXR1cm4gdGhpcy5pbmRleDx0aGlzLnZlY3Rvci5sZW5ndGg/e3ZhbHVlOnRoaXMudmVjdG9yLmdldCh0aGlzLmluZGV4KyspfTp7ZG9uZTohMCx2YWx1ZTpudWxsfX1bU3ltYm9sLml0ZXJhdG9yXSgpe3JldHVybiB0aGlzfX1lJC5wcm90b3R5cGUudmlzaXROdWxsPWVLLGUkLnByb3RvdHlwZS52aXNpdEJvb2w9ZUssZSQucHJvdG90eXBlLnZpc2l0SW50PWVLLGUkLnByb3RvdHlwZS52aXNpdEludDg9ZUssZSQucHJvdG90eXBlLnZpc2l0SW50MTY9ZUssZSQucHJvdG90eXBlLnZpc2l0SW50MzI9ZUssZSQucHJvdG90eXBlLnZpc2l0SW50NjQ9ZUssZSQucHJvdG90eXBlLnZpc2l0VWludDg9ZUssZSQucHJvdG90eXBlLnZpc2l0VWludDE2PWVLLGUkLnByb3RvdHlwZS52aXNpdFVpbnQzMj1lSyxlJC5wcm90b3R5cGUudmlzaXRVaW50NjQ9ZUssZSQucHJvdG90eXBlLnZpc2l0RmxvYXQ9ZUssZSQucHJvdG90eXBlLnZpc2l0RmxvYXQxNj1lSyxlJC5wcm90b3R5cGUudmlzaXRGbG9hdDMyPWVLLGUkLnByb3RvdHlwZS52aXNpdEZsb2F0NjQ9ZUssZSQucHJvdG90eXBlLnZpc2l0VXRmOD1lSyxlJC5wcm90b3R5cGUudmlzaXRMYXJnZVV0Zjg9ZUssZSQucHJvdG90eXBlLnZpc2l0QmluYXJ5PWVLLGUkLnByb3RvdHlwZS52aXNpdExhcmdlQmluYXJ5PWVLLGUkLnByb3RvdHlwZS52aXNpdEZpeGVkU2l6ZUJpbmFyeT1lSyxlJC5wcm90b3R5cGUudmlzaXREYXRlPWVLLGUkLnByb3RvdHlwZS52aXNpdERhdGVEYXk9ZUssZSQucHJvdG90eXBlLnZpc2l0RGF0ZU1pbGxpc2Vjb25kPWVLLGUkLnByb3RvdHlwZS52aXNpdFRpbWVzdGFtcD1lSyxlJC5wcm90b3R5cGUudmlzaXRUaW1lc3RhbXBTZWNvbmQ9ZUssZSQucHJvdG90eXBlLnZpc2l0VGltZXN0YW1wTWlsbGlzZWNvbmQ9ZUssZSQucHJvdG90eXBlLnZpc2l0VGltZXN0YW1wTWljcm9zZWNvbmQ9ZUssZSQucHJvdG90eXBlLnZpc2l0VGltZXN0YW1wTmFub3NlY29uZD1lSyxlJC5wcm90b3R5cGUudmlzaXRUaW1lPWVLLGUkLnByb3RvdHlwZS52aXNpdFRpbWVTZWNvbmQ9ZUssZSQucHJvdG90eXBlLnZpc2l0VGltZU1pbGxpc2Vjb25kPWVLLGUkLnByb3RvdHlwZS52aXNpdFRpbWVNaWNyb3NlY29uZD1lSyxlJC5wcm90b3R5cGUudmlzaXRUaW1lTmFub3NlY29uZD1lSyxlJC5wcm90b3R5cGUudmlzaXREZWNpbWFsPWVLLGUkLnByb3RvdHlwZS52aXNpdExpc3Q9ZUssZSQucHJvdG90eXBlLnZpc2l0U3RydWN0PWVLLGUkLnByb3RvdHlwZS52aXNpdFVuaW9uPWVLLGUkLnByb3RvdHlwZS52aXNpdERlbnNlVW5pb249ZUssZSQucHJvdG90eXBlLnZpc2l0U3BhcnNlVW5pb249ZUssZSQucHJvdG90eXBlLnZpc2l0RGljdGlvbmFyeT1lSyxlJC5wcm90b3R5cGUudmlzaXRJbnRlcnZhbD1lSyxlJC5wcm90b3R5cGUudmlzaXRJbnRlcnZhbERheVRpbWU9ZUssZSQucHJvdG90eXBlLnZpc2l0SW50ZXJ2YWxZZWFyTW9udGg9ZUssZSQucHJvdG90eXBlLnZpc2l0RHVyYXRpb249ZU"
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     "dGhpcy5zb3VyY2UubmV4dCh7Y21kOmUsc2l6ZTp0fSl9KX10aHJvdyh0KXtyZXR1cm4oMCxoLnNIKSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24qKCl7bGV0IGU9dGhpcy5zb3VyY2UudGhyb3cmJih5aWVsZCB0aGlzLnNvdXJjZS50aHJvdyh0KSl8fGlFO3JldHVybiB0aGlzLl9jbG9zZWRQcm9taXNlUmVzb2x2ZSYmdGhpcy5fY2xvc2VkUHJvbWlzZVJlc29sdmUoKSx0aGlzLl9jbG9zZWRQcm9taXNlUmVzb2x2ZT12b2lkIDAsT2JqZWN0LmNyZWF0ZShlKX0pfXJldHVybih0KXtyZXR1cm4oMCxoLnNIKSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24qKCl7bGV0IGU9dGhpcy5zb3VyY2UucmV0dXJuJiYoeWllbGQgdGhpcy5zb3VyY2UucmV0dXJuKHQpKXx8aUU7cmV0dXJuIHRoaXMuX2Nsb3NlZFByb21pc2VSZXNvbHZlJiZ0aGlzLl9jbG9zZWRQcm9taXNlUmVzb2x2ZSgpLHRoaXMuX2Nsb3NlZFByb21pc2VSZXNvbHZlPXZvaWQgMCxPYmplY3QuY3JlYXRlKGUpfSl9fWNsYXNzIGlEIGV4dGVuZHMgaVJ7Y29uc3RydWN0b3IodCxlKXtzdXBlcigpLHRoaXMucG9zaXRpb249MCx0aGlzLmJ1ZmZlcj1ZKHQpLHRoaXMuc2l6ZT12b2lkIDA9PT1lP3RoaXMuYnVmZmVyLmJ5dGVMZW5ndGg6ZX1yZWFkSW50MzIodCl7bGV0e2J1ZmZlcjplLGJ5dGVPZmZzZXQ6aX09dGhpcy5yZWFkQXQodCw0KTtyZXR1cm4gbmV3IERhdGFWaWV3KGUsaSkuZ2V0SW50MzIoMCwhMCl9c2Vlayh0KXtyZXR1cm4gdGhpcy5wb3NpdGlvbj1NYXRoLm1pbih0LHRoaXMuc2l6ZSksdDx0aGlzLnNpemV9cmVhZCh0KXtsZXR7YnVmZmVyOmUsc2l6ZTppLHBvc2l0aW9uOnJ9PXRoaXM7cmV0dXJuIGUmJnI8aT8oIm51bWJlciIhPXR5cGVvZiB0JiYodD1OdW1iZXIuUE9TSVRJVkVfSU5GSU5JVFkpLHRoaXMucG9zaXRpb249TWF0aC5taW4oaSxyK01hdGgubWluKGktcix0KSksZS5zdWJhcnJheShyLHRoaXMucG9zaXRpb24pKTpudWxsfXJlYWRBdCh0LGUpe2xldCBpPXRoaXMuYnVmZmVyLHI9TWF0aC5taW4odGhpcy5zaXplLHQrZSk7cmV0dXJuIGk/aS5zdWJhcnJheSh0LHIpOm5ldyBVaW50OEFycmF5KGUpfWNsb3NlKCl7dGhpcy5idWZmZXImJih0aGlzLmJ1ZmZlcj1udWxsKX10aHJvdyh0KXtyZXR1cm4gdGhpcy5jbG9zZSgpLHtkb25lOiEwLHZhbHVlOnR9fXJldHVybih0KXtyZXR1cm4gdGhpcy5jbG9zZSgpLHtkb25lOiEwLHZhbHVlOnR9fX1jbGFzcyBpQyBleHRlbmRzIGlOe2NvbnN0cnVjdG9yKHQsZSl7c3VwZXIoKSx0aGlzLnBvc2l0aW9uPTAsdGhpcy5faGFuZGxlPXQsIm51bWJlciI9PXR5cGVvZiBlP3RoaXMuc2l6ZT1lOnRoaXMuX3BlbmRpbmc9KDAsaC5zSCkodGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKigpe3RoaXMuc2l6ZT0oeWllbGQgdC5zdGF0KCkpLnNpemUsZGVsZXRlIHRoaXMuX3BlbmRpbmd9KX1yZWFkSW50MzIodCl7cmV0dXJuKDAsaC5zSCkodGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKigpe2xldHtidWZmZXI6ZSxieXRlT2Zmc2V0Oml9PXlpZWxkIHRoaXMucmVhZEF0KHQsNCk7cmV0dXJuIG5ldyBEYXRhVmlldyhlLGkpLmdldEludDMyKDAsITApfSl9c2Vlayh0KXtyZXR1cm4oMCxoLnNIKSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24qKCl7cmV0dXJuIHRoaXMuX3BlbmRpbmcmJih5aWVsZCB0aGlzLl9wZW5kaW5nKSx0aGlzLnBvc2l0aW9uPU1hdGgubWluKHQsdGhpcy5zaXplKSx0PHRoaXMuc2l6ZX0pfXJlYWQodCl7cmV0dXJuKDAsaC5zSCkodGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKigpe3RoaXMuX3BlbmRpbmcmJih5aWVsZCB0aGlzLl9wZW5kaW5nKTtsZXR7X2hhbmRsZTplLHNpemU6aSxwb3NpdGlvbjpyfT10aGlzO2lmKGUmJnI8aSl7Im51bWJlciIhPXR5cGVvZiB0JiYodD1OdW1iZXIuUE9TSVRJVkVfSU5GSU5JVFkpO2xldCBuPXIscz0wLG89MCxhPU1hdGgubWluKGksbitNYXRoLm1pbihpLW4sdCkpLGw9bmV3IFVpbnQ4QXJyYXkoTWF0aC5tYXgoMCwodGhpcy5wb3NpdGlvbj1hKS1uKSk7Zm9yKDsobis9byk8YSYmKHMrPW8pPGwuYnl0ZUxlbmd0aDspKHtieXRlc1JlYWQ6b309eWllbGQgZS5yZWFkKGwscyxsLmJ5dGVMZW5ndGgtcyxuKSk7cmV0dXJuIGx9cmV0dXJuIG51bGx9KX1yZWFkQXQodCxlKXtyZXR1cm4oMCxoLnNIKSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24qKCl7dGhpcy5fcGVuZGluZyYmKHlpZWxkIHRoaXMuX3BlbmRpbmcpO2xldHtfaGFuZGxlOmksc2l6ZTpyfT10aGlzO2lmKGkmJnQrZTxyKXtsZXQgbj1uZXcgVWludDhBcnJheShNYXRoLm1pbihyLHQrZSktdCk7cmV0dXJuKHlpZWxkIGkucmVhZChuLDAsZSx0KSkuYnVmZmVyfXJldHVybiBuZXcgVWludDhBcnJheShlKX0pfWNsb3NlKCl7cmV0dXJuKDAsaC5zSCkodGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKigpe2xldCB0PXRoaXMuX2hhbmRsZTt0aGlzLl9oYW5kbGU9bnVsbCx0JiYoeWllbGQgdC5jbG9zZSgpKX0pfXRocm93KHQpe3JldHVybigwLGguc0gpKHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbiooKXtyZXR1cm4geWllbGQgdGhpcy5jbG9zZSgpLHtkb25lOiEwLHZhbHVlOnR9fSl9cmV0dXJuKHQpe3JldHVybigwLGguc0gpKHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbiooKXtyZXR1cm4geWllbGQgdGhpcy5jbG9zZSgpLHtkb25lOiEwLHZhbHVlOnR9fSl9fWZ1bmN0aW9uIGlCKHQpe3JldHVybiB0PDAmJih0PTB4ZmZmZmZmZmYrdCsxKSxgMHgke3QudG9TdHJpbmcoMTYpfWB9bGV0IGlNPVsxLDEwLDEwMCwxZTMsMWU0LDFlNSwxZTYsMWU3LDFlOF07Y2xhc3MgaVV7Y29uc3RydWN0b3IodCl7dGhpcy5idWZmZXI9dH1oaWdoKCl7cmV0dXJuIHRoaXMuYnVmZmVyWzFdfWxvdygpe3JldHVybiB0aGlzLmJ1ZmZlclswXX1fdGltZXModCl7bGV0IGU9bmV3IFVpbnQzMkFycmF5KFt0aGlzLmJ1ZmZlclsxXT4+PjE2LDY1NTM1JnRoaXMuYnVmZmVyWzFdLHRoaXMuYnVmZmVyWzBdPj4+MTYsNjU1MzUmdGhpcy5idWZmZXJbMF1dKSxpPW5ldyBVaW50MzJBcnJheShbdC5idWZmZXJbMV0+Pj4xNiw2NTUzNSZ0LmJ1ZmZlclsxXSx0LmJ1ZmZlclswXT4+PjE2LDY1NTM1JnQuYnVmZmVyWzBdXSkscj1lWzNdKmlbM107dGhpcy5idWZmZXJbMF09NjU1MzUmcjtsZXQgbj1yPj4+MTY7cmV0dXJuIG4rPShyPWVbMl0qaVszXSkrKHI9ZVszXSppWzJdPj4+MCksdGhpcy5idWZmZXJbMF0rPW48PDE2LHRoaXMuYnVmZmVyWzFdPTY1NTM2KihuPj4+MDxyKSx0aGlzLmJ1ZmZlclsxXSs9bj4+PjE2LHRoaXMuYnVmZmVyWzFdKz1lWzFdKmlbM10rZVsyXSppWzJdK2VbM10qaVsxXSx0aGlzLmJ1ZmZlclsxXSs9ZVswXSppWzNdK2VbMV0qaVsyXStlWzJdKmlbMV0rZVszXSppWzBdPDwxNix0aGlzfV9wbHVzKHQpe2xldCBlPXRoaXMuYnVmZmVyWzBdK3QuYnVmZmVyWzBdPj4+MDt0aGlzLmJ1ZmZlclsxXSs9dC5idWZmZXJbMV0sZTx0aGlzLmJ1ZmZlclswXT4+PjAmJisrdGhpcy5idWZmZXJbMV0sdGhpcy5idWZmZXJbMF09ZX1sZXNzVGhhbih0KXtyZXR1cm4gdGhpcy5idWZmZXJbMV08dC5idWZmZXJbMV18fHRoaXMuYnVmZmVyWzFdPT09dC5idWZmZXJbMV0mJnRoaXMuYnVmZmVyWzBdPHQuYnVmZmVyWzBdfWVxdWFscyh0KXtyZXR1cm4gdGhpcy5idWZmZXJbMV09PT10LmJ1ZmZlclsxXSYmdGhpcy5idWZmZXJbMF09PXQuYnVmZmVyWzBdfWdyZWF0ZXJUaGFuKHQpe3JldHVybiB0Lmxlc3NUaGFuKHRoaXMpfWhleCgpe3JldHVybmAke2lCKHRoaXMuYnVmZmVyWzFdKX0gJHtpQih0aGlzLmJ1ZmZlclswXSl9YH19Y2xhc3MgaUYgZXh0ZW5kcyBpVXt0aW1lcyh0KXtyZXR1cm4gdGhpcy5fdGltZXModCksdGhpc31wbHVzKHQpe3JldHVybiB0aGlzLl9wbHVzKHQpLHRoaXN9c3RhdGljIGZyb20odCxlPW5ldyBVaW50MzJBcnJheSgyKSl7cmV0dXJuIGlGLmZyb21TdHJpbmcoInN0cmluZyI9PXR5cGVvZiB0P3Q6dC50b1N0cmluZygpLGUpfXN0YXRpYyBmcm9tTnVtYmVyKHQsZT1uZXcgVWludDMyQXJyYXkoMikpe3JldHVybiBpRi5mcm9tU3RyaW5nKHQudG9TdHJpbmcoKSxlKX1zdGF0aWMgZnJvbVN0cmluZyh0LGU9bmV3IFVpbnQzMkFycmF5KDIpKXtsZXQgaT10Lmxlbmd0aCxyPW5ldyBpRihlKTtmb3IobGV0IGU9MDtlPGk7KXtsZXQgbj04PGktZT84OmktZSxzPW5ldyBpRihuZXcgVWludDMyQXJyYXkoW051bWJlci5wYXJzZUludCh0LnNsaWNlKGUsZStuKSwxMCksMF0pKSxvPW5ldyBpRihuZXcgVWludDMyQXJyYXkoW2lNW25dLDBdKSk7ci50aW1lcyhvKSxyLnBsdXMocyksZSs9bn1yZXR1cm4gcn1zdGF0aWMgY29udmVydEFycmF5KHQpe2xldCBlPW5ldyBVaW50MzJBcnJheSgyKnQubGVuZ3RoKTtmb3IobGV0IGk9LTEscj10Lmxlbmd0aDsrK2k8cjspaUYuZnJvbSh0W2ldLG5ldyBVaW50MzJBcnJheShlLmJ1ZmZlcixlLmJ5dGVPZmZzZXQrMippKjQsMikpO3JldHVybiBlfXN0YXRpYyBtdWx0aXBseSh0LGUpe3JldHVybiBuZXcgaUYobmV3IFVpbnQzMkFycmF5KHQuYnVmZmVyKSkudGltZXMoZSl9c3RhdGljIGFkZCh0LGUpe3JldHVybiBuZXcgaUYobmV3IFVpbnQzMkFycmF5KHQuYnVmZmVyKSkucGx1cyhlKX19Y2xhc3MgaVAgZXh0ZW5kcyBpVXtuZWdhdGUoKXtyZXR1cm4gdGhpcy5idWZmZXJbMF09fnRoaXMuYnVmZmVyWzBdKzEsdGhpcy5idWZmZXJbMV09fnRoaXMuYnVmZmVyWzFdLDA9PXRoaXMuYnVmZmVyWzBdJiYrK3RoaXMuYnVmZmVyWzFdLHRoaXN9dGltZXModCl7cmV0dXJuIHRoaXMuX3RpbWVzKHQpLHRoaXN9cGx1cyh0KXtyZXR1cm4gdGhpcy5fcGx1cyh0KSx0aGlzfWxlc3NUaGFuKHQpe2xldCBlPXRoaXMuYnVmZmVyWzFdPDwwLGk9dC5idWZmZXJbMV08PDA7cmV0dXJuIGU8aXx8ZT09PWkmJnRoaXMuYnVmZmVyWzBdPHQuYnVmZmVyWzBdfXN0YXRpYyBmcm9tKHQsZT1uZXcgVWludDMyQXJyYXkoMikpe3JldHVybiBpUC5mcm9tU3RyaW5nKCJzdHJpbmciPT10eXBlb2YgdD90OnQudG9TdHJpbmcoKSxlKX1zdGF0aWMgZnJvbU51bWJlcih0LGU9bmV3IFVpbnQzMkFycmF5KDIpKXtyZXR1cm4gaVAuZnJvbVN0cmluZyh0LnRvU3RyaW5nKCksZSl9c3RhdGljIGZyb21TdHJpbmcodCxlPW5ldyBVaW50MzJBcnJheSgyKSl7bGV0IGk9dC5zdGFydHNXaXRoKCItIikscj10Lmxlbmd0aCxuPW5ldyBpUChlKTtmb3IobGV0IGU9KyEhaTtlPHI7KXtsZXQgaT04PHItZT84OnItZSxzPW5ldyBpUChuZXcgVWludDMyQXJyYXkoW051bWJlci5wYXJzZUludCh0LnNsaWNlKGUsZStpKSwxMCksMF0pKSxvPW5ldyBpUChuZXcgVWludDMyQXJyYXkoW2lNW2ldLDBdKSk7bi50aW1lcyhvKSxuLnBsdXMocyksZSs9aX1yZXR1cm4gaT9uLm5lZ2F0ZSgpOm59c3RhdGljIGNvbnZlcnRBcnJheSh0KXtsZXQgZT1uZXcgVWludDMyQXJyYXkoMip0Lmxlbmd0aCk7Zm9yKGxldCBpPS0xLHI9dC5sZW5ndGg7KytpPHI7KWlQLmZyb20odFtpXSxuZXcgVWludDMyQXJyYXkoZS5idWZmZXIsZS5ieXRlT2Zmc2V0KzIqaSo0LDIpKTtyZXR1cm4gZX1zdGF0aWMgbXVsdGlwbHkodCxlKXtyZXR1cm4gbmV3IGlQKG5ldyBVaW50MzJBcnJheSh0LmJ1ZmZlcikpLnRpbWVzKGUpfXN0YXRpYyBhZGQodCxlKXtyZXR1cm4gbmV3IGlQKG5ldyBVaW50MzJBcnJheSh0LmJ1ZmZlcikpLnBsdXMoZSl9fWNsYXNzIGlre2NvbnN0cnVjdG9yKHQpe3RoaXMuYnVmZmVyPXR9aGlnaCgpe3JldHVybiBuZXcgaVAobmV3IFVpbnQzMkFycmF5KHRoaXMuYnVmZmVyLmJ1ZmZlcix0aGlzLmJ1ZmZlci5ieXRlT2Zmc2V0KzgsMikpfWxvdygpe3JldHVybiBuZXcgaVAobmV3IFVpbnQzMkFycmF5KHRoaXMuYnVmZmVyLmJ1ZmZlcix0aGlzLmJ1ZmZlci5ieXRlT2Zmc2V0LDIpKX1uZWdhdGUoKXtyZXR1cm4gdGhpcy5idWZmZXJbMF09fnRoaXMuYnVmZmVyWzBdKzEsdGhpcy5idWZmZXJbMV09fnRoaXMuYnVmZmVyWzFdLHRoaXMuYnVmZmVyWzJdPX50aGlzLmJ1ZmZlclsyXSx0aGlzLmJ1ZmZlclszXT1+dGhpcy5idWZmZXJbM10sMD09dGhpcy5idWZmZXJbMF0mJisrdGhpcy5idWZmZXJbMV0sMD09dGhpcy5idWZmZXJbMV0mJisrdGhpcy5idWZmZXJbMl0sMD09dGhpcy5idWZmZXJbMl0mJisrdGhpcy5idWZmZXJbM10sdGhpc310aW1lcyh0KXtsZXQgZT1uZXcgaUYobmV3IFVpbnQzMkFycmF5KFt0aGlzLmJ1ZmZlclszXS"
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     "lEP3Q6bmV3IGlEKHQpLGUpfWlzU3luYygpe3JldHVybiEwfWlzRmlsZSgpe3JldHVybiEwfW9wZW4odCl7aWYoIXRoaXMuY2xvc2VkJiYhdGhpcy5fZm9vdGVyKWZvcihsZXQgdCBvZih0aGlzLnNjaGVtYT0odGhpcy5fZm9vdGVyPXRoaXMuX3JlYWRGb290ZXIoKSkuc2NoZW1hLHRoaXMuX2Zvb3Rlci5kaWN0aW9uYXJ5QmF0Y2hlcygpKSl0JiZ0aGlzLl9yZWFkRGljdGlvbmFyeUJhdGNoKHRoaXMuX2RpY3Rpb25hcnlJbmRleCsrKTtyZXR1cm4gc3VwZXIub3Blbih0KX1yZWFkUmVjb3JkQmF0Y2godCl7dmFyIGU7aWYodGhpcy5jbG9zZWQpcmV0dXJuIG51bGw7dGhpcy5fZm9vdGVyfHx0aGlzLm9wZW4oKTtsZXQgaT1udWxsPT09KGU9dGhpcy5fZm9vdGVyKXx8dm9pZCAwPT09ZT92b2lkIDA6ZS5nZXRSZWNvcmRCYXRjaCh0KTtpZihpJiZ0aGlzLl9oYW5kbGUuc2VlayhpLm9mZnNldCkpe2xldCB0PXRoaXMuX3JlYWRlci5yZWFkTWVzc2FnZShuLlJlY29yZEJhdGNoKTtpZihudWxsPT10P3ZvaWQgMDp0LmlzUmVjb3JkQmF0Y2goKSl7bGV0IGU9dC5oZWFkZXIoKSxpPXRoaXMuX3JlYWRlci5yZWFkTWVzc2FnZUJvZHkodC5ib2R5TGVuZ3RoKTtyZXR1cm4gdGhpcy5fbG9hZFJlY29yZEJhdGNoKGUsaSl9fXJldHVybiBudWxsfV9yZWFkRGljdGlvbmFyeUJhdGNoKHQpe3ZhciBlO2xldCBpPW51bGw9PT0oZT10aGlzLl9mb290ZXIpfHx2b2lkIDA9PT1lP3ZvaWQgMDplLmdldERpY3Rpb25hcnlCYXRjaCh0KTtpZihpJiZ0aGlzLl9oYW5kbGUuc2VlayhpLm9mZnNldCkpe2xldCB0PXRoaXMuX3JlYWRlci5yZWFkTWVzc2FnZShuLkRpY3Rpb25hcnlCYXRjaCk7aWYobnVsbD09dD92b2lkIDA6dC5pc0RpY3Rpb25hcnlCYXRjaCgpKXtsZXQgZT10LmhlYWRlcigpLGk9dGhpcy5fcmVhZGVyLnJlYWRNZXNzYWdlQm9keSh0LmJvZHlMZW5ndGgpLHI9dGhpcy5fbG9hZERpY3Rpb25hcnlCYXRjaChlLGkpO3RoaXMuZGljdGlvbmFyaWVzLnNldChlLmlkLHIpfX19X3JlYWRGb290ZXIoKXtsZXR7X2hhbmRsZTp0fT10aGlzLGU9dC5zaXplLXJLLGk9dC5yZWFkSW50MzIoZSkscj10LnJlYWRBdChlLWksaSk7cmV0dXJuIGl5LmRlY29kZShyKX1fcmVhZE5leHRNZXNzYWdlQW5kVmFsaWRhdGUodCl7dmFyIGU7aWYodGhpcy5fZm9vdGVyfHx0aGlzLm9wZW4oKSx0aGlzLl9mb290ZXImJnRoaXMuX3JlY29yZEJhdGNoSW5kZXg8dGhpcy5udW1SZWNvcmRCYXRjaGVzKXtsZXQgaT1udWxsPT09KGU9dGhpcy5fZm9vdGVyKXx8dm9pZCAwPT09ZT92b2lkIDA6ZS5nZXRSZWNvcmRCYXRjaCh0aGlzLl9yZWNvcmRCYXRjaEluZGV4KTtpZihpJiZ0aGlzLl9oYW5kbGUuc2VlayhpLm9mZnNldCkpcmV0dXJuIHRoaXMuX3JlYWRlci5yZWFkTWVzc2FnZSh0KX1yZXR1cm4gbnVsbH19Y2xhc3MgcjUgZXh0ZW5kcyByNntnZXQgZm9vdGVyKCl7cmV0dXJuIHRoaXMuX2Zvb3Rlcn1nZXQgbnVtRGljdGlvbmFyaWVzKCl7cmV0dXJuIHRoaXMuX2Zvb3Rlcj90aGlzLl9mb290ZXIubnVtRGljdGlvbmFyaWVzOjB9Z2V0IG51bVJlY29yZEJhdGNoZXMoKXtyZXR1cm4gdGhpcy5fZm9vdGVyP3RoaXMuX2Zvb3Rlci5udW1SZWNvcmRCYXRjaGVzOjB9Y29uc3RydWN0b3IodCwuLi5lKXtzdXBlcih0IGluc3RhbmNlb2YgaUM/dDpuZXcgaUModCwibnVtYmVyIiE9dHlwZW9mIGVbMF0/ZS5zaGlmdCgpOnZvaWQgMCksZVswXWluc3RhbmNlb2YgTWFwP2Uuc2hpZnQoKTp2b2lkIDApfWlzRmlsZSgpe3JldHVybiEwfWlzQXN5bmMoKXtyZXR1cm4hMH1vcGVuKHQpe2xldCBlPU9iamVjdC5jcmVhdGUobnVsbCx7b3Blbjp7Z2V0OigpPT5zdXBlci5vcGVufX0pO3JldHVybigwLGguc0gpKHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbiooKXtpZighdGhpcy5jbG9zZWQmJiF0aGlzLl9mb290ZXIpZm9yKGxldCB0IG9mKHRoaXMuc2NoZW1hPSh0aGlzLl9mb290ZXI9eWllbGQgdGhpcy5fcmVhZEZvb3RlcigpKS5zY2hlbWEsdGhpcy5fZm9vdGVyLmRpY3Rpb25hcnlCYXRjaGVzKCkpKXQmJih5aWVsZCB0aGlzLl9yZWFkRGljdGlvbmFyeUJhdGNoKHRoaXMuX2RpY3Rpb25hcnlJbmRleCsrKSk7cmV0dXJuIHlpZWxkIGUub3Blbi5jYWxsKHRoaXMsdCl9KX1yZWFkUmVjb3JkQmF0Y2godCl7cmV0dXJuKDAsaC5zSCkodGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKigpe3ZhciBlO2lmKHRoaXMuY2xvc2VkKXJldHVybiBudWxsO3RoaXMuX2Zvb3Rlcnx8KHlpZWxkIHRoaXMub3BlbigpKTtsZXQgaT1udWxsPT09KGU9dGhpcy5fZm9vdGVyKXx8dm9pZCAwPT09ZT92b2lkIDA6ZS5nZXRSZWNvcmRCYXRjaCh0KTtpZihpJiYoeWllbGQgdGhpcy5faGFuZGxlLnNlZWsoaS5vZmZzZXQpKSl7bGV0IHQ9eWllbGQgdGhpcy5fcmVhZGVyLnJlYWRNZXNzYWdlKG4uUmVjb3JkQmF0Y2gpO2lmKG51bGw9PXQ/dm9pZCAwOnQuaXNSZWNvcmRCYXRjaCgpKXtsZXQgZT10LmhlYWRlcigpLGk9eWllbGQgdGhpcy5fcmVhZGVyLnJlYWRNZXNzYWdlQm9keSh0LmJvZHlMZW5ndGgpO3JldHVybiB0aGlzLl9sb2FkUmVjb3JkQmF0Y2goZSxpKX19cmV0dXJuIG51bGx9KX1fcmVhZERpY3Rpb25hcnlCYXRjaCh0KXtyZXR1cm4oMCxoLnNIKSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24qKCl7dmFyIGU7bGV0IGk9bnVsbD09PShlPXRoaXMuX2Zvb3Rlcil8fHZvaWQgMD09PWU/dm9pZCAwOmUuZ2V0RGljdGlvbmFyeUJhdGNoKHQpO2lmKGkmJih5aWVsZCB0aGlzLl9oYW5kbGUuc2VlayhpLm9mZnNldCkpKXtsZXQgdD15aWVsZCB0aGlzLl9yZWFkZXIucmVhZE1lc3NhZ2Uobi5EaWN0aW9uYXJ5QmF0Y2gpO2lmKG51bGw9PXQ/dm9pZCAwOnQuaXNEaWN0aW9uYXJ5QmF0Y2goKSl7bGV0IGU9dC5oZWFkZXIoKSxpPXlpZWxkIHRoaXMuX3JlYWRlci5yZWFkTWVzc2FnZUJvZHkodC5ib2R5TGVuZ3RoKSxyPXRoaXMuX2xvYWREaWN0aW9uYXJ5QmF0Y2goZSxpKTt0aGlzLmRpY3Rpb25hcmllcy5zZXQoZS5pZCxyKX19fSl9X3JlYWRGb290ZXIoKXtyZXR1cm4oMCxoLnNIKSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24qKCl7bGV0e19oYW5kbGU6dH09dGhpczt0Ll9wZW5kaW5nJiYoeWllbGQgdC5fcGVuZGluZyk7bGV0IGU9dC5zaXplLXJLLGk9eWllbGQgdC5yZWFkSW50MzIoZSkscj15aWVsZCB0LnJlYWRBdChlLWksaSk7cmV0dXJuIGl5LmRlY29kZShyKX0pfV9yZWFkTmV4dE1lc3NhZ2VBbmRWYWxpZGF0ZSh0KXtyZXR1cm4oMCxoLnNIKSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24qKCl7aWYodGhpcy5fZm9vdGVyfHwoeWllbGQgdGhpcy5vcGVuKCkpLHRoaXMuX2Zvb3RlciYmdGhpcy5fcmVjb3JkQmF0Y2hJbmRleDx0aGlzLm51bVJlY29yZEJhdGNoZXMpe2xldCBlPXRoaXMuX2Zvb3Rlci5nZXRSZWNvcmRCYXRjaCh0aGlzLl9yZWNvcmRCYXRjaEluZGV4KTtpZihlJiYoeWllbGQgdGhpcy5faGFuZGxlLnNlZWsoZS5vZmZzZXQpKSlyZXR1cm4geWllbGQgdGhpcy5fcmVhZGVyLnJlYWRNZXNzYWdlKHQpfXJldHVybiBudWxsfSl9fWNsYXNzIHI5IGV4dGVuZHMgcjR7Y29uc3RydWN0b3IodCxlKXtzdXBlcih0LGUpfV9sb2FkVmVjdG9ycyh0LGUsaSl7cmV0dXJuIG5ldyBpeihlLHQubm9kZXMsdC5idWZmZXJzLHRoaXMuZGljdGlvbmFyaWVzLHRoaXMuc2NoZW1hLm1ldGFkYXRhVmVyc2lvbikudmlzaXRNYW55KGkpfX1mdW5jdGlvbiByNyh0LGUpe3JldHVybiBlJiYiYm9vbGVhbiI9PXR5cGVvZiBlLmF1dG9EZXN0cm95P2UuYXV0b0Rlc3Ryb3k6dC5hdXRvRGVzdHJveX1mdW5jdGlvbipudCh0KXtsZXQgZT1ycS5mcm9tKHQpO3RyeXtpZighZS5vcGVuKHthdXRvRGVzdHJveTohMX0pLmNsb3NlZClkbyB5aWVsZCBlO3doaWxlKCFlLnJlc2V0KCkub3BlbigpLmNsb3NlZCl9ZmluYWxseXtlLmNhbmNlbCgpfX1mdW5jdGlvbiBuZSh0KXtyZXR1cm4oMCxoLkFRKSh0aGlzLGFyZ3VtZW50cyxmdW5jdGlvbiooKXtsZXQgZT15aWVsZCgwLGguTjMpKHJxLmZyb20odCkpO3RyeXtpZighKHlpZWxkKDAsaC5OMykoZS5vcGVuKHthdXRvRGVzdHJveTohMX0pKSkuY2xvc2VkKWRvIHlpZWxkIHlpZWxkKDAsaC5OMykoZSk7d2hpbGUoISh5aWVsZCgwLGguTjMpKGUucmVzZXQoKS5vcGVuKCkpKS5jbG9zZWQpfWZpbmFsbHl7eWllbGQoMCxoLk4zKShlLmNhbmNlbCgpKX19KX1jbGFzcyBuaSBleHRlbmRzIHR1e3N0YXRpYyBhc3NlbWJsZSguLi50KXtsZXQgZT10PT50LmZsYXRNYXAodD0+QXJyYXkuaXNBcnJheSh0KT9lKHQpOnQgaW5zdGFuY2VvZiBpMz90LmRhdGEuY2hpbGRyZW46dC5kYXRhKSxpPW5ldyBuaTtyZXR1cm4gaS52aXNpdE1hbnkoZSh0KSksaX1jb25zdHJ1Y3Rvcigpe3N1cGVyKCksdGhpcy5fYnl0ZUxlbmd0aD0wLHRoaXMuX25vZGVzPVtdLHRoaXMuX2J1ZmZlcnM9W10sdGhpcy5fYnVmZmVyUmVnaW9ucz1bXX12aXNpdCh0KXtpZih0IGluc3RhbmNlb2YgZTEpcmV0dXJuIHRoaXMudmlzaXRNYW55KHQuZGF0YSksdGhpcztsZXR7dHlwZTplfT10O2lmKCF0Yy5wZS5pc0RpY3Rpb25hcnkoZSkpe2xldHtsZW5ndGg6aX09dDtpZihpPjB4N2ZmZmZmZmYpdGhyb3cgUmFuZ2VFcnJvcigiQ2Fubm90IHdyaXRlIGFycmF5cyBsYXJnZXIgdGhhbiAyXjMxIC0gMSBpbiBsZW5ndGgiKTtpZih0Yy5wZS5pc1VuaW9uKGUpKXRoaXMubm9kZXMucHVzaChuZXcgckQoaSwwKSk7ZWxzZXtsZXR7bnVsbENvdW50OnJ9PXQ7dGMucGUuaXNOdWxsKGUpfHxuci5jYWxsKHRoaXMscjw9MD9uZXcgVWludDhBcnJheSgwKTpleih0Lm9mZnNldCxpLHQubnVsbEJpdG1hcCkpLHRoaXMubm9kZXMucHVzaChuZXcgckQoaSxyKSl9fXJldHVybiBzdXBlci52aXNpdCh0KX12aXNpdE51bGwodCl7cmV0dXJuIHRoaXN9dmlzaXREaWN0aW9uYXJ5KHQpe3JldHVybiB0aGlzLnZpc2l0KHQuY2xvbmUodC50eXBlLmluZGljZXMpKX1nZXQgbm9kZXMoKXtyZXR1cm4gdGhpcy5fbm9kZXN9Z2V0IGJ1ZmZlcnMoKXtyZXR1cm4gdGhpcy5fYnVmZmVyc31nZXQgYnl0ZUxlbmd0aCgpe3JldHVybiB0aGlzLl9ieXRlTGVuZ3RofWdldCBidWZmZXJSZWdpb25zKCl7cmV0dXJuIHRoaXMuX2J1ZmZlclJlZ2lvbnN9fWZ1bmN0aW9uIG5yKHQpe2xldCBlPXQuYnl0ZUxlbmd0aCs3Ji04O3JldHVybiB0aGlzLmJ1ZmZlcnMucHVzaCh0KSx0aGlzLmJ1ZmZlclJlZ2lvbnMucHVzaChuZXcgckwodGhpcy5fYnl0ZUxlbmd0aCxlKSksdGhpcy5fYnl0ZUxlbmd0aCs9ZSx0aGlzfWZ1bmN0aW9uIG5uKHQpe3JldHVybiBuci5jYWxsKHRoaXMsdC52YWx1ZXMuc3ViYXJyYXkoMCx0Lmxlbmd0aCp0LnN0cmlkZSkpfWZ1bmN0aW9uIG5zKHQpe2xldHtsZW5ndGg6ZSx2YWx1ZXM6aSx2YWx1ZU9mZnNldHM6cn09dCxuPSgwLEcuaSkoclswXSkscz1NYXRoLm1pbigoMCxHLmkpKHJbZV0pLW4saS5ieXRlTGVuZ3RoLW4pO3JldHVybiBuci5jYWxsKHRoaXMsWCgtbixlKzEscikpLG5yLmNhbGwodGhpcyxpLnN1YmFycmF5KG4sbitzKSksdGhpc31mdW5jdGlvbiBubyh0KXtsZXR7bGVuZ3RoOmUsdmFsdWVPZmZzZXRzOml9PXQ7aWYoaSl7bGV0ezA6cixbZV06bn09aTtyZXR1cm4gbnIuY2FsbCh0aGlzLFgoLXIsZSsxLGkpKSx0aGlzLnZpc2l0KHQuY2hpbGRyZW5bMF0uc2xpY2UocixuLXIpKX1yZXR1cm4gdGhpcy52aXNpdCh0LmNoaWxkcmVuWzBdKX1mdW5jdGlvbiBuYSh0KXtyZXR1cm4gdGhpcy52aXNpdE1hbnkodC50eXBlLmNoaWxkcmVuLm1hcCgoZSxpKT0+dC5jaGlsZHJlbltpXSkuZmlsdGVyKEJvb2xlYW4pKVswXX1uaS5wcm90b3R5cGUudmlzaXRCb29sPWZ1bmN0aW9uKHQpe2xldCBlO3JldHVybiB0Lm51bGxDb3VudD49dC5sZW5ndGg/bnIuY2FsbCh0aGlzLG5ldyBVaW50OEFycmF5KDApKTooZT10LnZhbHVlcylpbnN0YW5jZW9mIFVpbnQ4QXJyYXk/bnIuY2FsbCh0aGlzLGV6KHQub2Zmc2V0LHQubGVuZ3RoLGUpKTpuci5jYWxsKHRoaXMsZUgodC52YWx1ZXMpKX0sbmkucHJvdG90eXBlLnZpc2l0SW50PW5uLG5pLnByb3RvdHlwZS52aXNpdEZsb2F0PW5uLG5pLnByb3RvdHlwZS52aXNpdFV0Zjg9bnMsbmkucHJvdG90eXBlLnZpc2l0TGFyZ2VVdGY4PW5zLG5pLnByb3RvdHlwZS52aXNpdEJpbmFyeT1ucyxuaS5wcm90b3R5cGUudmlzaXRMYXJnZUJpbmFyeT1ucyxuaS5wcm90b3R5cGUudmlzaXRGaXhlZFNpemVCaW5h"
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     "I6ImZhbHNlIixzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmc6ITB9LE4ubWFwKChlLG4pPT57dmFyIHM7bGV0IG87bGV0W2gsZ109ZS5zcGxpdCgiLSIpO3JldHVybiBJLmxlbmd0aD9yLmNyZWF0ZUVsZW1lbnQoIm9sIix7a2V5OmUsZGlyOiJhdXRvIj09PV8/VCgpOl8sdGFiSW5kZXg6LTEscmVmOlAsY2xhc3NOYW1lOmQsImRhdGEtc29ubmVyLXRvYXN0ZXIiOiEwLCJkYXRhLXRoZW1lIjpVLCJkYXRhLXktcG9zaXRpb24iOmgsImRhdGEtbGlmdGVkIjpEJiZJLmxlbmd0aD4xJiYhYSwiZGF0YS14LXBvc2l0aW9uIjpnLHN0eWxlOnsiLS1mcm9udC10b2FzdC1oZWlnaHQiOiIiLmNvbmNhdCgobnVsbD09KHM9eFswXSk/dm9pZCAwOnMuaGVpZ2h0KXx8MCwicHgiKSwiLS13aWR0aCI6IiIuY29uY2F0KDM1NiwicHgiKSwiLS1nYXAiOiIiLmNvbmNhdCh3LCJweCIpLC4uLnksLi4uKG89e30sW2MsdV0uZm9yRWFjaCgodCxlKT0+e2xldCBpPTE9PT1lLHI9aT8iLS1tb2JpbGUtb2Zmc2V0IjoiLS1vZmZzZXQiLG49aT8iMTZweCI6IjMycHgiO2Z1bmN0aW9uIHModCl7WyJ0b3AiLCJyaWdodCIsImJvdHRvbSIsImxlZnQiXS5mb3JFYWNoKGU9PntvWyIiLmNvbmNhdChyLCItIikuY29uY2F0KGUpXT0ibnVtYmVyIj09dHlwZW9mIHQ/IiIuY29uY2F0KHQsInB4Iik6dH0pfSJudW1iZXIiPT10eXBlb2YgdHx8InN0cmluZyI9PXR5cGVvZiB0P3ModCk6Im9iamVjdCI9PXR5cGVvZiB0P1sidG9wIiwicmlnaHQiLCJib3R0b20iLCJsZWZ0Il0uZm9yRWFjaChlPT57dm9pZCAwPT09dFtlXT9vWyIiLmNvbmNhdChyLCItIikuY29uY2F0KGUpXT1uOm9bIiIuY29uY2F0KHIsIi0iKS5jb25jYXQoZSldPSJudW1iZXIiPT10eXBlb2YgdFtlXT8iIi5jb25jYXQodFtlXSwicHgiKTp0W2VdfSk6cyhuKX0pLG8pfSxvbkJsdXI6dD0+e3ouY3VycmVudCYmIXQuY3VycmVudFRhcmdldC5jb250YWlucyh0LnJlbGF0ZWRUYXJnZXQpJiYoei5jdXJyZW50PSExLGouY3VycmVudCYmKGouY3VycmVudC5mb2N1cyh7cHJldmVudFNjcm9sbDohMH0pLGouY3VycmVudD1udWxsKSl9LG9uRm9jdXM6dD0+e3QudGFyZ2V0IGluc3RhbmNlb2YgSFRNTEVsZW1lbnQmJiJmYWxzZSI9PT10LnRhcmdldC5kYXRhc2V0LmRpc21pc3NpYmxlfHx6LmN1cnJlbnR8fCh6LmN1cnJlbnQ9ITAsai5jdXJyZW50PXQucmVsYXRlZFRhcmdldCl9LG9uTW91c2VFbnRlcjooKT0+QyghMCksb25Nb3VzZU1vdmU6KCk9PkMoITApLG9uTW91c2VMZWF2ZTooKT0+e0J8fEMoITEpfSxvblBvaW50ZXJEb3duOnQ9Pnt0LnRhcmdldCBpbnN0YW5jZW9mIEhUTUxFbGVtZW50JiYiZmFsc2UiPT09dC50YXJnZXQuZGF0YXNldC5kaXNtaXNzaWJsZXx8TSghMCl9LG9uUG9pbnRlclVwOigpPT5NKCExKX0sSS5maWx0ZXIodD0+IXQucG9zaXRpb24mJjA9PT1ufHx0LnBvc2l0aW9uPT09ZSkubWFwKChuLHMpPT57dmFyIG8sZDtyZXR1cm4gci5jcmVhdGVFbGVtZW50KHYse2tleTpuLmlkLGljb25zOlMsaW5kZXg6cyx0b2FzdDpuLGRlZmF1bHRSaWNoQ29sb3JzOmYsZHVyYXRpb246bnVsbCE9KG89bnVsbD09Yj92b2lkIDA6Yi5kdXJhdGlvbik/bzpwLGNsYXNzTmFtZTpudWxsPT1iP3ZvaWQgMDpiLmNsYXNzTmFtZSxkZXNjcmlwdGlvbkNsYXNzTmFtZTpudWxsPT1iP3ZvaWQgMDpiLmRlc2NyaXB0aW9uQ2xhc3NOYW1lLGludmVydDppLHZpc2libGVUb2FzdHM6bSxjbG9zZUJ1dHRvbjpudWxsIT0oZD1udWxsPT1iP3ZvaWQgMDpiLmNsb3NlQnV0dG9uKT9kOmwsaW50ZXJhY3Rpbmc6Qixwb3NpdGlvbjplLHN0eWxlOm51bGw9PWI/dm9pZCAwOmIuc3R5bGUsdW5zdHlsZWQ6bnVsbD09Yj92b2lkIDA6Yi51bnN0eWxlZCxjbGFzc05hbWVzOm51bGw9PWI/dm9pZCAwOmIuY2xhc3NOYW1lcyxjYW5jZWxCdXR0b25TdHlsZTpudWxsPT1iP3ZvaWQgMDpiLmNhbmNlbEJ1dHRvblN0eWxlLGFjdGlvbkJ1dHRvblN0eWxlOm51bGw9PWI/dm9pZCAwOmIuYWN0aW9uQnV0dG9uU3R5bGUscmVtb3ZlVG9hc3Q6SCx0b2FzdHM6SS5maWx0ZXIodD0+dC5wb3NpdGlvbj09bi5wb3NpdGlvbiksaGVpZ2h0czp4LmZpbHRlcih0PT50LnBvc2l0aW9uPT1uLnBvc2l0aW9uKSxzZXRIZWlnaHRzOkwsZXhwYW5kQnlEZWZhdWx0OmEsZ2FwOncsbG9hZGluZ0ljb246RSxleHBhbmRlZDpELHBhdXNlV2hlblBhZ2VJc0hpZGRlbjpPLHN3aXBlRGlyZWN0aW9uczp0LnN3aXBlRGlyZWN0aW9uc30pfSkpOm51bGx9KSl9KX0sMzA1ODc6KHQsZSxpKT0+eyJ1c2Ugc3RyaWN0IjtpLmQoZSx7QTooKT0+cn0pO2xldCByPSgwLGkoNjE0OTgpLkEpKCJDb3B5IixbWyJyZWN0Iix7d2lkdGg6IjE0IixoZWlnaHQ6IjE0Iix4OiI4Iix5OiI4IixyeDoiMiIscnk6IjIiLGtleToiMTdqeWVhIn1dLFsicGF0aCIse2Q6Ik00IDE2Yy0xLjEgMC0yLS45LTItMlY0YzAtMS4xLjktMiAyLTJoMTBjMS4xIDAgMiAuOSAyIDIiLGtleToieml4OXVmIn1dXSl9LDMwNjgyOnQ9PnshZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7dmFyIGU9ezExNDpmdW5jdGlvbih0KXtmdW5jdGlvbiBlKHQpe2lmKCJzdHJpbmciIT10eXBlb2YgdCl0aHJvdyBUeXBlRXJyb3IoIlBhdGggbXVzdCBiZSBhIHN0cmluZy4gUmVjZWl2ZWQgIitKU09OLnN0cmluZ2lmeSh0KSl9ZnVuY3Rpb24gaSh0LGUpe2Zvcih2YXIgaSxyPSIiLG49MCxzPS0xLG89MCxhPTA7YTw9dC5sZW5ndGg7KythKXtpZihhPHQubGVuZ3RoKWk9dC5jaGFyQ29kZUF0KGEpO2Vsc2UgaWYoNDc9PT1pKWJyZWFrO2Vsc2UgaT00NztpZig0Nz09PWkpe2lmKHM9PT1hLTF8fDE9PT1vKTtlbHNlIGlmKHMhPT1hLTEmJjI9PT1vKXtpZihyLmxlbmd0aDwyfHwyIT09bnx8NDYhPT1yLmNoYXJDb2RlQXQoci5sZW5ndGgtMSl8fDQ2IT09ci5jaGFyQ29kZUF0KHIubGVuZ3RoLTIpKXtpZihyLmxlbmd0aD4yKXt2YXIgbD1yLmxhc3RJbmRleE9mKCIvIik7aWYobCE9PXIubGVuZ3RoLTEpey0xPT09bD8ocj0iIixuPTApOm49KHI9ci5zbGljZSgwLGwpKS5sZW5ndGgtMS1yLmxhc3RJbmRleE9mKCIvIikscz1hLG89MDtjb250aW51ZX19ZWxzZSBpZigyPT09ci5sZW5ndGh8fDE9PT1yLmxlbmd0aCl7cj0iIixuPTAscz1hLG89MDtjb250aW51ZX19ZSYmKHIubGVuZ3RoPjA/cis9Ii8uLiI6cj0iLi4iLG49Mil9ZWxzZSByLmxlbmd0aD4wP3IrPSIvIit0LnNsaWNlKHMrMSxhKTpyPXQuc2xpY2UocysxLGEpLG49YS1zLTE7cz1hLG89MH1lbHNlIDQ2PT09aSYmLTEhPT1vPysrbzpvPS0xfXJldHVybiByfXZhciByPXtyZXNvbHZlOmZ1bmN0aW9uKCl7Zm9yKHZhciB0LHIsbj0iIixzPSExLG89YXJndW1lbnRzLmxlbmd0aC0xO28+PS0xJiYhcztvLS0pbz49MD9yPWFyZ3VtZW50c1tvXToodm9pZCAwPT09dCYmKHQ9IiIpLHI9dCksZShyKSwwIT09ci5sZW5ndGgmJihuPXIrIi8iK24scz00Nz09PXIuY2hhckNvZGVBdCgwKSk7cmV0dXJuKG49aShuLCFzKSxzKT9uLmxlbmd0aD4wPyIvIituOiIvIjpuLmxlbmd0aD4wP246Ii4ifSxub3JtYWxpemU6ZnVuY3Rpb24odCl7aWYoZSh0KSwwPT09dC5sZW5ndGgpcmV0dXJuIi4iO3ZhciByPTQ3PT09dC5jaGFyQ29kZUF0KDApLG49NDc9PT10LmNoYXJDb2RlQXQodC5sZW5ndGgtMSk7cmV0dXJuKDAhPT0odD1pKHQsIXIpKS5sZW5ndGh8fHJ8fCh0PSIuIiksdC5sZW5ndGg+MCYmbiYmKHQrPSIvIikscik/Ii8iK3Q6dH0saXNBYnNvbHV0ZTpmdW5jdGlvbih0KXtyZXR1cm4gZSh0KSx0Lmxlbmd0aD4wJiY0Nz09PXQuY2hhckNvZGVBdCgwKX0sam9pbjpmdW5jdGlvbigpe2lmKDA9PWFyZ3VtZW50cy5sZW5ndGgpcmV0dXJuIi4iO2Zvcih2YXIgdCxpPTA7aTxhcmd1bWVudHMubGVuZ3RoOysraSl7dmFyIG49YXJndW1lbnRzW2ldO2Uobiksbi5sZW5ndGg+MCYmKHZvaWQgMD09PXQ/dD1uOnQrPSIvIituKX1yZXR1cm4gdm9pZCAwPT09dD8iLiI6ci5ub3JtYWxpemUodCl9LHJlbGF0aXZlOmZ1bmN0aW9uKHQsaSl7aWYoZSh0KSxlKGkpLHQ9PT1pfHwodD1yLnJlc29sdmUodCkpPT09KGk9ci5yZXNvbHZlKGkpKSlyZXR1cm4iIjtmb3IodmFyIG49MTtuPHQubGVuZ3RoJiY0Nz09PXQuY2hhckNvZGVBdChuKTsrK24pO2Zvcih2YXIgcz10Lmxlbmd0aCxvPXMtbixhPTE7YTxpLmxlbmd0aCYmNDc9PT1pLmNoYXJDb2RlQXQoYSk7KythKTtmb3IodmFyIGw9aS5sZW5ndGgtYSxkPW88bD9vOmwsYz0tMSx1PTA7dTw9ZDsrK3Upe2lmKHU9PT1kKXtpZihsPmQpe2lmKDQ3PT09aS5jaGFyQ29kZUF0KGErdSkpcmV0dXJuIGkuc2xpY2UoYSt1KzEpO2lmKDA9PT11KXJldHVybiBpLnNsaWNlKGErdSl9ZWxzZSBvPmQmJig0Nz09PXQuY2hhckNvZGVBdChuK3UpP2M9dTowPT09dSYmKGM9MCkpO2JyZWFrfXZhciBoPXQuY2hhckNvZGVBdChuK3UpO2lmKGghPT1pLmNoYXJDb2RlQXQoYSt1KSlicmVhazs0Nz09PWgmJihjPXUpfXZhciBmPSIiO2Zvcih1PW4rYysxO3U8PXM7Kyt1KSh1PT09c3x8NDc9PT10LmNoYXJDb2RlQXQodSkpJiYoMD09PWYubGVuZ3RoP2YrPSIuLiI6Zis9Ii8uLiIpO3JldHVybiBmLmxlbmd0aD4wP2YraS5zbGljZShhK2MpOihhKz1jLDQ3PT09aS5jaGFyQ29kZUF0KGEpJiYrK2EsaS5zbGljZShhKSl9LF9tYWtlTG9uZzpmdW5jdGlvbih0KXtyZXR1cm4gdH0sZGlybmFtZTpmdW5jdGlvbih0KXtpZihlKHQpLDA9PT10Lmxlbmd0aClyZXR1cm4iLiI7Zm9yKHZhciBpPXQuY2hhckNvZGVBdCgwKSxyPTQ3PT09aSxuPS0xLHM9ITAsbz10Lmxlbmd0aC0xO28+PTE7LS1vKWlmKDQ3PT09KGk9dC5jaGFyQ29kZUF0KG8pKSl7aWYoIXMpe249bzticmVha319ZWxzZSBzPSExO3JldHVybiAtMT09PW4/cj8iLyI6Ii4iOnImJjE9PT1uPyIvLyI6dC5zbGljZSgwLG4pfSxiYXNlbmFtZTpmdW5jdGlvbih0LGkpe2lmKHZvaWQgMCE9PWkmJiJzdHJpbmciIT10eXBlb2YgaSl0aHJvdyBUeXBlRXJyb3IoJyJleHQiIGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmcnKTtlKHQpO3ZhciByLG49MCxzPS0xLG89ITA7aWYodm9pZCAwIT09aSYmaS5sZW5ndGg+MCYmaS5sZW5ndGg8PXQubGVuZ3RoKXtpZihpLmxlbmd0aD09PXQubGVuZ3RoJiZpPT09dClyZXR1cm4iIjt2YXIgYT1pLmxlbmd0aC0xLGw9LTE7Zm9yKHI9dC5sZW5ndGgtMTtyPj0wOy0tcil7dmFyIGQ9dC5jaGFyQ29kZUF0KHIpO2lmKDQ3PT09ZCl7aWYoIW8pe249cisxO2JyZWFrfX1lbHNlIC0xPT09bCYmKG89ITEsbD1yKzEpLGE+PTAmJihkPT09aS5jaGFyQ29kZUF0KGEpPy0xPT0tLWEmJihzPXIpOihhPS0xLHM9bCkpfXJldHVybiBuPT09cz9zPWw6LTE9PT1zJiYocz10Lmxlbmd0aCksdC5zbGljZShuLHMpfWZvcihyPXQubGVuZ3RoLTE7cj49MDstLXIpaWYoNDc9PT10LmNoYXJDb2RlQXQocikpe2lmKCFvKXtuPXIrMTticmVha319ZWxzZSAtMT09PXMmJihvPSExLHM9cisxKTtyZXR1cm4gLTE9PT1zPyIiOnQuc2xpY2UobixzKX0sZXh0bmFtZTpmdW5jdGlvbih0KXtlKHQpO2Zvcih2YXIgaT0tMSxyPTAsbj0tMSxzPSEwLG89MCxhPXQubGVuZ3RoLTE7YT49MDstLWEpe3ZhciBsPXQuY2hhckNvZGVBdChhKTtpZig0Nz09PWwpe2lmKCFzKXtyPWErMTticmVha31jb250aW51ZX0tMT09PW4mJihzPSExLG49YSsxKSw0Nj09PWw/LTE9PT1pP2k9YToxIT09byYmKG89MSk6LTEhPT1pJiYobz0tMSl9cmV0dXJuIC0xPT09aXx8LTE9PT1ufHwwPT09b3x8MT09PW8mJmk9PT1uLTEmJmk9PT1yKzE/IiI6dC5zbGljZShpLG4pfSxmb3JtYXQ6ZnVuY3Rpb24odCl7dmFyIGUsaTtpZihudWxsPT09dHx8Im9iamVjdCIhPXR5cGVvZiB0KXRocm93IFR5cGVFcnJvcignVGhlICJwYXRoT2JqZWN0IiBhcmd1bWVudCBtdXN0IGJlIG9mIHR5cGUgT2JqZWN0LiBSZWNlaXZlZCB0eXBlICcrdHlwZW9mIHQpO3JldHVybiBlPXQuZGlyfHx0LnJvb3QsaT10LmJhc2V8fCh0Lm5hbWV8fCIiKSsodC5leHR8fCIiKSxlP2U9PT10LnJvb3Q/ZStpOmUrIi8iK2k6aX0scGFyc2U6ZnVuY3Rpb24odCl7ZSh0KTt2YXIgaSxyPXtyb290OiIiLGRpcjoiIixiYXNlOiIiLGV4dDoiIixuYW1lOiIifTtpZigwPT09dC5sZW5ndGgpcmV0dXJuIHI7dmFyIG49dC5jaGFyQ29kZUF0KDApLHM9NDc9PT1uO3M/KHIucm9vdD0iLyIsaT0xKTppPTA7Zm9yKHZhciBvPS0xLGE9MCxsPS0xLGQ9ITAsYz10Lmxlbmd0aC0xLHU9MDtjPj1pOy0tYyl7aWYoNDc9PT0o"
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     "dC5jdHJsS2V5JiYhdC5tZXRhS2V5LHI9ZG9jdW1lbnQuYWN0aXZlRWxlbWVudDtpZihlJiZyKXtsZXQgZT10LmN1cnJlbnRUYXJnZXQsW24sc109ZnVuY3Rpb24odCl7bGV0IGU9aCh0KTtyZXR1cm5bZihlLHQpLGYoZS5yZXZlcnNlKCksdCldfShlKTtuJiZzP3Quc2hpZnRLZXl8fHIhPT1zP3Quc2hpZnRLZXkmJnI9PT1uJiYodC5wcmV2ZW50RGVmYXVsdCgpLGkmJnAocyx7c2VsZWN0OiEwfSkpOih0LnByZXZlbnREZWZhdWx0KCksaSYmcChuLHtzZWxlY3Q6ITB9KSk6cj09PWUmJnQucHJldmVudERlZmF1bHQoKX19LFtpLHUsQS5wYXVzZWRdKTtyZXR1cm4oMCxhLmpzeCkocy5zRy5kaXYse3RhYkluZGV4Oi0xLC4uLmIscmVmOlMsb25LZXlEb3duOk99KX0pO2Z1bmN0aW9uIGgodCl7bGV0IGU9W10saT1kb2N1bWVudC5jcmVhdGVUcmVlV2Fsa2VyKHQsTm9kZUZpbHRlci5TSE9XX0VMRU1FTlQse2FjY2VwdE5vZGU6dD0+e2xldCBlPSJJTlBVVCI9PT10LnRhZ05hbWUmJiJoaWRkZW4iPT09dC50eXBlO3JldHVybiB0LmRpc2FibGVkfHx0LmhpZGRlbnx8ZT9Ob2RlRmlsdGVyLkZJTFRFUl9TS0lQOnQudGFiSW5kZXg+PTA/Tm9kZUZpbHRlci5GSUxURVJfQUNDRVBUOk5vZGVGaWx0ZXIuRklMVEVSX1NLSVB9fSk7Zm9yKDtpLm5leHROb2RlKCk7KWUucHVzaChpLmN1cnJlbnROb2RlKTtyZXR1cm4gZX1mdW5jdGlvbiBmKHQsZSl7Zm9yKGxldCBpIG9mIHQpaWYoIWZ1bmN0aW9uKHQsZSl7bGV0e3VwVG86aX09ZTtpZigiaGlkZGVuIj09PWdldENvbXB1dGVkU3R5bGUodCkudmlzaWJpbGl0eSlyZXR1cm4hMDtmb3IoO3QmJih2b2lkIDA9PT1pfHx0IT09aSk7KXtpZigibm9uZSI9PT1nZXRDb21wdXRlZFN0eWxlKHQpLmRpc3BsYXkpcmV0dXJuITA7dD10LnBhcmVudEVsZW1lbnR9cmV0dXJuITF9KGkse3VwVG86ZX0pKXJldHVybiBpfWZ1bmN0aW9uIHAodCl7bGV0e3NlbGVjdDplPSExfT1hcmd1bWVudHMubGVuZ3RoPjEmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXT9hcmd1bWVudHNbMV06e307aWYodCYmdC5mb2N1cyl7dmFyIGk7bGV0IHI9ZG9jdW1lbnQuYWN0aXZlRWxlbWVudDt0LmZvY3VzKHtwcmV2ZW50U2Nyb2xsOiEwfSksdCE9PXImJihpPXQpaW5zdGFuY2VvZiBIVE1MSW5wdXRFbGVtZW50JiYic2VsZWN0ImluIGkmJmUmJnQuc2VsZWN0KCl9fXUuZGlzcGxheU5hbWU9IkZvY3VzU2NvcGUiO3ZhciBnPWZ1bmN0aW9uKCl7bGV0IHQ9W107cmV0dXJue2FkZChlKXtsZXQgaT10WzBdO2UhPT1pJiYobnVsbD09aXx8aS5wYXVzZSgpKSwodD15KHQsZSkpLnVuc2hpZnQoZSl9LHJlbW92ZShlKXt2YXIgaTtudWxsPT09KGk9KHQ9eSh0LGUpKVswXSl8fHZvaWQgMD09PWl8fGkucmVzdW1lKCl9fX0oKTtmdW5jdGlvbiB5KHQsZSl7bGV0IGk9Wy4uLnRdLHI9aS5pbmRleE9mKGUpO3JldHVybiAtMSE9PXImJmkuc3BsaWNlKHIsMSksaX19LDgzNzgzOih0LGUsaSk9PnsidXNlIHN0cmljdCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pLGUuTW9kZWw9dm9pZCAwO2xldCByPWkoMTI2NzIpLG49aSg0Nzk3OCkscz1pKDY0MjY0KSxvPWkoMTQ2MTApLGE9aSg5NTE0MiksbD1pKDIxNjg5KSxkPWkoOTkyODQpLGM9aSg1NDcyOCksdT1pKDMyMTY2KSxoPWkoNzkyNjkpLGY9aSg1NjM1OSkscD1pKDg3MjM5KTtjbGFzcyBne3N0YXRpYyBmcm9tSnNvbih0KXtsZXQgZT1uZXcgZztyZXR1cm4gZy5fYXR0cmlidXRlRGVmaW5pdGlvbnMuZnJvbUpzb24odC5nbG9iYWwsZS5fYXR0cmlidXRlcyksdC5ib3JkZXJzJiYoZS5fYm9yZGVycz1jLkJvcmRlclNldC5fZnJvbUpzb24odC5ib3JkZXJzLGUpKSxlLl9yb290PXUuUm93Tm9kZS5fZnJvbUpzb24odC5sYXlvdXQsZSksZS5fdGlkeSgpLGV9c3RhdGljIF9jcmVhdGVBdHRyaWJ1dGVEZWZpbml0aW9ucygpe2xldCB0PW5ldyBuLkF0dHJpYnV0ZURlZmluaXRpb25zO3JldHVybiB0LmFkZCgibGVnYWN5T3ZlcmZsb3dNZW51IiwhMSkuc2V0VHlwZShyLkF0dHJpYnV0ZS5CT09MRUFOKSx0LmFkZCgiZW5hYmxlRWRnZURvY2siLCEwKS5zZXRUeXBlKHIuQXR0cmlidXRlLkJPT0xFQU4pLHQuYWRkKCJyb290T3JpZW50YXRpb25WZXJ0aWNhbCIsITEpLnNldFR5cGUoci5BdHRyaWJ1dGUuQk9PTEVBTiksdC5hZGQoIm1hcmdpbkluc2V0cyIse3RvcDowLHJpZ2h0OjAsYm90dG9tOjAsbGVmdDowfSkuc2V0VHlwZSgiSUluc2V0cyIpLHQuYWRkKCJlbmFibGVVc2VWaXNpYmlsaXR5IiwhMSkuc2V0VHlwZShyLkF0dHJpYnV0ZS5CT09MRUFOKSx0LmFkZCgiZW5hYmxlUm90YXRlQm9yZGVySWNvbnMiLCEwKS5zZXRUeXBlKHIuQXR0cmlidXRlLkJPT0xFQU4pLHQuYWRkKCJzcGxpdHRlclNpemUiLC0xKS5zZXRUeXBlKHIuQXR0cmlidXRlLk5VTUJFUiksdC5hZGQoInNwbGl0dGVyRXh0cmEiLDApLnNldFR5cGUoci5BdHRyaWJ1dGUuTlVNQkVSKSx0LmFkZCgidGFiRW5hYmxlQ2xvc2UiLCEwKS5zZXRUeXBlKHIuQXR0cmlidXRlLkJPT0xFQU4pLHQuYWRkKCJ0YWJDbG9zZVR5cGUiLDEpLnNldFR5cGUoIklDbG9zZVR5cGUiKSx0LmFkZCgidGFiRW5hYmxlRmxvYXQiLCExKS5zZXRUeXBlKHIuQXR0cmlidXRlLkJPT0xFQU4pLHQuYWRkKCJ0YWJFbmFibGVEcmFnIiwhMCkuc2V0VHlwZShyLkF0dHJpYnV0ZS5CT09MRUFOKSx0LmFkZCgidGFiRW5hYmxlUmVuYW1lIiwhMCkuc2V0VHlwZShyLkF0dHJpYnV0ZS5CT09MRUFOKSx0LmFkZCgidGFiQ29udGVudENsYXNzTmFtZSIsdm9pZCAwKS5zZXRUeXBlKHIuQXR0cmlidXRlLlNUUklORyksdC5hZGQoInRhYkNsYXNzTmFtZSIsdm9pZCAwKS5zZXRUeXBlKHIuQXR0cmlidXRlLlNUUklORyksdC5hZGQoInRhYkljb24iLHZvaWQgMCkuc2V0VHlwZShyLkF0dHJpYnV0ZS5TVFJJTkcpLHQuYWRkKCJ0YWJFbmFibGVSZW5kZXJPbkRlbWFuZCIsITApLnNldFR5cGUoci5BdHRyaWJ1dGUuQk9PTEVBTiksdC5hZGQoInRhYkRyYWdTcGVlZCIsLjMpLnNldFR5cGUoci5BdHRyaWJ1dGUuTlVNQkVSKSx0LmFkZCgidGFiQm9yZGVyV2lkdGgiLC0xKS5zZXRUeXBlKHIuQXR0cmlidXRlLk5VTUJFUiksdC5hZGQoInRhYkJvcmRlckhlaWdodCIsLTEpLnNldFR5cGUoci5BdHRyaWJ1dGUuTlVNQkVSKSx0LmFkZCgidGFiU2V0RW5hYmxlRGVsZXRlV2hlbkVtcHR5IiwhMCkuc2V0VHlwZShyLkF0dHJpYnV0ZS5CT09MRUFOKSx0LmFkZCgidGFiU2V0RW5hYmxlRHJvcCIsITApLnNldFR5cGUoci5BdHRyaWJ1dGUuQk9PTEVBTiksdC5hZGQoInRhYlNldEVuYWJsZURyYWciLCEwKS5zZXRUeXBlKHIuQXR0cmlidXRlLkJPT0xFQU4pLHQuYWRkKCJ0YWJTZXRFbmFibGVEaXZpZGUiLCEwKS5zZXRUeXBlKHIuQXR0cmlidXRlLkJPT0xFQU4pLHQuYWRkKCJ0YWJTZXRFbmFibGVNYXhpbWl6ZSIsITApLnNldFR5cGUoci5BdHRyaWJ1dGUuQk9PTEVBTiksdC5hZGQoInRhYlNldEVuYWJsZUNsb3NlIiwhMSkuc2V0VHlwZShyLkF0dHJpYnV0ZS5CT09MRUFOKSx0LmFkZCgidGFiU2V0RW5hYmxlU2luZ2xlVGFiU3RyZXRjaCIsITEpLnNldFR5cGUoci5BdHRyaWJ1dGUuQk9PTEVBTiksdC5hZGQoInRhYlNldEF1dG9TZWxlY3RUYWIiLCEwKS5zZXRUeXBlKHIuQXR0cmlidXRlLkJPT0xFQU4pLHQuYWRkKCJ0YWJTZXRDbGFzc05hbWVUYWJTdHJpcCIsdm9pZCAwKS5zZXRUeXBlKHIuQXR0cmlidXRlLlNUUklORyksdC5hZGQoInRhYlNldENsYXNzTmFtZUhlYWRlciIsdm9pZCAwKS5zZXRUeXBlKHIuQXR0cmlidXRlLlNUUklORyksdC5hZGQoInRhYlNldEVuYWJsZVRhYlN0cmlwIiwhMCkuc2V0VHlwZShyLkF0dHJpYnV0ZS5CT09MRUFOKSx0LmFkZCgidGFiU2V0SGVhZGVySGVpZ2h0IiwwKS5zZXRUeXBlKHIuQXR0cmlidXRlLk5VTUJFUiksdC5hZGQoInRhYlNldFRhYlN0cmlwSGVpZ2h0IiwwKS5zZXRUeXBlKHIuQXR0cmlidXRlLk5VTUJFUiksdC5hZGQoInRhYlNldE1hcmdpbkluc2V0cyIse3RvcDowLHJpZ2h0OjAsYm90dG9tOjAsbGVmdDowfSkuc2V0VHlwZSgiSUluc2V0cyIpLHQuYWRkKCJ0YWJTZXRCb3JkZXJJbnNldHMiLHt0b3A6MCxyaWdodDowLGJvdHRvbTowLGxlZnQ6MH0pLnNldFR5cGUoIklJbnNldHMiKSx0LmFkZCgidGFiU2V0VGFiTG9jYXRpb24iLCJ0b3AiKS5zZXRUeXBlKCJJVGFiTG9jYXRpb24iKSx0LmFkZCgidGFiU2V0TWluV2lkdGgiLDApLnNldFR5cGUoci5BdHRyaWJ1dGUuTlVNQkVSKSx0LmFkZCgidGFiU2V0TWluSGVpZ2h0IiwwKS5zZXRUeXBlKHIuQXR0cmlidXRlLk5VTUJFUiksdC5hZGQoImJvcmRlclNpemUiLDIwMCkuc2V0VHlwZShyLkF0dHJpYnV0ZS5OVU1CRVIpLHQuYWRkKCJib3JkZXJNaW5TaXplIiwwKS5zZXRUeXBlKHIuQXR0cmlidXRlLk5VTUJFUiksdC5hZGQoImJvcmRlckJhclNpemUiLDApLnNldFR5cGUoci5BdHRyaWJ1dGUuTlVNQkVSKSx0LmFkZCgiYm9yZGVyRW5hYmxlRHJvcCIsITApLnNldFR5cGUoci5BdHRyaWJ1dGUuQk9PTEVBTiksdC5hZGQoImJvcmRlckF1dG9TZWxlY3RUYWJXaGVuT3BlbiIsITApLnNldFR5cGUoci5BdHRyaWJ1dGUuQk9PTEVBTiksdC5hZGQoImJvcmRlckF1dG9TZWxlY3RUYWJXaGVuQ2xvc2VkIiwhMSkuc2V0VHlwZShyLkF0dHJpYnV0ZS5CT09MRUFOKSx0LmFkZCgiYm9yZGVyQ2xhc3NOYW1lIix2b2lkIDApLnNldFR5cGUoci5BdHRyaWJ1dGUuU1RSSU5HKSx0LmFkZCgiYm9yZGVyRW5hYmxlQXV0b0hpZGUiLCExKS5zZXRUeXBlKHIuQXR0cmlidXRlLkJPT0xFQU4pLHR9Y29uc3RydWN0b3IoKXt0aGlzLl9ib3JkZXJSZWN0cz17aW5uZXI6YS5SZWN0LmVtcHR5KCksb3V0ZXI6YS5SZWN0LmVtcHR5KCl9LHRoaXMuX2F0dHJpYnV0ZXM9e30sdGhpcy5faWRNYXA9e30sdGhpcy5fYm9yZGVycz1uZXcgYy5Cb3JkZXJTZXQodGhpcyksdGhpcy5fcG9pbnRlckZpbmU9ITAsdGhpcy5fc2hvd0hpZGRlbkJvcmRlcj1zLkRvY2tMb2NhdGlvbi5DRU5URVJ9X3NldENoYW5nZUxpc3RlbmVyKHQpe3RoaXMuX2NoYW5nZUxpc3RlbmVyPXR9Z2V0QWN0aXZlVGFic2V0KCl7cmV0dXJuIHRoaXMuX2FjdGl2ZVRhYlNldCYmdGhpcy5nZXROb2RlQnlJZCh0aGlzLl9hY3RpdmVUYWJTZXQuZ2V0SWQoKSk/dGhpcy5fYWN0aXZlVGFiU2V0OnZvaWQgMH1fZ2V0U2hvd0hpZGRlbkJvcmRlcigpe3JldHVybiB0aGlzLl9zaG93SGlkZGVuQm9yZGVyfV9zZXRTaG93SGlkZGVuQm9yZGVyKHQpe3RoaXMuX3Nob3dIaWRkZW5Cb3JkZXI9dH1fc2V0QWN0aXZlVGFic2V0KHQpe3RoaXMuX2FjdGl2ZVRhYlNldD10fWdldE1heGltaXplZFRhYnNldCgpe3JldHVybiB0aGlzLl9tYXhpbWl6ZWRUYWJTZXR9X3NldE1heGltaXplZFRhYnNldCh0KXt0aGlzLl9tYXhpbWl6ZWRUYWJTZXQ9dH1nZXRSb290KCl7cmV0dXJuIHRoaXMuX3Jvb3R9aXNSb290T3JpZW50YXRpb25WZXJ0aWNhbCgpe3JldHVybiB0aGlzLl9hdHRyaWJ1dGVzLnJvb3RPcmllbnRhdGlvblZlcnRpY2FsfWlzVXNlVmlzaWJpbGl0eSgpe3JldHVybiB0aGlzLl9hdHRyaWJ1dGVzLmVuYWJsZVVzZVZpc2liaWxpdHl9aXNFbmFibGVSb3RhdGVCb3JkZXJJY29ucygpe3JldHVybiB0aGlzLl9hdHRyaWJ1dGVzLmVuYWJsZVJvdGF0ZUJvcmRlckljb25zfWdldEJvcmRlclNldCgpe3JldHVybiB0aGlzLl9ib3JkZXJzfV9nZXRPdXRlcklubmVyUmVjdHMoKXtyZXR1cm4gdGhpcy5fYm9yZGVyUmVjdHN9X2dldFBvaW50ZXJGaW5lKCl7cmV0dXJuIHRoaXMuX3BvaW50ZXJGaW5lfV9zZXRQb2ludGVyRmluZSh0KXt0aGlzLl9wb2ludGVyRmluZT10fXZpc2l0Tm9kZXModCl7dGhpcy5fYm9yZGVycy5fZm9yRWFjaE5vZGUodCksdGhpcy5fcm9vdC5fZm9yRWFjaE5vZGUodCwwKX1nZXROb2RlQnlJZCh0KXtyZXR1cm4gdGhpcy5faWRNYXBbdF19Z2V0Rmlyc3RUYWJTZXQodD10aGlzLl9yb290KXtsZXQgZT10LmdldENoaWxkcmVuKClbMF07cmV0dXJuIGUgaW5zdGFuY2VvZiBmLlRhYlNldE5vZGU/ZTp0aGlzLmdldEZpcnN0VGFiU2V0KGUpfWRvQWN0aW9uKHQpe2xldCBlO3N3aXRjaCh0LnR5cGUpe2Nhc2UgbC5BY3Rpb25zLkFERF9OT0RFOntsZXQgaT1uZXcgaC5UYWJOb2RlKHRoaXMsdC5kYXRhLmpzb24sITApLHI9dGhpcy5faWRNYXBbdC5kYXRhLnRvTm9kZV07KHIgaW5zdGFuY2VvZiBmLlRhYlNldE5vZGV8fHIgaW5zdGFuY2"
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     "e2xldCBpPXRoaXMuX2NoaWxkcmVuW3RdO2kuX2xheW91dCh0aGlzLl9jb250ZW50UmVjdCxlKSxpLl9zZXRWaXNpYmxlKHQ9PT10aGlzLmdldFNlbGVjdGVkKCkpLHRoaXMuX2RyYXdDaGlsZHJlbi5wdXNoKGkpfWlmKC0xPT09dGhpcy5nZXRTZWxlY3RlZCgpKXJldHVybiB0O3tsZXQgdD1uZXcgdS5TcGxpdHRlck5vZGUodGhpcy5fbW9kZWwpO3JldHVybiB0Ll9zZXRQYXJlbnQodGhpcyksdC5fc2V0UmVjdChuLnN0YXJ0KSx0aGlzLl9kcmF3Q2hpbGRyZW4ucHVzaCh0KSxyLmVuZH19X3JlbW92ZSh0KXtsZXQgZT10aGlzLl9yZW1vdmVDaGlsZCh0KTstMSE9PXRoaXMuZ2V0U2VsZWN0ZWQoKSYmKDAsZi5hZGp1c3RTZWxlY3RlZEluZGV4KSh0aGlzLGUpfWNhbkRyb3AodCxlLGkpe2xldCByO2lmKHQuZ2V0VHlwZSgpIT09aC5UYWJOb2RlLlRZUEUpcmV0dXJuO2xldCBuPXMuRG9ja0xvY2F0aW9uLkNFTlRFUjtpZih0aGlzLl90YWJIZWFkZXJSZWN0LmNvbnRhaW5zKGUsaSkpe2lmKHRoaXMuX2xvY2F0aW9uLl9vcmllbnRhdGlvbj09PWEuT3JpZW50YXRpb24uVkVSVCl7aWYodGhpcy5fY2hpbGRyZW4ubGVuZ3RoPjApe2xldCB0PXRoaXMuX2NoaWxkcmVuWzBdLGk9dC5nZXRUYWJSZWN0KCkscz1pLnksYT1pLmhlaWdodCxjPXRoaXMuX3RhYkhlYWRlclJlY3QueCx1PTA7Zm9yKGxldCBoPTA7aDx0aGlzLl9jaGlsZHJlbi5sZW5ndGg7aCsrKXtpZih1PShpPSh0PXRoaXMuX2NoaWxkcmVuW2hdKS5nZXRUYWJSZWN0KCkpLngraS53aWR0aC8yLGU+PWMmJmU8dSl7bGV0IHQ9bmV3IGwuUmVjdChpLngtMixzLDMsYSk7cj1uZXcgby5Ecm9wSW5mbyh0aGlzLHQsbixoLGQuQ0xBU1NFUy5GTEVYTEFZT1VUX19PVVRMSU5FX1JFQ1QpO2JyZWFrfWM9dX1pZihudWxsPT1yKXtsZXQgdD1uZXcgbC5SZWN0KGkuZ2V0UmlnaHQoKS0yLHMsMyxhKTtyPW5ldyBvLkRyb3BJbmZvKHRoaXMsdCxuLHRoaXMuX2NoaWxkcmVuLmxlbmd0aCxkLkNMQVNTRVMuRkxFWExBWU9VVF9fT1VUTElORV9SRUNUKX19ZWxzZXtsZXQgdD1uZXcgbC5SZWN0KHRoaXMuX3RhYkhlYWRlclJlY3QueCsxLHRoaXMuX3RhYkhlYWRlclJlY3QueSsyLDMsMTgpO3I9bmV3IG8uRHJvcEluZm8odGhpcyx0LG4sMCxkLkNMQVNTRVMuRkxFWExBWU9VVF9fT1VUTElORV9SRUNUKX19ZWxzZSBpZih0aGlzLl9jaGlsZHJlbi5sZW5ndGg+MCl7bGV0IHQ9dGhpcy5fY2hpbGRyZW5bMF0sZT10LmdldFRhYlJlY3QoKSxzPWUueCxhPWUud2lkdGgsYz10aGlzLl90YWJIZWFkZXJSZWN0LnksdT0wO2ZvcihsZXQgaD0wO2g8dGhpcy5fY2hpbGRyZW4ubGVuZ3RoO2grKyl7aWYodT0oZT0odD10aGlzLl9jaGlsZHJlbltoXSkuZ2V0VGFiUmVjdCgpKS55K2UuaGVpZ2h0LzIsaT49YyYmaTx1KXtsZXQgdD1uZXcgbC5SZWN0KHMsZS55LTIsYSwzKTtyPW5ldyBvLkRyb3BJbmZvKHRoaXMsdCxuLGgsZC5DTEFTU0VTLkZMRVhMQVlPVVRfX09VVExJTkVfUkVDVCk7YnJlYWt9Yz11fWlmKG51bGw9PXIpe2xldCB0PW5ldyBsLlJlY3QocyxlLmdldEJvdHRvbSgpLTIsYSwzKTtyPW5ldyBvLkRyb3BJbmZvKHRoaXMsdCxuLHRoaXMuX2NoaWxkcmVuLmxlbmd0aCxkLkNMQVNTRVMuRkxFWExBWU9VVF9fT1VUTElORV9SRUNUKX19ZWxzZXtsZXQgdD1uZXcgbC5SZWN0KHRoaXMuX3RhYkhlYWRlclJlY3QueCsyLHRoaXMuX3RhYkhlYWRlclJlY3QueSsxLDE4LDMpO3I9bmV3IG8uRHJvcEluZm8odGhpcyx0LG4sMCxkLkNMQVNTRVMuRkxFWExBWU9VVF9fT1VUTElORV9SRUNUKX1pZighdC5fY2FuRG9ja0ludG8odCxyKSlyZXR1cm59ZWxzZSBpZigtMSE9PXRoaXMuZ2V0U2VsZWN0ZWQoKSYmdGhpcy5fY29udGVudFJlY3QuY29udGFpbnMoZSxpKSl7bGV0IGU9dGhpcy5fY29udGVudFJlY3Q7aWYocj1uZXcgby5Ecm9wSW5mbyh0aGlzLGUsbiwtMSxkLkNMQVNTRVMuRkxFWExBWU9VVF9fT1VUTElORV9SRUNUKSwhdC5fY2FuRG9ja0ludG8odCxyKSlyZXR1cm59cmV0dXJuIHJ9ZHJvcCh0LGUsaSxyKXtsZXQgbj0wLHM9dC5nZXRQYXJlbnQoKTt2b2lkIDAhPT1zJiYobj1zLl9yZW1vdmVDaGlsZCh0KSxzIT09dGhpcyYmcyBpbnN0YW5jZW9mIHAmJnMuZ2V0U2VsZWN0ZWQoKT09PW4/cy5fc2V0U2VsZWN0ZWQoLTEpOigwLGYuYWRqdXN0U2VsZWN0ZWRJbmRleCkocyxuKSksdC5nZXRUeXBlKCk9PT1oLlRhYk5vZGUuVFlQRSYmcz09PXRoaXMmJm48aSYmaT4wJiZpLS07bGV0IG89aTstMT09PW8mJihvPXRoaXMuX2NoaWxkcmVuLmxlbmd0aCksdC5nZXRUeXBlKCk9PT1oLlRhYk5vZGUuVFlQRSYmdGhpcy5fYWRkQ2hpbGQodCxvKSwocnx8ITEhPT1yJiZ0aGlzLmlzQXV0b1NlbGVjdFRhYigpKSYmdGhpcy5fc2V0U2VsZWN0ZWQobyksdGhpcy5fbW9kZWwuX3RpZHkoKX10b0pzb24oKXtsZXQgdD17fTtyZXR1cm4gcC5fYXR0cmlidXRlRGVmaW5pdGlvbnMudG9Kc29uKHQsdGhpcy5fYXR0cmlidXRlcyksdC5sb2NhdGlvbj10aGlzLl9sb2NhdGlvbi5nZXROYW1lKCksdC5jaGlsZHJlbj10aGlzLl9jaGlsZHJlbi5tYXAodD0+dC50b0pzb24oKSksdH1fZ2V0U3BsaXR0ZXJCb3VuZHModCxlPSExKXtsZXQgaT1bMCwwXSxyPWU/dGhpcy5nZXRNaW5TaXplKCk6MCxuPXRoaXMuX21vZGVsLl9nZXRPdXRlcklubmVyUmVjdHMoKS5vdXRlcixvPXRoaXMuX21vZGVsLl9nZXRPdXRlcklubmVyUmVjdHMoKS5pbm5lcixhPXRoaXMuX21vZGVsLmdldFJvb3QoKTtyZXR1cm4gdGhpcy5fbG9jYXRpb249PT1zLkRvY2tMb2NhdGlvbi5UT1A/KGlbMF09bi55K3IsaVsxXT1NYXRoLm1heChpWzBdLG8uZ2V0Qm90dG9tKCktdC5nZXRIZWlnaHQoKS1hLmdldE1pbkhlaWdodCgpKSk6dGhpcy5fbG9jYXRpb249PT1zLkRvY2tMb2NhdGlvbi5MRUZUPyhpWzBdPW4ueCtyLGlbMV09TWF0aC5tYXgoaVswXSxvLmdldFJpZ2h0KCktdC5nZXRXaWR0aCgpLWEuZ2V0TWluV2lkdGgoKSkpOnRoaXMuX2xvY2F0aW9uPT09cy5Eb2NrTG9jYXRpb24uQk9UVE9NPyhpWzFdPW4uZ2V0Qm90dG9tKCktdC5nZXRIZWlnaHQoKS1yLGlbMF09TWF0aC5taW4oaVsxXSxvLnkrYS5nZXRNaW5IZWlnaHQoKSkpOnRoaXMuX2xvY2F0aW9uPT09cy5Eb2NrTG9jYXRpb24uUklHSFQmJihpWzFdPW4uZ2V0UmlnaHQoKS10LmdldFdpZHRoKCktcixpWzBdPU1hdGgubWluKGlbMV0sby54K2EuZ2V0TWluV2lkdGgoKSkpLGl9X2NhbGN1bGF0ZVNwbGl0KHQsZSl7bGV0IGk9dGhpcy5fZ2V0U3BsaXR0ZXJCb3VuZHModCk7cmV0dXJuIHRoaXMuX2xvY2F0aW9uPT09cy5Eb2NrTG9jYXRpb24uQk9UVE9NfHx0aGlzLl9sb2NhdGlvbj09PXMuRG9ja0xvY2F0aW9uLlJJR0hUP01hdGgubWF4KDAsaVsxXS1lKTpNYXRoLm1heCgwLGUtaVswXSl9X2dldEF0dHJpYnV0ZURlZmluaXRpb25zKCl7cmV0dXJuIHAuX2F0dHJpYnV0ZURlZmluaXRpb25zfXN0YXRpYyBnZXRBdHRyaWJ1dGVEZWZpbml0aW9ucygpe3JldHVybiBwLl9hdHRyaWJ1dGVEZWZpbml0aW9uc319ZS5Cb3JkZXJOb2RlPXAscC5UWVBFPSJib3JkZXIiLHAuX2F0dHJpYnV0ZURlZmluaXRpb25zPXAuX2NyZWF0ZUF0dHJpYnV0ZURlZmluaXRpb25zKCl9fV0pOw==",    //
     643580, //
     "application/javascript", //
     "/_next/static/chunks/862-30c9c157fc05ff0a.js/", //
     
};
}
