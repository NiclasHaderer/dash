
#pragma once
#include "files.hpp"
namespace duckdb {
const File FILE_NEXT_STATIC_CHUNKS_983_05E5B622D4362471_JS = {
     // Content
     ""
     ""
     "ZW50KXJldHVybjtsZXQgYT1uZXcgVSxuPW5ldyBTZXQ7Y29uc29sZS5sb2coImlucHV0TWFuYWdlciB1c2VFZmZlY3QiLGEpO2xldCBpPW5ldyByLkEoe2hvbGRlcjplLmlkLHBsYWNlaG9sZGVyOiJTdGFydCB3cml0aW5nIGhlcmUuLiIscmVhZE9ubHk6ITEsb25SZWFkeTooKT0+e25ldyhsKCkpKHtlZGl0b3I6aX0pLG5ldyhjKCkpKGkpLG8oZS5pZCx7ZWRpdG9yOmksbWFuYWdlcjphfSksZS5vblJlYWR5JiZlLm9uUmVhZHkoaSl9LG9uQ2hhbmdlOih0LGEpPT57dmFyIG47bGV0IHI9QXJyYXkuaXNBcnJheShhKT9hOlthXSxzPSgwLEwuVSkoKS5nZXRFZGl0b3IoZS5pZCk7cyYmcy5tYW5hZ2VyLm9uQmxvY2tDaGFuZ2VFdmVudChyKSxudWxsPT09KG49ZS5vbkJsb2NrQ2hhbmdlRXZlbnQpfHx2b2lkIDA9PT1ufHxuLmNhbGwoZSxyKSxpLnNhdmUoKS50aGVuKHQ9Pnt2YXIgYTtudWxsPT09KGE9ZS5vblNhdmVkKXx8dm9pZCAwPT09YXx8YS5jYWxsKGUsdCl9KX0sdG9vbHM6KHQ9ZT0+bi5oYXMoZSk/YToobi5hZGQoZSksbnVsbCkse1t1LlI5XTp7Y2xhc3M6dS5BeSxpbmxpbmVUb29sYmFyOiEwLGNvbmZpZzp7cGxhY2Vob2xkZXI6IkFkZCBhIG5ldyByZWxhdGlvbiIsZ2V0SW5wdXRNYW5hZ2VyOnR9LHNob3J0Y3V0OiJDTUQrU0hJRlQrUiJ9LFtWXTp7Y2xhc3M6TSxpbmxpbmVUb29sYmFyOiEwLGNvbmZpZzp7cGxhY2Vob2xkZXI6IkFkZCBhIG5ldyByZWxhdGlvbiIsZ2V0SW5wdXRNYW5hZ2VyOnR9fSxbSF06e2NsYXNzOl8saW5saW5lVG9vbGJhcjohMCxjb25maWc6e2dldElucHV0TWFuYWdlcjp0fX0saGVhZGVyOntjbGFzczp3LkEsaW5saW5lVG9vbGJhcjpbIm1hcmtlciIsImxpbmsiXSxjb25maWc6e3BsYWNlaG9sZGVyOiJIZWFkZXIifSxzaG9ydGN1dDoiQ01EK1NISUZUK0gifSxsaXN0OntjbGFzczpmLkEsaW5saW5lVG9vbGJhcjohMCxzaG9ydGN1dDoiQ01EK1NISUZUK0wifSx3YXJuaW5nOmguQSxtYXJrZXI6e2NsYXNzOnYuQSxzaG9ydGN1dDoiQ01EK1NISUZUK00ifSxkZWxpbWl0ZXI6cCxpbmxpbmVDb2RlOntjbGFzczpTLkEsc2hvcnRjdXQ6IkNNRCtTSElGVCtDIn0sbGlua1Rvb2w6bS5BLGVtYmVkOmcuQSx0YWJsZTp7Y2xhc3M6SS5BLGlubGluZVRvb2xiYXI6ITAsc2hvcnRjdXQ6IkNNRCtBTFQrVCJ9fSksZGF0YTplLmluaXRpYWxEYXRhfSk7cmV0dXJuIHMuY3VycmVudD1pLCgpPT57cy5jdXJyZW50JiZzLmN1cnJlbnQuZGVzdHJveSYmKHMuY3VycmVudC5kZXN0cm95KCksZChlLmlkKSl9fSxbdF0pLCgwLG4uanN4KSgiZGl2Iix7aWQ6ZS5pZCxjbGFzc05hbWU6InctZnVsbCBtaW4taC1bNDAwcHhdIHAtMiJ9KX19fV0pOw==",    //
     18164, //
     "application/javascript", //
     "/_next/static/chunks/983.05e5b622d4362471.js/", //
     
};
}
