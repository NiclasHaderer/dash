
#pragma once
#include "files.hpp"
namespace duckdb {
const File FILE_NEXT_STATIC_CHUNKS_764_903EB5E7F2B2F294_JS = {
     // Content
     ""use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[764],{33554:function(t,e,i){i.d(e,{Z:function(){return r}});let r=(0,i(43563).Z)("RefreshCcw",[["path",{d:"M21 12a9 9 0 0 0-9-9 9.75 9.75 0 0 0-6.74 2.74L3 8",key:"14sxne"}],["path",{d:"M3 3v5h5",key:"1xhq8a"}],["path",{d:"M3 12a9 9 0 0 0 9 9 9.75 9.75 0 0 0 6.74-2.74L21 16",key:"1hlbsb"}],["path",{d:"M16 16h5v5",key:"ccwih5"}]])},94192:function(t,e,i){var r=i(67834);i.o(r,"usePathname")&&i.d(e,{usePathname:function(){return r.usePathname}}),i.o(r,"useRouter")&&i.d(e,{useRouter:function(){return r.useRouter}})},22412:function(t,e,i){let r,n,s,o,a,l,u,c,d,h,p,y,f,b,_,m,g,v;i.d(e,{ak:function(){return s9},kw:function(){return sX},sq:function(){return oa},Dn:function(){return oy}});var I,w,S,T,A,E,B,D,O,N,R,F,L,U,M,x,C,P,k,V,j,z,q,G,Y,W,$,H,K,Q,J,Z,X,tt,te,ti,tr,tn,ts,to,ta,tl,tu,tc,td,th,tp,ty,tf,tb,t_,tm,tg,tv=i(60302);(I=ts||(ts={}))[I.NONE=0]="NONE",I[I.Null=1]="Null",I[I.Int=2]="Int",I[I.Float=3]="Float",I[I.Binary=4]="Binary",I[I.Utf8=5]="Utf8",I[I.Bool=6]="Bool",I[I.Decimal=7]="Decimal",I[I.Date=8]="Date",I[I.Time=9]="Time",I[I.Timestamp=10]="Timestamp",I[I.Interval=11]="Interval",I[I.List=12]="List",I[I.Struct=13]="Struct",I[I.Union=14]="Union",I[I.FixedSizeBinary=15]="FixedSizeBinary",I[I.FixedSizeList=16]="FixedSizeList",I[I.Map=17]="Map",I[I.Duration=18]="Duration",I[I.LargeBinary=19]="LargeBinary",I[I.LargeUtf8=20]="LargeUtf8",I[I.Dictionary=-1]="Dictionary",I[I.Int8=-2]="Int8",I[I.Int16=-3]="Int16",I[I.Int32=-4]="Int32",I[I.Int64=-5]="Int64",I[I.Uint8=-6]="Uint8",I[I.Uint16=-7]="Uint16",I[I.Uint32=-8]="Uint32",I[I.Uint64=-9]="Uint64",I[I.Float16=-10]="Float16",I[I.Float32=-11]="Float32",I[I.Float64=-12]="Float64",I[I.DateDay=-13]="DateDay",I[I.DateMillisecond=-14]="DateMillisecond",I[I.TimestampSecond=-15]="TimestampSecond",I[I.TimestampMillisecond=-16]="TimestampMillisecond",I[I.TimestampMicrosecond=-17]="TimestampMicrosecond",I[I.TimestampNanosecond=-18]="TimestampNanosecond",I[I.TimeSecond=-19]="TimeSecond",I[I.TimeMillisecond=-20]="TimeMillisecond",I[I.TimeMicrosecond=-21]="TimeMicrosecond",I[I.TimeNanosecond=-22]="TimeNanosecond",I[I.DenseUnion=-23]="DenseUnion",I[I.SparseUnion=-24]="SparseUnion",I[I.IntervalDayTime=-25]="IntervalDayTime",I[I.IntervalYearMonth=-26]="IntervalYearMonth",I[I.DurationSecond=-27]="DurationSecond",I[I.DurationMillisecond=-28]="DurationMillisecond",I[I.DurationMicrosecond=-29]="DurationMicrosecond",I[I.DurationNanosecond=-30]="DurationNanosecond",(w=to||(to={}))[w.OFFSET=0]="OFFSET",w[w.DATA=1]="DATA",w[w.VALIDITY=2]="VALIDITY",w[w.TYPE=3]="TYPE";let tI=void 0;function tw(t){if(null===t)return"null";if(t===tI)return"undefined";switch(typeof t){case"number":case"bigint":return`${t}`;case"string":return`"${t}"`}return"function"==typeof t[Symbol.toPrimitive]?t[Symbol.toPrimitive]("string"):ArrayBuffer.isView(t)?t instanceof BigInt64Array||t instanceof BigUint64Array?`[${[...t].map(t=>tw(t))}]`:`[${t}]`:ArrayBuffer.isView(t)?`[${t}]`:JSON.stringify(t,(t,e)=>"bigint"==typeof e?`${e}`:e)}let tS=new TextDecoder("utf-8"),tT=t=>tS.decode(t),tA=new TextEncoder,tE=t=>tA.encode(t),tB=t=>"number"==typeof t,tD=t=>"boolean"==typeof t,tO=t=>"function"==typeof t,tN=t=>null!=t&&Object(t)===t,tR=t=>tN(t)&&tO(t.then),tF=t=>tN(t)&&tO(t[Symbol.iterator]),tL=t=>tN(t)&&tO(t[Symbol.asyncIterator]),tU=t=>tN(t)&&tN(t.schema),tM=t=>tN(t)&&"done"in t&&"value"in t,tx=t=>tN(t)&&tO(t.stat)&&tB(t.fd),tC=t=>tN(t)&&tV(t.body),tP=t=>"_getDOMStream"in t&&"_getNodeStream"in t,tk=t=>tN(t)&&tO(t.abort)&&tO(t.getWriter)&&!tP(t),tV=t=>tN(t)&&tO(t.cancel)&&tO(t.getReader)&&!tP(t),tj=t=>tN(t)&&tO(t.end)&&tO(t.write)&&tD(t.writable)&&!tP(t),tz=t=>tN(t)&&tO(t.read)&&tO(t.pipe)&&tD(t.readable)&&!tP(t),tq=t=>tN(t)&&tO(t.clear)&&tO(t.bytes)&&tO(t.position)&&tO(t.setPosition)&&tO(t.capacity)&&tO(t.getBufferIdentifier)&&tO(t.createLong),tG="undefined"!=typeof SharedArrayBuffer?SharedArrayBuffer:ArrayBuffer;function tY(t,e,i=0,r=e.byteLength){let n=t.byteLength,s=new Uint8Array(t.buffer,t.byteOffset,n),o=new Uint8Array(e.buffer,e.byteOffset,Math.min(r,n));return s.set(o,i),t}function tW(t,e){let i,r,n;let s=function(t){let e,i,r,n;let s=t[0]?[t[0]]:[];for(let o,a,l=0,u=0,c=t.length;++l<c;){if(o=s[u],a=t[l],!o||!a||o.buffer!==a.buffer||a.byteOffset<o.byteOffset||({byteOffset:e,byteLength:r}=o,{byteOffset:i,byteLength:n}=a,e+r<i||i+n<e)){a&&(s[++u]=a);continue}s[u]=new Uint8Array(o.buffer,e,i-e+n)}return s}(t),o=s.reduce((t,e)=>t+e.byteLength,0),a=0,l=-1,u=Math.min(e||Number.POSITIVE_INFINITY,o);for(let t=s.length;++l<t;){if(r=(i=s[l]).subarray(0,Math.min(i.length,u-a)),u<=a+r.length){r.length<i.length?s[l]=i.subarray(r.length):r.length===i.length&&l++,n?tY(n,r,a):n=r;break}tY(n||(n=new Uint8Array(u)),r,a),a+=r.length}return[n||new Uint8Array(0),s.slice(l),o-(n?n.byteLength:0)]}function t$(t,e){let i=tM(e)?e.value:e;return i instanceof t?t===Uint8Array?new t(i.buffer,i.byteOffset,i.byteLength):i:i?("string"==typeof i&&(i=tE(i)),i instanceof ArrayBuffer||i instanceof tG)?new t(i):tq(i)?t$(t,i.bytes()):ArrayBuffer.isView(i)?i.byteLength<=0?new t(0):new t(i.buffer,i.byteOffset,i.byteLength/t.BYTES_PER_ELEMENT):t.from(i):new t(0)}let tH=t=>t$(Int32Array,t),tK=t=>t$(BigInt64Array,t),tQ=t=>t$(Uint8Array,t),tJ=t=>(t.next(),t),tZ=t=>(function*(t,e){let i=function*(t){yield t},r="string"==typeof e?i(e):ArrayBuffer.isView(e)?i(e):e instanceof ArrayBuffer?i(e):e instanceof tG?i(e):tF(e)?e:i(e);return yield*tJ(function*(e){let i=null;do i=e.next((yield t$(t,i)));while(!i.done)}(r[Symbol.iterator]())),new t})(Uint8Array,t),tX=t=>(function t(e,i){return(0,tv.FC)(this,arguments,function*(){if(tR(i))return yield(0,tv.qq)((yield(0,tv.qq)((yield*(0,tv.V2)((0,tv.KL)(t(e,(yield(0,tv.qq)(i)))))))));let r=function(t){return(0,tv.FC)(this,arguments,function*(){yield yield(0,tv.qq)((yield(0,tv.qq)(t)))})},n="string"==typeof i?r(i):ArrayBuffer.isView(i)?r(i):i instanceof ArrayBuffer?r(i):i instanceof tG?r(i):tF(i)?function(t){return(0,tv.FC)(this,arguments,function*(){yield(0,tv.qq)((yield*(0,tv.V2)((0,tv.KL)(tJ(function*(t){let e=null;do e=t.next((yield null==e?void 0:e.value));while(!e.done)}(t[Symbol.iterator]()))))))})}(i):tL(i)?i:r(i);return yield(0,tv.qq)((yield*(0,tv.V2)((0,tv.KL)(tJ(function(t){return(0,tv.FC)(this,arguments,function*(){let i=null;do i=yield(0,tv.qq)(t.next((yield yield(0,tv.qq)(t$(e,i)))));while(!i.done)})}(n[Symbol.asyncIterator]())))))),yield(0,tv.qq)(new e)})})(Uint8Array,t);function t0(t,e,i){if(0!==t){i=i.slice(0,e);for(let e=-1,r=i.length;++e<r;)i[e]+=t}return i.subarray(0,e)}function t1(t){if("bigint"==typeof t&&(t<Number.MIN_SAFE_INTEGER||t>Number.MAX_SAFE_INTEGER))throw TypeError(`${t} is not safe to convert to a number.`);return Number(t)}function t2(t,e){return t1(t/e)+t1(t%e)/t1(e)}let t3=Symbol.for("isArrowBigNum");function t4(t,...e){return 0===e.length?Object.setPrototypeOf(t$(this.TypedArray,t),this.constructor.prototype):Object.setPrototypeOf(new this.TypedArray(t,...e),this.constructor.prototype)}function t6(...t){return t4.apply(this,t)}function t8(...t){return t4.apply(this,t)}function t5(...t){return t4.apply(this,t)}t4.prototype[t3]=!0,t4.prototype.toJSON=function(){return`"${et(this)}"`},t4.prototype.valueOf=function(t){return t9(this,t)},t4.prototype.toString=function(){return et(this)},t4.prototype[Symbol.toPrimitive]=function(t="default"){switch(t){case"number":return t9(this);case"string":break;case"default":return 8===this.byteLength?new this.BigIntArray(this.buffer,this.byteOffset,1)[0]:et(this)}return et(this)},Object.setPrototypeOf(t6.prototype,Object.create(Int32Array.prototype)),Object.setPrototypeOf(t8.prototype,Object.create(Uint32Array.prototype)),Object.setPrototypeOf(t5.prototype,Object.create(Uint32Array.prototype)),Object.assign(t6.prototype,t4.prototype,{constructor:t6,signed:!0,TypedArray:Int32Array,BigIntArray:BigInt64Array}),Object.assign(t8.prototype,t4.prototype,{constructor:t8,signed:!1,TypedArray:Uint32Array,BigIntArray:BigUint64Array}),Object.assign(t5.prototype,t4.prototype,{constructor:t5,signed:!0,TypedArray:Uint32Array,BigIntArray:BigUint64Array});let t7=BigInt(4294967296)*BigInt(4294967296)-BigInt(1);function t9(t,e){let{buffer:i,byteOffset:r,byteLength:n,signed:s}=t,o=new BigUint64Array(i,r,n/8),a=s&&o.at(-1)&BigInt(1)<<BigInt(63),l=BigInt(0),u=0;if(a){for(let t of o)l|=(t^t7)*(BigInt(1)<<BigInt(64*u++));l*=BigInt(-1),l-=BigInt(1)}else for(let t of o)l|=t*(BigInt(1)<<BigInt(64*u++));if("number"==typeof e){let t=BigInt(Math.pow(10,e)),i=l/t,r=l%t;return t1(i)+t1(r)/t1(t)}return t1(l)}function et(t){if(8===t.byteLength){let e=new t.BigIntArray(t.buffer,t.byteOffset,1);return`${e[0]}`}if(!t.signed)return ee(t);let e=new Uint16Array(t.buffer,t.byteOffset,t.byteLength/2);if(new Int16Array([e.at(-1)])[0]>=0)return ee(t);e=e.slice();let i=1;for(let t=0;t<e.length;t++){let r=e[t],n=~r+i;e[t]=n,i&=0===r?1:0}let r=ee(e);return`-${r}`}function ee(t){let e="",i=new Uint32Array(2),r=new Uint16Array(t.buffer,t.byteOffset,t.byteLength/2),n=new Uint32Array((r=new Uint16Array(r).reverse()).buffer),s=-1,o=r.length-1;do{for(i[0]=r[s=0];s<o;)r[s++]=i[1]=i[0]/10,i[0]=(i[0]-10*i[1]<<16)+r[s];r[s]=i[1]=i[0]/10,i[0]=i[0]-10*i[1],e=`${i[0]}${e}`}while(n[0]||n[1]||n[2]||n[3]);return null!=e?e:"0"}class ei{static new(t,e){switch(e){case!0:return new t6(t);case!1:return new t8(t)}switch(t.constructor){case Int8Array:case Int16Array:case Int32Array:case BigInt64Array:return new t6(t)}return 16===t.byteLength?new t5(t):new t8(t)}static signed(t){return new t6(t)}static unsigned(t){return new t8(t)}static decimal(t){return new t5(t)}constructor(t,e){return ei.new(t,e)}}(S=ta||(ta={}))[S.HALF=0]="HALF",S[S.SINGLE=1]="SINGLE",S[S.DOUBLE=2]="DOUBLE",(T=tl||(tl={}))[T.SECOND=0]="SECOND",T[T.MILLISECOND=1]="MILLISECOND",T[T.MICROSECOND=2]="MICROSECOND",T[T.NANOSECOND=3]="NANOSECOND",(A=tu||(tu={}))[A.DAY=0]="DAY",A[A.MILLISECOND=1]="MILLISECOND",(E=tc||(tc={}))[E.YEAR_MONTH=0]="YEAR_MONTH",E[E.DAY_TIME=1]="DAY_TIME",E[E.MONTH_DAY_NANO=2]="MONTH_DAY_NANO",(B=td||(td={}))[B.Sparse=0]="Sparse",B[B.Dense=1]="Dense";class er{static isNull(t){return(null==t?void 0:t.typeId)===ts.Null}static isInt(t){return(null==t?void 0:t.typeId)===ts.Int}static isFloat(t){return(null==t?void 0:t.typeId)===ts.Float}static isBinary(t){return(null==t?void 0:t.typeId)===ts.Binary}static isLargeBinary(t){return(null==t?void 0:t.typeId)===ts.LargeBinary}static isUtf8(t){return(null==t?void 0:t.typeId)===ts.Utf8}static isLargeUtf8(t){return(null==t?void 0:t.typeId)===ts.LargeUtf8}static isBool(t){return(null==t?void 0:t.typeId)===ts.Bool}static isDecimal(t){return(null==t?void 0:t.typeId)===ts.Decimal}static isDate(t){return(null==t?void 0:t.typeId)===ts.Date}static isTime(t){return(null==t?void 0:t.typeId)===ts.Time}static isTimestamp(t){return(null==t?void 0:t.typeId)===ts.Timestamp}static isInterval(t){return(null==t?void 0:t.typeId)===ts.Interval}static isDuration(t){return(null==t?void 0:t.typeId)===ts.Duration}static isList(t){return(null==t?void 0:t.typeId)===ts.List}static isStruct(t){return(null==t?void 0:t.typeId)===ts.Struct}static isUnion(t){return(null==t?void 0:t.typeId)===ts.Union}static isFixedSizeBinary(t){return(null==t?void 0:t.typeId)===ts.FixedSizeBinary}static isFixedSizeList(t){return(null==t?void 0:t.typeId)===ts.FixedSizeList}static isMap(t){return(null==t?void 0:t.typeId)===ts.Map}static isDictionary(t){return(null==t?void 0:t.typeId)===ts.Dictionary}static isDenseUnion(t){return er.isUnion(t)&&t.mode===td.Dense}static isSparseUnion(t){return er.isUnion(t)&&t.mode===td.Sparse}constructor(t){this.typeId=t}}er[Symbol.toStringTag]=((D=er.prototype).children=null,D.ArrayType=Array,D.OffsetArrayType=Int32Array,D[Symbol.toStringTag]="DataType");class en extends er{constructor(){super(ts.Null)}toString(){return"Null"}}en[Symbol.toStringTag]=en.prototype[Symbol.toStringTag]="Null";class es extends er{constructor(t,e){super(ts.Int),this.isSigned=t,this.bitWidth=e}get ArrayType(){switch(this.bitWidth){case 8:return this.isSigned?Int8Array:Uint8Array;case 16:return this.isSigned?Int16Array:Uint16Array;case 32:return this.isSigned?Int32Array:Uint32Array;case 64:return this.isSigned?BigInt64Array:BigUint64Array}throw Error(`Unrecognized ${this[Symbol.toStringTag]} type`)}toString(){return`${this.isSigned?"I":"Ui"}nt${this.bitWidth}`}}es[Symbol.toStringTag]=((O=es.prototype).isSigned=null,O.bitWidth=null,O[Symbol.toStringTag]="Int");class eo extends es{constructor(){super(!0,8)}get ArrayType(){return Int8Array}}class ea extends es{constructor(){super(!0,16)}get ArrayType(){return Int16Array}}class el extends es{constructor(){super(!0,32)}get ArrayType(){return Int32Array}}class eu extends es{constructor(){super(!0,64)}get ArrayType(){return BigInt64Array}}class ec extends es{constructor(){super(!1,8)}get ArrayType(){return Uint8Array}}class ed extends es{constructor(){super(!1,16)}get ArrayType(){return Uint16Array}}class eh extends es{constructor(){super(!1,32)}get ArrayType(){return Uint32Array}}class ep extends es{constructor(){super(!1,64)}get ArrayType(){return BigUint64Array}}Object.defineProperty(eo.prototype,"ArrayType",{value:Int8Array}),Object.defineProperty(ea.prototype,"ArrayType",{value:Int16Array}),Object.defineProperty(el.prototype,"ArrayType",{value:Int32Array}),Object.defineProperty(eu.prototype,"ArrayType",{value:BigInt64Array}),Object.defineProperty(ec.prototype,"ArrayType",{value:Uint8Array}),Object.defineProperty(ed.prototype,"ArrayType",{value:Uint16Array}),Object.defineProperty(eh.prototype,"ArrayType",{value:Uint32Array}),Object.defineProperty(ep.prototype,"ArrayType",{value:BigUint64Array});class ey extends er{constructor(t){super(ts.Float),this.precision=t}get ArrayType(){switch(this.precision){case ta.HALF:return Uint16Array;case ta.SINGLE:return Float32Array;case ta.DOUBLE:return Float64Array}throw Error(`Unrecognized ${this[Symbol.toStringTag]} type`)}toString(){return`Float${this.precision<<5||16}`}}ey[Symbol.toStringTag]=((N=ey.prototype).precision=null,N[Symbol.toStringTag]="Float");class ef extends ey{constructor(){super(ta.HALF)}}class eb extends ey{constructor(){super(ta.SINGLE)}}class e_ extends ey{constructor(){super(ta.DOUBLE)}}Object.defineProperty(ef.prototype,"ArrayType",{value:Uint16Array}),Object.defineProperty(eb.prototype,"ArrayType",{value:Float32Array}),Object.defineProperty(e_.prototype,"ArrayType",{value:Float64Array});class em extends er{constructor(){super(ts.Binary)}toString(){return"Binary"}}em[Symbol.toStringTag]=((R=em.prototype).ArrayType=Uint8Array,R[Symbol.toStringTag]="Binary");class eg extends er{constructor(){super(ts.LargeBinary)}toString(){return"LargeBinary"}}eg[Symbol.toStringTag]=((F=eg.prototype).ArrayType=Uint8Array,F.OffsetArrayType=BigInt64Array,F[Symbol.toStringTag]="LargeBinary");class ev extends er{constructor(){super(ts.Utf8)}toString(){return"Utf8"}}ev[Symbol.toStringTag]=((L=ev.prototype).ArrayType=Uint8Array,L[Symbol.toStringTag]="Utf8");class eI extends er{constructor(){super(ts.LargeUtf8)}toString(){return"LargeUtf8"}}eI[Symbol.toStringTag]=((U=eI.prototype).ArrayType=Uint8Array,U.OffsetArrayType=BigInt64Array,U[Symbol.toStringTag]="LargeUtf8");class ew extends er{constructor(){super(ts.Bool)}toString(){return"Bool"}}ew[Symbol.toStringTag]=((M=ew.prototype).ArrayType=Uint8Array,M[Symbol.toStringTag]="Bool");class eS extends er{constructor(t,e,i=128){super(ts.Decimal),this.scale=t,this.precision=e,this.bitWidth=i}toString(){return`Decimal[${this.precision}e${this.scale>0?"+":""}${this.scale}]`}}eS[Symbol.toStringTag]=((x=eS.prototype).scale=null,x.precision=null,x.ArrayType=Uint32Array,x[Symbol.toStringTag]="Decimal");class eT extends er{constructor(t){super(ts.Date),this.unit=t}toString(){return`Date${(this.unit+1)*32}<${tu[this.unit]}>`}get ArrayType(){return this.unit===tu.DAY?Int32Array:BigInt64Array}}eT[Symbol.toStringTag]=((C=eT.prototype).unit=null,C[Symbol.toStringTag]="Date");class eA extends er{constructor(t,e){super(ts.Time),this.unit=t,this.bitWidth=e}toString(){return`Time${this.bitWidth}<${tl[this.unit]}>`}get ArrayType(){switch(this.bitWidth){case 32:return Int32Array;case 64:return BigInt64Array}throw Error(`Unrecognized ${this[Symbol.toStringTag]} type`)}}eA[Symbol.toStringTag]=((P=eA.prototype).unit=null,P.bitWidth=null,P[Symbol.toStringTag]="Time");class eE extends er{constructor(t,e){super(ts.Timestamp),this.unit=t,this.timezone=e}toString(){return`Timestamp<${tl[this.unit]}${this.timezone?`, ${this.timezone}`:""}>`}}eE[Symbol.toStringTag]=((k=eE.prototype).unit=null,k.timezone=null,k.ArrayType=BigInt64Array,k[Symbol.toStringTag]="Timestamp");class eB extends er{constructor(t){super(ts.Interval),this.unit=t}toString(){return`Interval<${tc[this.unit]}>`}}eB[Symbol.toStringTag]=((V=eB.prototype).unit=null,V.ArrayType=Int32Array,V[Symbol.toStringTag]="Interval");class eD extends er{constructor(t){super(ts.Duration),this.unit=t}toString(){return`Duration<${tl[this.unit]}>`}}eD[Symbol.toStringTag]=((j=eD.prototype).unit=null,j.ArrayType=BigInt64Array,j[Symbol.toStringTag]="Duration");class eO extends er{constructor(t){super(ts.List),this.children=[t]}toString(){return`List<${this.valueType}>`}get valueType(){return this.children[0].type}get valueField(){return this.children[0]}get ArrayType(){return this.valueType.ArrayType}}eO[Symbol.toStringTag]=((z=eO.prototype).children=null,z[Symbol.toStringTag]="List");class eN extends er{constructor(t){super(ts.Struct),this.children=t}toString(){return`Struct<{${this.children.map(t=>`${t.name}:${t.type}`).join(", ")}}>`}}eN[Symbol.toStringTag]=((q=eN.prototype).children=null,q[Symbol.toStringTag]="Struct");class eR extends er{constructor(t,e,i){super(ts.Union),this.mode=t,this.children=i,this.typeIds=e=Int32Array.from(e),this.typeIdToChildIndex=e.reduce((t,e,i)=>(t[e]=i)&&t||t,Object.create(null))}toString(){return`${this[Symbol.toStringTag]}<${this.children.map(t=>`${t.type}`).join(" | ")}>`}}eR[Symbol.toStringTag]=((G=eR.prototype).mode=null,G.typeIds=null,G.children=null,G.typeIdToChildIndex=null,G.ArrayType=Int8Array,G[Symbol.toStringTag]="Union");class eF extends er{constructor(t){super(ts.FixedSizeBinary),this.byteWidth=t}toString(){return`FixedSizeBinary[${this.byteWidth}]`}}eF[Symbol.toStringTag]=((Y=eF.prototype).byteWidth=null,Y.ArrayType=Uint8Array,Y[Symbol.toStringTag]="FixedSizeBinary");class eL extends er{constructor(t,e){super(ts.FixedSizeList),this.listSize=t,this.children=[e]}get valueType(){return this.children[0].type}get valueField(){return this.children[0]}get ArrayType(){return this.valueType.ArrayType}toString(){return`FixedSizeList[${this.listSize}]<${this.valueType}>`}}eL[Symbol.toStringTag]=((W=eL.prototype).children=null,W.listSize=null,W[Symbol.toStringTag]="FixedSizeList");class eU extends er{constructor(t,e=!1){var i,r,n;if(super(ts.Map),this.children=[t],this.keysSorted=e,t&&(t.name="entries",null===(i=null==t?void 0:t.type)||void 0===i?void 0:i.children)){let e=null===(r=null==t?void 0:t.type)||void 0===r?void 0:r.children[0];e&&(e.name="key");let i=null===(n=null==t?void 0:t.type)||void 0===n?void 0:n.children[1];i&&(i.name="value")}}get keyType(){return this.children[0].type.children[0].type}get valueType(){return this.children[0].type.children[1].type}get childType(){return this.children[0].type}toString(){return`Map<{${this.children[0].type.children.map(t=>`${t.name}:${t.type}`).join(", ")}}>`}}eU[Symbol.toStringTag]=(($=eU.prototype).children=null,$.keysSorted=null,$[Symbol.toStringTag]="Map_");let eM=(n=-1,()=>++n);class ex extends er{constructor(t,e,i,r){super(ts.Dictionary),this.indices=e,this.dictionary=t,this.isOrdered=r||!1,this.id=null==i?eM():t1(i)}get children(){return this.dictionary.children}get valueType(){return this.dictionary}get ArrayType(){return this.dictionary.ArrayType}toString(){return`Dictionary<${this.indices}, ${this.dictionary}>`}}function eC(t){switch(t.typeId){case ts.Decimal:return t.bitWidth/32;case ts.Interval:return 1+t.unit;case ts.FixedSizeList:return t.listSize;case ts.FixedSizeBinary:return t.byteWidth;default:return 1}}ex[Symbol.toStringTag]=((H=ex.prototype).id=null,H.indices=null,H.isOrdered=null,H.dictionary=null,H[Symbol.toStringTag]="Dictionary");class eP{visitMany(t,...e){return t.map((t,i)=>this.visit(t,...e.map(t=>t[i])))}visit(...t){return this.getVisitFn(t[0],!1).apply(this,t)}getVisitFn(t,e=!0){return function(t,e,i=!0){return"number"==typeof e?ek(t,e,i):"string"==typeof e&&e in ts?ek(t,ts[e],i):e&&e instanceof er?ek(t,eV(e),i):(null==e?void 0:e.type)&&e.type instanceof er?ek(t,eV(e.type),i):ek(t,ts.NONE,i)}(this,t,e)}getVisitFnByTypeId(t,e=!0){return ek(this,t,e)}visitNull(t,...e){return null}visitBool(t,...e){return null}visitInt(t,...e){return null}visitFloat(t,...e){return null}visitUtf8(t,...e){return null}visitLargeUtf8(t,...e){return null}visitBinary(t,...e){return null}visitLargeBinary(t,...e){return null}visitFixedSizeBinary(t,...e){return null}visitDate(t,...e){return null}visitTimestamp(t,...e){return null}visitTime(t,...e){return null}visitDecimal(t,...e){return null}visitList(t,...e){return null}visitStruct(t,...e){return null}visitUnion(t,...e){return null}visitDictionary(t,...e){return null}visitInterval(t,...e){return null}visitDuration(t,...e){return null}visitFixedSizeList(t,...e){return null}visitMap(t,...e){return null}}function ek(t,e,i=!0){let r=null;switch(e){case ts.Null:r=t.visitNull;break;case ts.Bool:r=t.visitBool;break;case ts.Int:r=t.visitInt;break;case ts.Int8:r=t.visitInt8||t.visitInt;break;case ts.Int16:r=t.visitInt16||t.visitInt;break;case ts.Int32:r=t.visitInt32||t.visitInt;break;case ts.Int64:r=t.visitInt64||t.visitInt;break;case ts.Uint8:r=t.visitUint8||t.visitInt;break;case ts.Uint16:r=t.visitUint16||t.visitInt;break;case ts.Uint32:r=t.visitUint32||t.visitInt;break;case ts.Uint64:r=t.visitUint64||t.visitInt;break;case ts.Float:r=t.visitFloat;break;case ts.Float16:r=t.visitFloat16||t.visitFloat;break;case ts.Float32:r=t.visitFloat32||t.visitFloat;break;case ts.Float64:r=t.visitFloat64||t.visitFloat;break;case ts.Utf8:r=t.visitUtf8;break;case ts.LargeUtf8:r=t.visitLargeUtf8;break;case ts.Binary:r=t.visitBinary;break;case ts.LargeBinary:r=t.visitLargeBinary;break;case ts.FixedSizeBinary:r=t.visitFixedSizeBinary;break;case ts.Date:r=t.visitDate;break;case ts.DateDay:r=t.visitDateDay||t.visitDate;break;case ts.DateMillisecond:r=t.visitDateMillisecond||t.visitDate;break;case ts.Timestamp:r=t.visitTimestamp;break;case ts.TimestampSecond:r=t.visitTimestampSecond||t.visitTimestamp;break;case ts.TimestampMillisecond:r=t.visitTimestampMillisecond||t.visitTimestamp;break;case ts.TimestampMicrosecond:r=t.visitTimestampMicrosecond||t.visitTimestamp;break;case ts.TimestampNanosecond:r=t.visitTimestampNanosecond||t.visitTimestamp;break;case ts.Time:r=t.visitTime;break;case ts.TimeSecond:r=t.visitTimeSecond||t.visitTime;break;case ts.TimeMillisecond:r=t.visitTimeMillisecond||t.visitTime;break;case ts.TimeMicrosecond:r=t.visitTimeMicrosecond||t.visitTime;break;case ts.TimeNanosecond:r=t.visitTimeNanosecond||t.visitTime;break;case ts.Decimal:r=t.visitDecimal;break;case ts.List:r=t.visitList;break;case ts.Struct:r=t.visitStruct;break;case ts.Union:r=t.visitUnion;break;case ts.DenseUnion:r=t.visitDenseUnion||t.visitUnion;break;case ts.SparseUnion:r=t.visitSparseUnion||t.visitUnion;break;case ts.Dictionary:r=t.visitDictionary;break;case ts.Interval:r=t.visitInterval;break;case ts.IntervalDayTime:r=t.visitIntervalDayTime||t.visitInterval;break;case ts.IntervalYearMonth:r=t.visitIntervalYearMonth||t.visitInterval;break;case ts.Duration:r=t.visitDuration;break;case ts.DurationSecond:r=t.visitDurationSecond||t.visitDuration;break;case ts.DurationMillisecond:r=t.visitDurationMillisecond||t.visitDuration;break;case ts.DurationMicrosecond:r=t.visitDurationMicrosecond||t.visitDuration;break;case ts.DurationNanosecond:r=t.visitDurationNanosecond||t.visitDuration;break;case ts.FixedSizeList:r=t.visitFixedSizeList;break;case ts.Map:r=t.visitMap}if("function"==typeof r)return r;if(!i)return()=>null;throw Error(`Unrecognized type '${ts[e]}'`)}function eV(t){switch(t.typeId){case ts.Null:return ts.Null;case ts.Int:{let{bitWidth:e,isSigned:i}=t;switch(e){case 8:return i?ts.Int8:ts.Uint8;case 16:return i?ts.Int16:ts.Uint16;case 32:return i?ts.Int32:ts.Uint32;case 64:return i?ts.Int64:ts.Uint64}return ts.Int}case ts.Float:switch(t.precision){case ta.HALF:return ts.Float16;case ta.SINGLE:return ts.Float32;case ta.DOUBLE:return ts.Float64}return ts.Float;case ts.Binary:return ts.Binary;case ts.LargeBinary:return ts.LargeBinary;case ts.Utf8:return ts.Utf8;case ts.LargeUtf8:return ts.LargeUtf8;case ts.Bool:return ts.Bool;case ts.Decimal:return ts.Decimal;case ts.Time:switch(t.unit){case tl.SECOND:return ts.TimeSecond;case tl.MILLISECOND:return ts.TimeMillisecond;case tl.MICROSECOND:return ts.TimeMicrosecond;case tl.NANOSECOND:return ts.TimeNanosecond}return ts.Time;case ts.Timestamp:switch(t.unit){case tl.SECOND:return ts.TimestampSecond;case tl.MILLISECOND:return ts.TimestampMillisecond;case tl.MICROSECOND:return ts.TimestampMicrosecond;case tl.NANOSECOND:return ts.TimestampNanosecond}return ts.Timestamp;case ts.Date:switch(t.unit){case tu.DAY:return ts.DateDay;case tu.MILLISECOND:return ts.DateMillisecond}return ts.Date;case ts.Interval:switch(t.unit){case tc.DAY_TIME:return ts.IntervalDayTime;case tc.YEAR_MONTH:return ts.IntervalYearMonth}return ts.Interval;case ts.Duration:switch(t.unit){case tl.SECOND:return ts.DurationSecond;case tl.MILLISECOND:return ts.DurationMillisecond;case tl.MICROSECOND:return ts.DurationMicrosecond;case tl.NANOSECOND:return ts.DurationNanosecond}return ts.Duration;case ts.Map:return ts.Map;case ts.List:return ts.List;case ts.Struct:return ts.Struct;case ts.Union:switch(t.mode){case td.Dense:return ts.DenseUnion;case td.Sparse:return ts.SparseUnion}return ts.Union;case ts.FixedSizeBinary:return ts.FixedSizeBinary;case ts.FixedSizeList:return ts.FixedSizeList;case ts.Dictionary:return ts.Dictionary}throw Error(`Unrecognized type '${ts[t.typeId]}'`)}eP.prototype.visitInt8=null,eP.prototype.visitInt16=null,eP.prototype.visitInt32=null,eP.prototype.visitInt64=null,eP.prototype.visitUint8=null,eP.prototype.visitUint16=null,eP.prototype.visitUint32=null,eP.prototype.visitUint64=null,eP.prototype.visitFloat16=null,eP.prototype.visitFloat32=null,eP.prototype.visitFloat64=null,eP.prototype.visitDateDay=null,eP.prototype.visitDateMillisecond=null,eP.prototype.visitTimestampSecond=null,eP.prototype.visitTimestampMillisecond=null,eP.prototype.visitTimestampMicrosecond=null,eP.prototype.visitTimestampNanosecond=null,eP.prototype.visitTimeSecond=null,eP.prototype.visitTimeMillisecond=null,eP.prototype.visitTimeMicrosecond=null,eP.prototype.visitTimeNanosecond=null,eP.prototype.visitDenseUnion=null,eP.prototype.visitSparseUnion=null,eP.prototype.visitIntervalDayTime=null,eP.prototype.visitIntervalYearMonth=null,eP.prototype.visitDuration=null,eP.prototype.visitDurationSecond=null,eP.prototype.visitDurationMillisecond=null,eP.prototype.visitDurationMicrosecond=null,eP.prototype.visitDurationNanosecond=null;let ej=new Float64Array(1),ez=new Uint32Array(ej.buffer);function eq(t){let e=(31744&t)>>10,i=(1023&t)/1024,r=Math.pow(-1,(32768&t)>>15);switch(e){case 31:return r*(i?Number.NaN:1/0);case 0:return r*(i?6103515625e-14*i:0)}return r*Math.pow(2,e-15)*(1+i)}class eG extends eP{}function eY(t){return(e,i,r)=>{if(e.setValid(i,null!=r))return t(e,i,r)}}let eW=(t,e,i)=>{t[e]=Math.floor(i/864e5)},e$=(t,e,i,r)=>{if(i+1<e.length){let n=t1(e[i]),s=t1(e[i+1]);t.set(r.subarray(0,s-n),n)}},eH=({values:t},e,i)=>{t[e]=i},eK=({values:t},e,i)=>{t[e]=i},eQ=({values:t},e,i)=>{t[e]=function(t){if(t!=t)return 32256;ej[0]=t;let e=(2147483648&ez[1])>>16&65535,i=2146435072&ez[1],r=0;return i>=1089470464?ez[0]>0?i=31744:(i=(2080374784&i)>>16,r=(1048575&ez[1])>>10):i<=1056964608?(r=1048576+((r=1048576+(1048575&ez[1]))<<(i>>20)-998)>>21,i=0):(i=i-1056964608>>10,r=(1048575&ez[1])+512>>10),e|i|65535&r}(i)},eJ=({values:t},e,i)=>{eW(t,e,i.valueOf())},eZ=({values:t},e,i)=>{t[e]=BigInt(i)},eX=({values:t,valueOffsets:e},i,r)=>e$(t,e,i,r),e0=({values:t,valueOffsets:e},i,r)=>e$(t,e,i,tE(r)),e1=({values:t},e,i)=>{t[e]=BigInt(i/1e3)},e2=({values:t},e,i)=>{t[e]=BigInt(i)},e3=({values:t},e,i)=>{t[e]=BigInt(1e3*i)},e4=({values:t},e,i)=>{t[e]=BigInt(1e6*i)},e6=({values:t},e,i)=>{t[e]=i},e8=({values:t},e,i)=>{t[e]=i},e5=({values:t},e,i)=>{t[e]=i},e7=({values:t},e,i)=>{t[e]=i},e9=(t,e)=>(i,r,n,s)=>r&&i(r,t,e[s]),it=(t,e)=>(i,r,n,s)=>r&&i(r,t,e.get(s)),ie=(t,e)=>(i,r,n,s)=>r&&i(r,t,e.get(n.name)),ii=(t,e)=>(i,r,n,s)=>r&&i(r,t,e[n.name]),ir=(t,e,i)=>{let r=t.type.typeIdToChildIndex[t.typeIds[e]],n=t.children[r];ih.visit(n,t.valueOffsets[e],i)},is=(t,e,i)=>{let r=t.type.typeIdToChildIndex[t.typeIds[e]],n=t.children[r];ih.visit(n,e,i)},io=({values:t},e,i)=>{t.set(i.subarray(0,2),2*e)},ia=({values:t},e,i)=>{t[e]=12*i[0]+i[1]%12},il=({values:t},e,i)=>{t[e]=i},iu=({values:t},e,i)=>{t[e]=i},ic=({values:t},e,i)=>{t[e]=i},id=({values:t},e,i)=>{t[e]=i};eG.prototype.visitBool=eY(({offset:t,values:e},i,r)=>{let n=t+i;r?e[n>>3]|=1<<n%8:e[n>>3]&=~(1<<n%8)}),eG.prototype.visitInt=eY(eH),eG.prototype.visitInt8=eY(eH),eG.prototype.visitInt16=eY(eH),eG.prototype.visitInt32=eY(eH),eG.prototype.visitInt64=eY(eH),eG.prototype.visitUint8=eY(eH),eG.prototype.visitUint16=eY(eH),eG.prototype.visitUint32=eY(eH),eG.prototype.visitUint64=eY(eH),eG.prototype.visitFloat=eY((t,e,i)=>{switch(t.type.precision){case ta.HALF:return eQ(t,e,i);case ta.SINGLE:case ta.DOUBLE:return eK(t,e,i)}}),eG.prototype.visitFloat16=eY(eQ),eG.prototype.visitFloat32=eY(eK),eG.prototype.visitFloat64=eY(eK),eG.prototype.visitUtf8=eY(e0),eG.prototype.visitLargeUtf8=eY(e0),eG.prototype.visitBinary=eY(eX),eG.prototype.visitLargeBinary=eY(eX),eG.prototype.visitFixedSizeBinary=eY(({stride:t,values:e},i,r)=>{e.set(r.subarray(0,t),t*i)}),eG.prototype.visitDate=eY((t,e,i)=>{t.type.unit===tu.DAY?eJ(t,e,i):eZ(t,e,i)}),eG.prototype.visitDateDay=eY(eJ),eG.prototype.visitDateMillisecond=eY(eZ),eG.prototype.visitTimestamp=eY((t,e,i)=>{switch(t.type.unit){case tl.SECOND:return e1(t,e,i);case tl.MILLISECOND:return e2(t,e,i);case tl.MICROSECOND:return e3(t,e,i);case tl.NANOSECOND:return e4(t,e,i)}}),eG.prototype.visitTimestampSecond=eY(e1),eG.prototype.visitTimestampMillisecond=eY(e2),eG.prototype.visitTimestampMicrosecond=eY(e3),eG.prototype.visitTimestampNanosecond=eY(e4),eG.prototype.visitTime=eY((t,e,i)=>{switch(t.type.unit){case tl.SECOND:return e6(t,e,i);case tl.MILLISECOND:return e8(t,e,i);case tl.MICROSECOND:return e5(t,e,i);case tl.NANOSECOND:return e7(t,e,i)}}),eG.prototype.visitTimeSecond=eY(e6),eG.prototype.visitTimeMillisecond=eY(e8),eG.prototype.visitTimeMicrosecond=eY(e5),eG.prototype.visitTimeNanosecond=eY(e7),eG.prototype.visitDecimal=eY(({values:t,stride:e},i,r)=>{t.set(r.subarray(0,e),e*i)}),eG.prototype.visitList=eY((t,e,i)=>{let r=t.children[0],n=t.valueOffsets,s=ih.getVisitFn(r);if(Array.isArray(i))for(let t=-1,o=n[e],a=n[e+1];o<a;)s(r,o++,i[++t]);else for(let t=-1,o=n[e],a=n[e+1];o<a;)s(r,o++,i.get(++t))}),eG.prototype.visitStruct=eY((t,e,i)=>{let r=t.type.children.map(t=>ih.getVisitFn(t.type)),n=i instanceof Map?ie(e,i):i instanceof rv?it(e,i):Array.isArray(i)?e9(e,i):ii(e,i);t.type.children.forEach((e,i)=>n(r[i],t.children[i],e,i))}),eG.prototype.visitUnion=eY((t,e,i)=>{t.type.mode===td.Dense?ir(t,e,i):is(t,e,i)}),eG.prototype.visitDenseUnion=eY(ir),eG.prototype.visitSparseUnion=eY(is),eG.prototype.visitDictionary=eY((t,e,i)=>{var r;null===(r=t.dictionary)||void 0===r||r.set(t.values[e],i)}),eG.prototype.visitInterval=eY((t,e,i)=>{t.type.unit===tc.DAY_TIME?io(t,e,i):ia(t,e,i)}),eG.prototype.visitIntervalDayTime=eY(io),eG.prototype.visitIntervalYearMonth=eY(ia),eG.prototype.visitDuration=eY((t,e,i)=>{switch(t.type.unit){case tl.SECOND:return il(t,e,i);case tl.MILLISECOND:return iu(t,e,i);case tl.MICROSECOND:return ic(t,e,i);case tl.NANOSECOND:return id(t,e,i)}}),eG.prototype.visitDurationSecond=eY(il),eG.prototype.visitDurationMillisecond=eY(iu),eG.prototype.visitDurationMicrosecond=eY(ic),eG.prototype.visitDurationNanosecond=eY(id),eG.prototype.visitFixedSizeList=eY((t,e,i)=>{let{stride:r}=t,n=t.children[0],s=ih.getVisitFn(n);if(Array.isArray(i))for(let t=-1,o=e*r;++t<r;)s(n,o+t,i[t]);else for(let t=-1,o=e*r;++t<r;)s(n,o+t,i.get(t))}),eG.prototype.visitMap=eY((t,e,i)=>{let r=t.children[0],{valueOffsets:n}=t,s=ih.getVisitFn(r),{[e]:o,[e+1]:a}=n;for(let t of i instanceof Map?i.entries():Object.entries(i))if(s(r,o,t),++o>=a)break});let ih=new eG,ip=Symbol.for("parent"),iy=Symbol.for("rowIndex");class ib{constructor(t,e){return this[ip]=t,this[iy]=e,new Proxy(this,new im)}toArray(){return Object.values(this.toJSON())}toJSON(){let t=this[iy],e=this[ip],i=e.type.children,r={};for(let n=-1,s=i.length;++n<s;)r[i[n].name]=iY.visit(e.children[n],t);return r}toString(){return`{${[...this].map(([t,e])=>`${tw(t)}: ${tw(e)}`).join(", ")}}`}[Symbol.for("nodejs.util.inspect.custom")](){return this.toString()}[Symbol.iterator](){return new i_(this[ip],this[iy])}}class i_{constructor(t,e){this.childIndex=0,this.children=t.children,this.rowIndex=e,this.childFields=t.type.children,this.numChildren=this.childFields.length}[Symbol.iterator](){return this}next(){let t=this.childIndex;return t<this.numChildren?(this.childIndex=t+1,{done:!1,value:[this.childFields[t].name,iY.visit(this.children[t],this.rowIndex)]}):{done:!0,value:null}}}Object.defineProperties(ib.prototype,{[Symbol.toStringTag]:{enumerable:!1,configurable:!1,value:"Row"},[ip]:{writable:!0,enumerable:!1,configurable:!1,value:null},[iy]:{writable:!0,enumerable:!1,configurable:!1,value:-1}});class im{isExtensible(){return!1}deleteProperty(){return!1}preventExtensions(){return!0}ownKeys(t){return t[ip].type.children.map(t=>t.name)}has(t,e){return -1!==t[ip].type.children.findIndex(t=>t.name===e)}getOwnPropertyDescriptor(t,e){if(-1!==t[ip].type.children.findIndex(t=>t.name===e))return{writable:!0,enumerable:!0,configurable:!0}}get(t,e){if(Reflect.has(t,e))return t[e];let i=t[ip].type.children.findIndex(t=>t.name===e);if(-1!==i){let r=iY.visit(t[ip].children[i],t[iy]);return Reflect.set(t,e,r),r}}set(t,e,i){let r=t[ip].type.children.findIndex(t=>t.name===e);return -1!==r?(ih.visit(t[ip].children[r],t[iy],i),Reflect.set(t,e,i)):(!!Reflect.has(t,e)||"symbol"==typeof e)&&Reflect.set(t,e,i)}}class ig extends eP{}function iv(t){return(e,i)=>e.getValid(i)?t(e,i):null}let iI=(t,e)=>864e5*t[e],iw=(t,e,i)=>{if(i+1>=e.length)return null;let r=t1(e[i]),n=t1(e[i+1]);return t.subarray(r,n)},iS=({values:t},e)=>iI(t,e),iT=({values:t},e)=>t1(t[e]),iA=({stride:t,values:e},i)=>e[t*i],iE=({values:t},e)=>t[e],iB=({values:t,valueOffsets:e},i)=>iw(t,e,i),iD=({values:t,valueOffsets:e},i)=>{let r=iw(t,e,i);return null!==r?tT(r):null},iO=({values:t},e)=>1e3*t1(t[e]),iN=({values:t},e)=>t1(t[e]),iR=({values:t},e)=>t2(t[e],BigInt(1e3)),iF=({values:t},e)=>t2(t[e],BigInt(1e6)),iL=({values:t},e)=>t[e],iU=({values:t},e)=>t[e],iM=({values:t},e)=>t[e],ix=({values:t},e)=>t[e],iC=(t,e)=>{let i=t.type.typeIdToChildIndex[t.typeIds[e]],r=t.children[i];return iY.visit(r,t.valueOffsets[e])},iP=(t,e)=>{let i=t.type.typeIdToChildIndex[t.typeIds[e]],r=t.children[i];return iY.visit(r,e)},ik=({values:t},e)=>t.subarray(2*e,2*(e+1)),iV=({values:t},e)=>{let i=t[e],r=new Int32Array(2);return r[0]=Math.trunc(i/12),r[1]=Math.trunc(i%12),r},ij=({values:t},e)=>t[e],iz=({values:t},e)=>t[e],iq=({values:t},e)=>t[e],iG=({values:t},e)=>t[e];ig.prototype.visitNull=iv((t,e)=>null),ig.prototype.visitBool=iv(({offset:t,values:e},i)=>{let r=t+i;return(e[r>>3]&1<<r%8)!=0}),ig.prototype.visitInt=iv(({values:t},e)=>t[e]),ig.prototype.visitInt8=iv(iA),ig.prototype.visitInt16=iv(iA),ig.prototype.visitInt32=iv(iA),ig.prototype.visitInt64=iv(iE),ig.prototype.visitUint8=iv(iA),ig.prototype.visitUint16=iv(iA),ig.prototype.visitUint32=iv(iA),ig.prototype.visitUint64=iv(iE),ig.prototype.visitFloat=iv(({type:t,values:e},i)=>t.precision!==ta.HALF?e[i]:eq(e[i])),ig.prototype.visitFloat16=iv(({stride:t,values:e},i)=>eq(e[t*i])),ig.prototype.visitFloat32=iv(iA),ig.prototype.visitFloat64=iv(iA),ig.prototype.visitUtf8=iv(iD),ig.prototype.visitLargeUtf8=iv(iD),ig.prototype.visitBinary=iv(iB),ig.prototype.visitLargeBinary=iv(iB),ig.prototype.visitFixedSizeBinary=iv(({stride:t,values:e},i)=>e.subarray(t*i,t*(i+1))),ig.prototype.visitDate=iv((t,e)=>t.type.unit===tu.DAY?iS(t,e):iT(t,e)),ig.prototype.visitDateDay=iv(iS),ig.prototype.visitDateMillisecond=iv(iT),ig.prototype.visitTimestamp=iv((t,e)=>{switch(t.type.unit){case tl.SECOND:return iO(t,e);case tl.MILLISECOND:return iN(t,e);case tl.MICROSECOND:return iR(t,e);case tl.NANOSECOND:return iF(t,e)}}),ig.prototype.visitTimestampSecond=iv(iO),ig.prototype.visitTimestampMillisecond=iv(iN),ig.prototype.visitTimestampMicrosecond=iv(iR),ig.prototype.visitTimestampNanosecond=iv(iF),ig.prototype.visitTime=iv((t,e)=>{switch(t.type.unit){case tl.SECOND:return iL(t,e);case tl.MILLISECOND:return iU(t,e);case tl.MICROSECOND:return iM(t,e);case tl.NANOSECOND:return ix(t,e)}}),ig.prototype.visitTimeSecond=iv(iL),ig.prototype.visitTimeMillisecond=iv(iU),ig.prototype.visitTimeMicrosecond=iv(iM),ig.prototype.visitTimeNanosecond=iv(ix),ig.prototype.visitDecimal=iv(({values:t,stride:e},i)=>ei.decimal(t.subarray(e*i,e*(i+1)))),ig.prototype.visitList=iv((t,e)=>{let{valueOffsets:i,stride:r,children:n}=t,{[e*r]:s,[e*r+1]:o}=i;return new rv([n[0].slice(s,o-s)])}),ig.prototype.visitStruct=iv((t,e)=>new ib(t,e)),ig.prototype.visitUnion=iv((t,e)=>t.type.mode===td.Dense?iC(t,e):iP(t,e)),ig.prototype.visitDenseUnion=iv(iC),ig.prototype.visitSparseUnion=iv(iP),ig.prototype.visitDictionary=iv((t,e)=>{var i;return null===(i=t.dictionary)||void 0===i?void 0:i.get(t.values[e])}),ig.prototype.visitInterval=iv((t,e)=>t.type.unit===tc.DAY_TIME?ik(t,e):iV(t,e)),ig.prototype.visitIntervalDayTime=iv(ik),ig.prototype.visitIntervalYearMonth=iv(iV),ig.prototype.visitDuration=iv((t,e)=>{switch(t.type.unit){case tl.SECOND:return ij(t,e);case tl.MILLISECOND:return iz(t,e);case tl.MICROSECOND:return iq(t,e);case tl.NANOSECOND:return iG(t,e)}}),ig.prototype.visitDurationSecond=iv(ij),ig.prototype.visitDurationMillisecond=iv(iz),ig.prototype.visitDurationMicrosecond=iv(iq),ig.prototype.visitDurationNanosecond=iv(iG),ig.prototype.visitFixedSizeList=iv((t,e)=>{let{stride:i,children:r}=t;return new rv([r[0].slice(e*i,i)])}),ig.prototype.visitMap=iv((t,e)=>{let{valueOffsets:i,children:r}=t,{[e]:n,[e+1]:s}=i;return new iQ(r[0].slice(n,s-n))});let iY=new ig,iW=Symbol.for("keys"),i$=Symbol.for("vals"),iH=Symbol.for("kKeysAsStrings"),iK=Symbol.for("_kKeysAsStrings");class iQ{constructor(t){return this[iW]=new rv([t.children[0]]).memoize(),this[i$]=t.children[1],new Proxy(this,new iZ)}get[iH](){return this[iK]||(this[iK]=Array.from(this[iW].toArray(),String))}[Symbol.iterator](){return new iJ(this[iW],this[i$])}get size(){return this[iW].length}toArray(){return Object.values(this.toJSON())}toJSON(){let t=this[iW],e=this[i$],i={};for(let r=-1,n=t.length;++r<n;)i[t.get(r)]=iY.visit(e,r);return i}toString(){return`{${[...this].map(([t,e])=>`${tw(t)}: ${tw(e)}`).join(", ")}}`}[Symbol.for("nodejs.util.inspect.custom")](){return this.toString()}}class iJ{constructor(t,e){this.keys=t,this.vals=e,this.keyIndex=0,this.numKeys=t.length}[Symbol.iterator](){return this}next(){let t=this.keyIndex;return t===this.numKeys?{done:!0,value:null}:(this.keyIndex++,{done:!1,value:[this.keys.get(t),iY.visit(this.vals,t)]})}}class iZ{isExtensible(){return!1}deleteProperty(){return!1}preventExtensions(){return!0}ownKeys(t){return t[iH]}has(t,e){return t[iH].includes(e)}getOwnPropertyDescriptor(t,e){if(-1!==t[iH].indexOf(e))return{writable:!0,enumerable:!0,configurable:!0}}get(t,e){if(Reflect.has(t,e))return t[e];let i=t[iH].indexOf(e);if(-1!==i){let r=iY.visit(Reflect.get(t,i$),i);return Reflect.set(t,e,r),r}}set(t,e,i){let r=t[iH].indexOf(e);return -1!==r?(ih.visit(Reflect.get(t,i$),r,i),Reflect.set(t,e,i)):!!Reflect.has(t,e)&&Reflect.set(t,e,i)}}function iX(t,e,i,n){let{length:s=0}=t,o="number"!=typeof e?0:e,a="number"!=typeof i?s:i;return o<0&&(o=(o%s+s)%s),a<0&&(a=(a%s+s)%s),a<o&&(r=o,o=a,a=r),a>s&&(a=s),n?n(t,o,a):[o,a]}Object.defineProperties(iQ.prototype,{[Symbol.toStringTag]:{enumerable:!1,configurable:!1,value:"Row"},[iW]:{writable:!0,enumerable:!1,configurable:!1,value:null},[i$]:{writable:!0,enumerable:!1,configurable:!1,value:null},[iK]:{writable:!0,enumerable:!1,configurable:!1,value:null}});let i0=(t,e)=>t<0?e+t:t,i1=t=>t!=t;function i2(t){if("object"!=typeof t||null===t)return i1(t)?i1:e=>e===t;if(t instanceof Date){let e=t.valueOf();return t=>t instanceof Date&&t.valueOf()===e}return ArrayBuffer.isView(t)?e=>!!e&&function(t,e){let i=0,r=t.length;if(r!==e.length)return!1;if(r>0)do if(t[i]!==e[i])return!1;while(++i<r);return!0}(t,e):t instanceof Map?function(t){let e=-1,i=[];for(let r of t.values())i[++e]=i2(r);return i3(i)}(t):Array.isArray(t)?function(t){let e=[];for(let i=-1,r=t.length;++i<r;)e[i]=i2(t[i]);return i3(e)}(t):t instanceof rv?function(t){let e=[];for(let i=-1,r=t.length;++i<r;)e[i]=i2(t.get(i));return i3(e)}(t):function(t,e=!1){let i=Object.keys(t);if(!e&&0===i.length)return()=>!1;let r=[];for(let e=-1,n=i.length;++e<n;)r[e]=i2(t[i[e]]);return i3(r,i)}(t,!0)}function i3(t,e){return i=>{if(!i||"object"!=typeof i)return!1;switch(i.constructor){case Array:return function(t,e){let i=t.length;if(e.length!==i)return!1;for(let r=-1;++r<i;)if(!t[r](e[r]))return!1;return!0}(t,i);case Map:return i4(t,i,i.keys());case iQ:case ib:case Object:case void 0:return i4(t,i,e||Object.keys(i))}return i instanceof rv&&function(t,e){let i=t.length;if(e.length!==i)return!1;for(let r=-1;++r<i;)if(!t[r](e.get(r)))return!1;return!0}(t,i)}}function i4(t,e,i){let r=i[Symbol.iterator](),n=e instanceof Map?e.keys():Object.keys(e)[Symbol.iterator](),s=e instanceof Map?e.values():Object.values(e)[Symbol.iterator](),o=0,a=t.length,l=s.next(),u=r.next(),c=n.next();for(;o<a&&!u.done&&!c.done&&!l.done&&u.value===c.value&&t[o](l.value);++o,u=r.next(),c=n.next(),l=s.next());return o===a&&!!u.done&&!!c.done&&!!l.done||(r.return&&r.return(),n.return&&n.return(),s.return&&s.return(),!1)}class i6{constructor(t=0,e){this.numChunks=t,this.getChunkIterator=e,this.chunkIndex=0,this.chunkIterator=this.getChunkIterator(0)}next(){for(;this.chunkIndex<this.numChunks;){let t=this.chunkIterator.next();if(!t.done)return t;++this.chunkIndex<this.numChunks&&(this.chunkIterator=this.getChunkIterator(this.chunkIndex))}return{done:!0,value:null}}[Symbol.iterator](){return this}}function i8(t){return t.reduce((t,e)=>t+e.nullCount,0)}function i5(t){return t.reduce((t,e,i)=>(t[i+1]=t[i]+e.length,t),new Uint32Array(t.length+1))}function i7(t,e,i,r){let n=[];for(let s=-1,o=t.length;++s<o;){let o=t[s],a=e[s],{length:l}=o;if(a>=r)break;if(i>=a+l)continue;if(a>=i&&a+l<=r){n.push(o);continue}let u=Math.max(0,i-a),c=Math.min(r-a,l);n.push(o.slice(u,c-u))}return 0===n.length&&n.push(t[0].slice(0,0)),n}function i9(t,e,i,r){let n=0,s=0,o=e.length-1;do{if(n>=o-1)return i<e[o]?r(t,n,i-e[n]):null;i<e[s=n+Math.trunc((o-n)*.5)]?o=s:n=s}while(n<o)}function rt(t,e){return t.getValid(e)}function re(t){function e(e,i,r){return t(e[i],r)}return function(t){return i9(this.data,this._offsets,t,e)}}function ri(t){let e;function i(i,r,n){return t(i[r],n,e)}return function(t,r){let n=this.data;e=r;let s=i9(n,this._offsets,t,i);return e=void 0,s}}function rr(t){let e;function i(i,r,n){let s=n,o=0,a=0;for(let n=r-1,l=i.length;++n<l;){let r=i[n];if(~(o=t(r,e,s)))return a+o;s=0,a+=r.length}return -1}return function(t,r){e=t;let n=this.data,s="number"!=typeof r?i(n,0,0):i9(n,this._offsets,r,i);return e=void 0,s}}function rn(t,e,i,r){return(i&1<<r)!=0}function rs(t,e,i,r){return(i&1<<r)>>r}function ro(t,e,i){let r=i.byteLength+7&-8;if(t>0||i.byteLength<r){let n=new Uint8Array(r);return n.set(t%8==0?i.subarray(t>>3):ra(new rl(i,t,e,null,rn)).subarray(0,r)),n}return i}function ra(t){let e=[],i=0,r=0,n=0;for(let s of t)s&&(n|=1<<r),8==++r&&(e[i++]=n,n=r=0);(0===i||r>0)&&(e[i++]=n);let s=new Uint8Array(e.length+7&-8);return s.set(e),s}class rl{constructor(t,e,i,r,n){this.bytes=t,this.length=i,this.context=r,this.get=n,this.bit=e%8,this.byteIndex=e>>3,this.byte=t[this.byteIndex++],this.index=0}next(){return this.index<this.length?(8===this.bit&&(this.bit=0,this.byte=this.bytes[this.byteIndex++]),{value:this.get(this.context,this.index++,this.byte,this.bit++)}):{done:!0,value:null}}[Symbol.iterator](){return this}}function ru(t){let e=Math.trunc(t);return e-=e>>>1&1431655765,((e=(858993459&e)+(e>>>2&858993459))+(e>>>4)&252645135)*16843009>>>24}class rc extends eP{}function rd(t,e,i){if(void 0===e)return -1;if(null===e)switch(t.typeId){case ts.Union:case ts.Dictionary:break;default:return function(t,e){let{nullBitmap:i}=t;if(!i||t.nullCount<=0)return -1;let r=0;for(let n of new rl(i,t.offset+(e||0),t.length,i,rn)){if(!n)return r;++r}return -1}(t,i)}let r=iY.getVisitFn(t),n=i2(e"
     ");for(let e=(i||0)-1,s=t.length;++e<s;)if(n(r(t,e)))return e;return -1}function rh(t,e,i){let r=iY.getVisitFn(t),n=i2(e);for(let e=(i||0)-1,s=t.length;++e<s;)if(n(r(t,e)))return e;return -1}rc.prototype.visitNull=function(t,e){return null===e&&t.length>0?0:-1},rc.prototype.visitBool=rd,rc.prototype.visitInt=rd,rc.prototype.visitInt8=rd,rc.prototype.visitInt16=rd,rc.prototype.visitInt32=rd,rc.prototype.visitInt64=rd,rc.prototype.visitUint8=rd,rc.prototype.visitUint16=rd,rc.prototype.visitUint32=rd,rc.prototype.visitUint64=rd,rc.prototype.visitFloat=rd,rc.prototype.visitFloat16=rd,rc.prototype.visitFloat32=rd,rc.prototype.visitFloat64=rd,rc.prototype.visitUtf8=rd,rc.prototype.visitLargeUtf8=rd,rc.prototype.visitBinary=rd,rc.prototype.visitLargeBinary=rd,rc.prototype.visitFixedSizeBinary=rd,rc.prototype.visitDate=rd,rc.prototype.visitDateDay=rd,rc.prototype.visitDateMillisecond=rd,rc.prototype.visitTimestamp=rd,rc.prototype.visitTimestampSecond=rd,rc.prototype.visitTimestampMillisecond=rd,rc.prototype.visitTimestampMicrosecond=rd,rc.prototype.visitTimestampNanosecond=rd,rc.prototype.visitTime=rd,rc.prototype.visitTimeSecond=rd,rc.prototype.visitTimeMillisecond=rd,rc.prototype.visitTimeMicrosecond=rd,rc.prototype.visitTimeNanosecond=rd,rc.prototype.visitDecimal=rd,rc.prototype.visitList=rd,rc.prototype.visitStruct=rd,rc.prototype.visitUnion=rd,rc.prototype.visitDenseUnion=rh,rc.prototype.visitSparseUnion=rh,rc.prototype.visitDictionary=rd,rc.prototype.visitInterval=rd,rc.prototype.visitIntervalDayTime=rd,rc.prototype.visitIntervalYearMonth=rd,rc.prototype.visitDuration=rd,rc.prototype.visitDurationSecond=rd,rc.prototype.visitDurationMillisecond=rd,rc.prototype.visitDurationMicrosecond=rd,rc.prototype.visitDurationNanosecond=rd,rc.prototype.visitFixedSizeList=rd,rc.prototype.visitMap=rd;let rp=new rc;class ry extends eP{}function rf(t){let{type:e}=t;if(0===t.nullCount&&1===t.stride&&(er.isInt(e)&&64!==e.bitWidth||er.isTime(e)&&64!==e.bitWidth||er.isFloat(e)&&e.precision!==ta.HALF))return new i6(t.data.length,e=>{let i=t.data[e];return i.values.subarray(0,i.length)[Symbol.iterator]()});let i=0;return new i6(t.data.length,e=>{let r=t.data[e].length,n=t.slice(i,i+r);return i+=r,new rb(n)})}class rb{constructor(t){this.vector=t,this.index=0}next(){return this.index<this.vector.length?{value:this.vector.get(this.index++)}:{done:!0,value:null}}[Symbol.iterator](){return this}}ry.prototype.visitNull=rf,ry.prototype.visitBool=rf,ry.prototype.visitInt=rf,ry.prototype.visitInt8=rf,ry.prototype.visitInt16=rf,ry.prototype.visitInt32=rf,ry.prototype.visitInt64=rf,ry.prototype.visitUint8=rf,ry.prototype.visitUint16=rf,ry.prototype.visitUint32=rf,ry.prototype.visitUint64=rf,ry.prototype.visitFloat=rf,ry.prototype.visitFloat16=rf,ry.prototype.visitFloat32=rf,ry.prototype.visitFloat64=rf,ry.prototype.visitUtf8=rf,ry.prototype.visitLargeUtf8=rf,ry.prototype.visitBinary=rf,ry.prototype.visitLargeBinary=rf,ry.prototype.visitFixedSizeBinary=rf,ry.prototype.visitDate=rf,ry.prototype.visitDateDay=rf,ry.prototype.visitDateMillisecond=rf,ry.prototype.visitTimestamp=rf,ry.prototype.visitTimestampSecond=rf,ry.prototype.visitTimestampMillisecond=rf,ry.prototype.visitTimestampMicrosecond=rf,ry.prototype.visitTimestampNanosecond=rf,ry.prototype.visitTime=rf,ry.prototype.visitTimeSecond=rf,ry.prototype.visitTimeMillisecond=rf,ry.prototype.visitTimeMicrosecond=rf,ry.prototype.visitTimeNanosecond=rf,ry.prototype.visitDecimal=rf,ry.prototype.visitList=rf,ry.prototype.visitStruct=rf,ry.prototype.visitUnion=rf,ry.prototype.visitDenseUnion=rf,ry.prototype.visitSparseUnion=rf,ry.prototype.visitDictionary=rf,ry.prototype.visitInterval=rf,ry.prototype.visitIntervalDayTime=rf,ry.prototype.visitIntervalYearMonth=rf,ry.prototype.visitDuration=rf,ry.prototype.visitDurationSecond=rf,ry.prototype.visitDurationMillisecond=rf,ry.prototype.visitDurationMicrosecond=rf,ry.prototype.visitDurationNanosecond=rf,ry.prototype.visitFixedSizeList=rf,ry.prototype.visitMap=rf;let r_=new ry,rm={},rg={};class rv{constructor(t){var e,i,r;let n=t[0]instanceof rv?t.flatMap(t=>t.data):t;if(0===n.length||n.some(t=>!(t instanceof rw)))throw TypeError("Vector constructor expects an Array of Data instances.");let s=null===(e=n[0])||void 0===e?void 0:e.type;switch(n.length){case 0:this._offsets=[0];break;case 1:{let{get:t,set:e,indexOf:i}=rm[s.typeId],r=n[0];this.isValid=t=>rt(r,t),this.get=e=>t(r,e),this.set=(t,i)=>e(r,t,i),this.indexOf=t=>i(r,t),this._offsets=[0,r.length];break}default:Object.setPrototypeOf(this,rg[s.typeId]),this._offsets=i5(n)}this.data=n,this.type=s,this.stride=eC(s),this.numChildren=null!==(r=null===(i=s.children)||void 0===i?void 0:i.length)&&void 0!==r?r:0,this.length=this._offsets.at(-1)}get byteLength(){return this.data.reduce((t,e)=>t+e.byteLength,0)}get nullable(){return this.data.some(t=>t.nullable)}get nullCount(){return i8(this.data)}get ArrayType(){return this.type.ArrayType}get[Symbol.toStringTag](){return`${this.VectorName}<${this.type[Symbol.toStringTag]}>`}get VectorName(){return`${ts[this.type.typeId]}Vector`}isValid(t){return!1}get(t){return null}at(t){return this.get(i0(t,this.length))}set(t,e){}indexOf(t,e){return -1}includes(t,e){return this.indexOf(t,e)>-1}[Symbol.iterator](){return r_.visit(this)}concat(...t){return new rv(this.data.concat(t.flatMap(t=>t.data).flat(Number.POSITIVE_INFINITY)))}slice(t,e){return new rv(iX(this,t,e,({data:t,_offsets:e},i,r)=>i7(t,e,i,r)))}toJSON(){return[...this]}toArray(){let{type:t,data:e,length:i,stride:r,ArrayType:n}=this;switch(t.typeId){case ts.Int:case ts.Float:case ts.Decimal:case ts.Time:case ts.Timestamp:switch(e.length){case 0:return new n;case 1:return e[0].values.subarray(0,i*r);default:return e.reduce((t,{values:e,length:i})=>(t.array.set(e.subarray(0,i*r),t.offset),t.offset+=i*r,t),{array:new n(i*r),offset:0}).array}}return[...this]}toString(){return`[${[...this].join(",")}]`}getChild(t){var e;return this.getChildAt(null===(e=this.type.children)||void 0===e?void 0:e.findIndex(e=>e.name===t))}getChildAt(t){return t>-1&&t<this.numChildren?new rv(this.data.map(({children:e})=>e[t])):null}get isMemoized(){return!!er.isDictionary(this.type)&&this.data[0].dictionary.isMemoized}memoize(){if(er.isDictionary(this.type)){let t=new rI(this.data[0].dictionary);return new rv(this.data.map(e=>{let i=e.clone();return i.dictionary=t,i}))}return new rI(this)}unmemoize(){if(er.isDictionary(this.type)&&this.isMemoized){let t=this.data[0].dictionary.unmemoize();return new rv(this.data.map(e=>{let i=e.clone();return i.dictionary=t,i}))}return this}}rv[Symbol.toStringTag]=(t=>{for(let e of(t.type=er.prototype,t.data=[],t.length=0,t.stride=1,t.numChildren=0,t._offsets=new Uint32Array([0]),t[Symbol.isConcatSpreadable]=!0,Object.keys(ts).map(t=>ts[t]).filter(t=>"number"==typeof t&&t!==ts.NONE))){let i=iY.getVisitFnByTypeId(e),r=ih.getVisitFnByTypeId(e),n=rp.getVisitFnByTypeId(e);rm[e]={get:i,set:r,indexOf:n},rg[e]=Object.create(t,{isValid:{value:re(rt)},get:{value:re(iY.getVisitFnByTypeId(e))},set:{value:ri(ih.getVisitFnByTypeId(e))},indexOf:{value:rr(rp.getVisitFnByTypeId(e))}})}return"Vector"})(rv.prototype);class rI extends rv{constructor(t){super(t.data);let e=this.get,i=this.set,r=this.slice,n=Array(this.length);Object.defineProperty(this,"get",{value(t){let i=n[t];if(void 0!==i)return i;let r=e.call(this,t);return n[t]=r,r}}),Object.defineProperty(this,"set",{value(t,e){i.call(this,t,e),n[t]=e}}),Object.defineProperty(this,"slice",{value:(t,e)=>new rI(r.call(this,t,e))}),Object.defineProperty(this,"isMemoized",{value:!0}),Object.defineProperty(this,"unmemoize",{value:()=>new rv(this.data)}),Object.defineProperty(this,"memoize",{value:()=>this})}}class rw{get typeId(){return this.type.typeId}get ArrayType(){return this.type.ArrayType}get buffers(){return[this.valueOffsets,this.values,this.nullBitmap,this.typeIds]}get nullable(){if(0!==this._nullCount){let{type:t}=this;return er.isSparseUnion(t)?this.children.some(t=>t.nullable):er.isDenseUnion(t)?this.children.some(t=>t.nullable):this.nullBitmap&&this.nullBitmap.byteLength>0}return!0}get byteLength(){let t=0,{valueOffsets:e,values:i,nullBitmap:r,typeIds:n}=this;return e&&(t+=e.byteLength),i&&(t+=i.byteLength),r&&(t+=r.byteLength),n&&(t+=n.byteLength),this.children.reduce((t,e)=>t+e.byteLength,t)}get nullCount(){let t;if(er.isUnion(this.type))return this.children.reduce((t,e)=>t+e.nullCount,0);let e=this._nullCount;return e<=-1&&(t=this.nullBitmap)&&(this._nullCount=e=0===t.length?0:this.length-function t(e,i,r){if(r-i<=0)return 0;if(r-i<8){let t=0;for(let n of new rl(e,i,r-i,e,rs))t+=n;return t}let n=r>>3<<3,s=i+(i%8==0?0:8-i%8);return t(e,i,s)+t(e,n,r)+function(t,e,i){let r=0,n=Math.trunc(e),s=new DataView(t.buffer,t.byteOffset,t.byteLength),o=void 0===i?t.byteLength:n+i;for(;o-n>=4;)r+=ru(s.getUint32(n)),n+=4;for(;o-n>=2;)r+=ru(s.getUint16(n)),n+=2;for(;o-n>=1;)r+=ru(s.getUint8(n)),n+=1;return r}(e,s>>3,n-s>>3)}(t,this.offset,this.offset+this.length)),e}constructor(t,e,i,r,n,s=[],o){let a;this.type=t,this.children=s,this.dictionary=o,this.offset=Math.floor(Math.max(e||0,0)),this.length=Math.floor(Math.max(i||0,0)),this._nullCount=Math.floor(Math.max(r||0,-1)),n instanceof rw?(this.stride=n.stride,this.values=n.values,this.typeIds=n.typeIds,this.nullBitmap=n.nullBitmap,this.valueOffsets=n.valueOffsets):(this.stride=eC(t),n&&((a=n[0])&&(this.valueOffsets=a),(a=n[1])&&(this.values=a),(a=n[2])&&(this.nullBitmap=a),(a=n[3])&&(this.typeIds=a)))}getValid(t){let{type:e}=this;if(er.isUnion(e)){let i=this.children[e.typeIdToChildIndex[this.typeIds[t]]],r=e.mode===td.Dense?this.valueOffsets[t]:t;return i.getValid(r)}if(this.nullable&&this.nullCount>0){let e=this.offset+t;return(this.nullBitmap[e>>3]&1<<e%8)!=0}return!0}setValid(t,e){let i;let{type:r}=this;if(er.isUnion(r)){let n=this.children[r.typeIdToChildIndex[this.typeIds[t]]],s=r.mode===td.Dense?this.valueOffsets[t]:t;i=n.getValid(s),n.setValid(s,e)}else{let{nullBitmap:r}=this,{offset:n,length:s}=this,o=n+t,a=1<<o%8,l=o>>3;(!r||r.byteLength<=l)&&(r=new Uint8Array((n+s+63&-64)>>3).fill(255),this.nullCount>0?(r.set(ro(n,s,this.nullBitmap),0),Object.assign(this,{nullBitmap:r})):Object.assign(this,{nullBitmap:r,_nullCount:0}));let u=r[l];i=(u&a)!=0,r[l]=e?u|a:u&~a}return!!e!==i&&(this._nullCount=this.nullCount+(e?-1:1)),e}clone(t=this.type,e=this.offset,i=this.length,r=this._nullCount,n=this,s=this.children){return new rw(t,e,i,r,n,s,this.dictionary)}slice(t,e){let{stride:i,typeId:r,children:n}=this,s=+(0===this._nullCount)-1,o=16===r?i:1,a=this._sliceBuffers(t,e,i,r);return this.clone(this.type,this.offset+t,e,s,a,0===n.length||this.valueOffsets?n:this._sliceChildren(n,o*t,o*e))}_changeLengthAndBackfillNullBitmap(t){if(this.typeId===ts.Null)return this.clone(this.type,0,t,0);let{length:e,nullCount:i}=this,r=new Uint8Array((t+63&-64)>>3).fill(255,0,e>>3);r[e>>3]=(1<<e-(-8&e))-1,i>0&&r.set(ro(this.offset,e,this.nullBitmap),0);let n=this.buffers;return n[to.VALIDITY]=r,this.clone(this.type,0,t,i+(t-e),n)}_sliceBuffers(t,e,i,r){let n;let{buffers:s}=this;return(n=s[to.TYPE])&&(s[to.TYPE]=n.subarray(t,t+e)),(n=s[to.OFFSET])&&(s[to.OFFSET]=n.subarray(t,t+e+1))||(n=s[to.DATA])&&(s[to.DATA]=6===r?n:n.subarray(i*t,i*(t+e))),s}_sliceChildren(t,e,i){return t.map(t=>t.slice(e,i))}}rw.prototype.children=Object.freeze([]);class rS extends eP{visit(t){return this.getVisitFn(t.type).call(this,t)}visitNull(t){let{type:e,offset:i=0,length:r=0}=t;return new rw(e,i,r,r)}visitBool(t){let{type:e,offset:i=0}=t,r=tQ(t.nullBitmap),n=t$(e.ArrayType,t.data),{length:s=n.length>>3,nullCount:o=t.nullBitmap?-1:0}=t;return new rw(e,i,s,o,[void 0,n,r])}visitInt(t){let{type:e,offset:i=0}=t,r=tQ(t.nullBitmap),n=t$(e.ArrayType,t.data),{length:s=n.length,nullCount:o=t.nullBitmap?-1:0}=t;return new rw(e,i,s,o,[void 0,n,r])}visitFloat(t){let{type:e,offset:i=0}=t,r=tQ(t.nullBitmap),n=t$(e.ArrayType,t.data),{length:s=n.length,nullCount:o=t.nullBitmap?-1:0}=t;return new rw(e,i,s,o,[void 0,n,r])}visitUtf8(t){let{type:e,offset:i=0}=t,r=tQ(t.data),n=tQ(t.nullBitmap),s=tH(t.valueOffsets),{length:o=s.length-1,nullCount:a=t.nullBitmap?-1:0}=t;return new rw(e,i,o,a,[s,r,n])}visitLargeUtf8(t){let{type:e,offset:i=0}=t,r=tQ(t.data),n=tQ(t.nullBitmap),s=tK(t.valueOffsets),{length:o=s.length-1,nullCount:a=t.nullBitmap?-1:0}=t;return new rw(e,i,o,a,[s,r,n])}visitBinary(t){let{type:e,offset:i=0}=t,r=tQ(t.data),n=tQ(t.nullBitmap),s=tH(t.valueOffsets),{length:o=s.length-1,nullCount:a=t.nullBitmap?-1:0}=t;return new rw(e,i,o,a,[s,r,n])}visitLargeBinary(t){let{type:e,offset:i=0}=t,r=tQ(t.data),n=tQ(t.nullBitmap),s=tK(t.valueOffsets),{length:o=s.length-1,nullCount:a=t.nullBitmap?-1:0}=t;return new rw(e,i,o,a,[s,r,n])}visitFixedSizeBinary(t){let{type:e,offset:i=0}=t,r=tQ(t.nullBitmap),n=t$(e.ArrayType,t.data),{length:s=n.length/eC(e),nullCount:o=t.nullBitmap?-1:0}=t;return new rw(e,i,s,o,[void 0,n,r])}visitDate(t){let{type:e,offset:i=0}=t,r=tQ(t.nullBitmap),n=t$(e.ArrayType,t.data),{length:s=n.length/eC(e),nullCount:o=t.nullBitmap?-1:0}=t;return new rw(e,i,s,o,[void 0,n,r])}visitTimestamp(t){let{type:e,offset:i=0}=t,r=tQ(t.nullBitmap),n=t$(e.ArrayType,t.data),{length:s=n.length/eC(e),nullCount:o=t.nullBitmap?-1:0}=t;return new rw(e,i,s,o,[void 0,n,r])}visitTime(t){let{type:e,offset:i=0}=t,r=tQ(t.nullBitmap),n=t$(e.ArrayType,t.data),{length:s=n.length/eC(e),nullCount:o=t.nullBitmap?-1:0}=t;return new rw(e,i,s,o,[void 0,n,r])}visitDecimal(t){let{type:e,offset:i=0}=t,r=tQ(t.nullBitmap),n=t$(e.ArrayType,t.data),{length:s=n.length/eC(e),nullCount:o=t.nullBitmap?-1:0}=t;return new rw(e,i,s,o,[void 0,n,r])}visitList(t){let{type:e,offset:i=0,child:r}=t,n=tQ(t.nullBitmap),s=tH(t.valueOffsets),{length:o=s.length-1,nullCount:a=t.nullBitmap?-1:0}=t;return new rw(e,i,o,a,[s,void 0,n],[r])}visitStruct(t){let{type:e,offset:i=0,children:r=[]}=t,n=tQ(t.nullBitmap),{length:s=r.reduce((t,{length:e})=>Math.max(t,e),0),nullCount:o=t.nullBitmap?-1:0}=t;return new rw(e,i,s,o,[void 0,void 0,n],r)}visitUnion(t){let{type:e,offset:i=0,children:r=[]}=t,n=t$(e.ArrayType,t.typeIds),{length:s=n.length,nullCount:o=-1}=t;return er.isSparseUnion(e)?new rw(e,i,s,o,[void 0,void 0,void 0,n],r):new rw(e,i,s,o,[tH(t.valueOffsets),void 0,void 0,n],r)}visitDictionary(t){let{type:e,offset:i=0}=t,r=tQ(t.nullBitmap),n=t$(e.indices.ArrayType,t.data),{dictionary:s=new rv([new rS().visit({type:e.dictionary})])}=t,{length:o=n.length,nullCount:a=t.nullBitmap?-1:0}=t;return new rw(e,i,o,a,[void 0,n,r],[],s)}visitInterval(t){let{type:e,offset:i=0}=t,r=tQ(t.nullBitmap),n=t$(e.ArrayType,t.data),{length:s=n.length/eC(e),nullCount:o=t.nullBitmap?-1:0}=t;return new rw(e,i,s,o,[void 0,n,r])}visitDuration(t){let{type:e,offset:i=0}=t,r=tQ(t.nullBitmap),n=t$(e.ArrayType,t.data),{length:s=n.length,nullCount:o=t.nullBitmap?-1:0}=t;return new rw(e,i,s,o,[void 0,n,r])}visitFixedSizeList(t){let{type:e,offset:i=0,child:r=new rS().visit({type:e.valueType})}=t,n=tQ(t.nullBitmap),{length:s=r.length/eC(e),nullCount:o=t.nullBitmap?-1:0}=t;return new rw(e,i,s,o,[void 0,void 0,n],[r])}visitMap(t){let{type:e,offset:i=0,child:r=new rS().visit({type:e.childType})}=t,n=tQ(t.nullBitmap),s=tH(t.valueOffsets),{length:o=s.length-1,nullCount:a=t.nullBitmap?-1:0}=t;return new rw(e,i,o,a,[s,void 0,n],[r])}}let rT=new rS;function rA(t){return rT.visit(t)}(K=th||(th={}))[K.NONE=0]="NONE",K[K.Schema=1]="Schema",K[K.DictionaryBatch=2]="DictionaryBatch",K[K.RecordBatch=3]="RecordBatch",K[K.Tensor=4]="Tensor",K[K.SparseTensor=5]="SparseTensor";class rE{constructor(){this.bb=null,this.bb_pos=0}__init(t,e){return this.bb_pos=t,this.bb=e,this}offset(){return this.bb.readInt64(this.bb_pos)}metaDataLength(){return this.bb.readInt32(this.bb_pos+8)}bodyLength(){return this.bb.readInt64(this.bb_pos+16)}static sizeOf(){return 24}static createBlock(t,e,i,r){return t.prep(8,24),t.writeInt64(BigInt(null!=r?r:0)),t.pad(4),t.writeInt32(i),t.writeInt64(BigInt(null!=e?e:0)),t.offset()}}let rB=new Int32Array(2),rD=new Float32Array(rB.buffer),rO=new Float64Array(rB.buffer),rN=1===new Uint16Array(new Uint8Array([1,0]).buffer)[0];(Q=tp||(tp={}))[Q.UTF8_BYTES=1]="UTF8_BYTES",Q[Q.UTF16_STRING=2]="UTF16_STRING";class rR{constructor(t){this.bytes_=t,this.position_=0,this.text_decoder_=new TextDecoder}static allocate(t){return new rR(new Uint8Array(t))}clear(){this.position_=0}bytes(){return this.bytes_}position(){return this.position_}setPosition(t){this.position_=t}capacity(){return this.bytes_.length}readInt8(t){return this.readUint8(t)<<24>>24}readUint8(t){return this.bytes_[t]}readInt16(t){return this.readUint16(t)<<16>>16}readUint16(t){return this.bytes_[t]|this.bytes_[t+1]<<8}readInt32(t){return this.bytes_[t]|this.bytes_[t+1]<<8|this.bytes_[t+2]<<16|this.bytes_[t+3]<<24}readUint32(t){return this.readInt32(t)>>>0}readInt64(t){return BigInt.asIntN(64,BigInt(this.readUint32(t))+(BigInt(this.readUint32(t+4))<<BigInt(32)))}readUint64(t){return BigInt.asUintN(64,BigInt(this.readUint32(t))+(BigInt(this.readUint32(t+4))<<BigInt(32)))}readFloat32(t){return rB[0]=this.readInt32(t),rD[0]}readFloat64(t){return rB[rN?0:1]=this.readInt32(t),rB[rN?1:0]=this.readInt32(t+4),rO[0]}writeInt8(t,e){this.bytes_[t]=e}writeUint8(t,e){this.bytes_[t]=e}writeInt16(t,e){this.bytes_[t]=e,this.bytes_[t+1]=e>>8}writeUint16(t,e){this.bytes_[t]=e,this.bytes_[t+1]=e>>8}writeInt32(t,e){this.bytes_[t]=e,this.bytes_[t+1]=e>>8,this.bytes_[t+2]=e>>16,this.bytes_[t+3]=e>>24}writeUint32(t,e){this.bytes_[t]=e,this.bytes_[t+1]=e>>8,this.bytes_[t+2]=e>>16,this.bytes_[t+3]=e>>24}writeInt64(t,e){this.writeInt32(t,Number(BigInt.asIntN(32,e))),this.writeInt32(t+4,Number(BigInt.asIntN(32,e>>BigInt(32))))}writeUint64(t,e){this.writeUint32(t,Number(BigInt.asUintN(32,e))),this.writeUint32(t+4,Number(BigInt.asUintN(32,e>>BigInt(32))))}writeFloat32(t,e){rD[0]=e,this.writeInt32(t,rB[0])}writeFloat64(t,e){rO[0]=e,this.writeInt32(t,rB[rN?0:1]),this.writeInt32(t+4,rB[rN?1:0])}getBufferIdentifier(){if(this.bytes_.length<this.position_+4+4)throw Error("FlatBuffers: ByteBuffer is too short to contain an identifier.");let t="";for(let e=0;e<4;e++)t+=String.fromCharCode(this.readInt8(this.position_+4+e));return t}__offset(t,e){let i=t-this.readInt32(t);return e<this.readInt16(i)?this.readInt16(i+e):0}__union(t,e){return t.bb_pos=e+this.readInt32(e),t.bb=this,t}__string(t,e){t+=this.readInt32(t);let i=this.readInt32(t);t+=4;let r=this.bytes_.subarray(t,t+i);return e===tp.UTF8_BYTES?r:this.text_decoder_.decode(r)}__union_with_string(t,e){return"string"==typeof t?this.__string(e):this.__union(t,e)}__indirect(t){return t+this.readInt32(t)}__vector(t){return t+this.readInt32(t)+4}__vector_len(t){return this.readInt32(t+this.readInt32(t))}__has_identifier(t){if(4!=t.length)throw Error("FlatBuffers: file identifier must be length 4");for(let e=0;e<4;e++)if(t.charCodeAt(e)!=this.readInt8(this.position()+4+e))return!1;return!0}createScalarList(t,e){let i=[];for(let r=0;r<e;++r){let e=t(r);null!==e&&i.push(e)}return i}createObjList(t,e){let i=[];for(let r=0;r<e;++r){let e=t(r);null!==e&&i.push(e.unpack())}return i}}class rF{constructor(t){let e;this.minalign=1,this.vtable=null,this.vtable_in_use=0,this.isNested=!1,this.object_start=0,this.vtables=[],this.vector_num_elems=0,this.force_defaults=!1,this.string_maps=null,this.text_encoder=new TextEncoder,e=t||1024,this.bb=rR.allocate(e),this.space=e}clear(){this.bb.clear(),this.space=this.bb.capacity(),this.minalign=1,this.vtable=null,this.vtable_in_use=0,this.isNested=!1,this.object_start=0,this.vtables=[],this.vector_num_elems=0,this.force_defaults=!1,this.string_maps=null}forceDefaults(t){this.force_defaults=t}dataBuffer(){return this.bb}asUint8Array(){return this.bb.bytes().subarray(this.bb.position(),this.bb.position()+this.offset())}prep(t,e){t>this.minalign&&(this.minalign=t);let i=~(this.bb.capacity()-this.space+e)+1&t-1;for(;this.space<i+t+e;){let t=this.bb.capacity();this.bb=rF.growByteBuffer(this.bb),this.space+=this.bb.capacity()-t}this.pad(i)}pad(t){for(let e=0;e<t;e++)this.bb.writeInt8(--this.space,0)}writeInt8(t){this.bb.writeInt8(this.space-=1,t)}writeInt16(t){this.bb.writeInt16(this.space-=2,t)}writeInt32(t){this.bb.writeInt32(this.space-=4,t)}writeInt64(t){this.bb.writeInt64(this.space-=8,t)}writeFloat32(t){this.bb.writeFloat32(this.space-=4,t)}writeFloat64(t){this.bb.writeFloat64(this.space-=8,t)}addInt8(t){this.prep(1,0),this.writeInt8(t)}addInt16(t){this.prep(2,0),this.writeInt16(t)}addInt32(t){this.prep(4,0),this.writeInt32(t)}addInt64(t){this.prep(8,0),this.writeInt64(t)}addFloat32(t){this.prep(4,0),this.writeFloat32(t)}addFloat64(t){this.prep(8,0),this.writeFloat64(t)}addFieldInt8(t,e,i){(this.force_defaults||e!=i)&&(this.addInt8(e),this.slot(t))}addFieldInt16(t,e,i){(this.force_defaults||e!=i)&&(this.addInt16(e),this.slot(t))}addFieldInt32(t,e,i){(this.force_defaults||e!=i)&&(this.addInt32(e),this.slot(t))}addFieldInt64(t,e,i){(this.force_defaults||e!==i)&&(this.addInt64(e),this.slot(t))}addFieldFloat32(t,e,i){(this.force_defaults||e!=i)&&(this.addFloat32(e),this.slot(t))}addFieldFloat64(t,e,i){(this.force_defaults||e!=i)&&(this.addFloat64(e),this.slot(t))}addFieldOffset(t,e,i){(this.force_defaults||e!=i)&&(this.addOffset(e),this.slot(t))}addFieldStruct(t,e,i){e!=i&&(this.nested(e),this.slot(t))}nested(t){if(t!=this.offset())throw TypeError("FlatBuffers: struct must be serialized inline.")}notNested(){if(this.isNested)throw TypeError("FlatBuffers: object serialization must not be nested.")}slot(t){null!==this.vtable&&(this.vtable[t]=this.offset())}offset(){return this.bb.capacity()-this.space}static growByteBuffer(t){let e=t.capacity();if(3221225472&e)throw Error("FlatBuffers: cannot grow buffer beyond 2 gigabytes.");let i=e<<1,r=rR.allocate(i);return r.setPosition(i-e),r.bytes().set(t.bytes(),i-e),r}addOffset(t){this.prep(4,0),this.writeInt32(this.offset()-t+4)}startObject(t){this.notNested(),null==this.vtable&&(this.vtable=[]),this.vtable_in_use=t;for(let e=0;e<t;e++)this.vtable[e]=0;this.isNested=!0,this.object_start=this.offset()}endObject(){if(null==this.vtable||!this.isNested)throw Error("FlatBuffers: endObject called without startObject");this.addInt32(0);let t=this.offset(),e=this.vtable_in_use-1;for(;e>=0&&0==this.vtable[e];e--);let i=e+1;for(;e>=0;e--)this.addInt16(0!=this.vtable[e]?t-this.vtable[e]:0);this.addInt16(t-this.object_start);let r=(i+2)*2;this.addInt16(r);let n=0,s=this.space;t:for(e=0;e<this.vtables.length;e++){let t=this.bb.capacity()-this.vtables[e];if(r==this.bb.readInt16(t)){for(let e=2;e<r;e+=2)if(this.bb.readInt16(s+e)!=this.bb.readInt16(t+e))continue t;n=this.vtables[e];break}}return n?(this.space=this.bb.capacity()-t,this.bb.writeInt32(this.space,n-t)):(this.vtables.push(this.offset()),this.bb.writeInt32(this.bb.capacity()-t,this.offset()-t)),this.isNested=!1,t}finish(t,e,i){let r=i?4:0;if(e){if(this.prep(this.minalign,8+r),4!=e.length)throw TypeError("FlatBuffers: file identifier must be length 4");for(let t=3;t>=0;t--)this.writeInt8(e.charCodeAt(t))}this.prep(this.minalign,4+r),this.addOffset(t),r&&this.addInt32(this.bb.capacity()-this.space),this.bb.setPosition(this.space)}finishSizePrefixed(t,e){this.finish(t,e,!0)}requiredField(t,e){let i=this.bb.capacity()-t,r=i-this.bb.readInt32(i);if(!(e<this.bb.readInt16(r)&&0!=this.bb.readInt16(r+e)))throw TypeError("FlatBuffers: field "+e+" must be set")}startVector(t,e,i){this.notNested(),this.vector_num_elems=e,this.prep(4,t*e),this.prep(i,t*e)}endVector(){return this.writeInt32(this.vector_num_elems),this.offset()}createSharedString(t){if(!t)return 0;if(this.string_maps||(this.string_maps=new Map),this.string_maps.has(t))return this.string_maps.get(t);let e=this.createString(t);return this.string_maps.set(t,e),e}createString(t){let e;return null==t?0:(t instanceof Uint8Array?e=t:e=this.text_encoder.encode(t),this.addInt8(0),this.startVector(1,e.length,1),this.bb.setPosition(this.space-=e.length),this.bb.bytes().set(e,this.space),this.endVector())}createByteVector(t){return null==t?0:(this.startVector(1,t.length,1),this.bb.setPosition(this.space-=t.length),this.bb.bytes().set(t,this.space),this.endVector())}createObjectOffset(t){return null===t?0:"string"==typeof t?this.createString(t):t.pack(this)}createObjectOffsetList(t){let e=[];for(let i=0;i<t.length;++i){let r=t[i];if(null!==r)e.push(this.createObjectOffset(r));else throw TypeError("FlatBuffers: Argument for createObjectOffsetList cannot contain null.")}return e}createStructOffsetList(t,e){return e(this,t.length),this.createObjectOffsetList(t.slice().reverse()),this.endVector()}}class rL{constructor(){this.bb=null,this.bb_pos=0}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsKeyValue(t,e){return(e||new rL).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsKeyValue(t,e){return t.setPosition(t.position()+4),(e||new rL).__init(t.readInt32(t.position())+t.position(),t)}key(t){let e=this.bb.__offset(this.bb_pos,4);return e?this.bb.__string(this.bb_pos+e,t):null}value(t){let e=this.bb.__offset(this.bb_pos,6);return e?this.bb.__string(this.bb_pos+e,t):null}static startKeyValue(t){t.startObject(2)}static addKey(t,e){t.addFieldOffset(0,e,0)}static addValue(t,e){t.addFieldOffset(1,e,0)}static endKeyValue(t){return t.endObject()}static createKeyValue(t,e,i){return rL.startKeyValue(t),rL.addKey(t,e),rL.addValue(t,i),rL.endKeyValue(t)}}(J=ty||(ty={}))[J.V1=0]="V1",J[J.V2=1]="V2",J[J.V3=2]="V3",J[J.V4=3]="V4",J[J.V5=4]="V5",(Z=tf||(tf={}))[Z.Little=0]="Little",Z[Z.Big=1]="Big",(X=tb||(tb={}))[X.DenseArray=0]="DenseArray";class rU{constructor(){this.bb=null,this.bb_pos=0}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsInt(t,e){return(e||new rU).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsInt(t,e){return t.setPosition(t.position()+4),(e||new rU).__init(t.readInt32(t.position())+t.position(),t)}bitWidth(){let t=this.bb.__offset(this.bb_pos,4);return t?this.bb.readInt32(this.bb_pos+t):0}isSigned(){let t=this.bb.__offset(this.bb_pos,6);return!!t&&!!this.bb.readInt8(this.bb_pos+t)}static startInt(t){t.startObject(2)}static addBitWidth(t,e){t.addFieldInt32(0,e,0)}static addIsSigned(t,e){t.addFieldInt8(1,+e,0)}static endInt(t){return t.endObject()}static createInt(t,e,i){return rU.startInt(t),rU.addBitWidth(t,e),rU.addIsSigned(t,i),rU.endInt(t)}}class rM{constructor(){this.bb=null,this.bb_pos=0}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsDictionaryEncoding(t,e){return(e||new rM).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsDictionaryEncoding(t,e){return t.setPosition(t.position()+4),(e||new rM).__init(t.readInt32(t.position())+t.position(),t)}id(){let t=this.bb.__offset(this.bb_pos,4);return t?this.bb.readInt64(this.bb_pos+t):BigInt("0")}indexType(t){let e=this.bb.__offset(this.bb_pos,6);return e?(t||new rU).__init(this.bb.__indirect(this.bb_pos+e),this.bb):null}isOrdered(){let t=this.bb.__offset(this.bb_pos,8);return!!t&&!!this.bb.readInt8(this.bb_pos+t)}dictionaryKind(){let t=this.bb.__offset(this.bb_pos,10);return t?this.bb.readInt16(this.bb_pos+t):tb.DenseArray}static startDictionaryEncoding(t){t.startObject(4)}static addId(t,e){t.addFieldInt64(0,e,BigInt("0"))}static addIndexType(t,e){t.addFieldOffset(1,e,0)}static addIsOrdered(t,e){t.addFieldInt8(2,+e,0)}static addDictionaryKind(t,e){t.addFieldInt16(3,e,tb.DenseArray)}static endDictionaryEncoding(t){return t.endObject()}}(tt=t_||(t_={}))[tt.NONE=0]="NONE",tt[tt.Null=1]="Null",tt[tt.Int=2]="Int",tt[tt.FloatingPoint=3]="FloatingPoint",tt[tt.Binary=4]="Binary",tt[tt.Utf8=5]="Utf8",tt[tt.Bool=6]="Bool",tt[tt.Decimal=7]="Decimal",tt[tt.Date=8]="Date",tt[tt.Time=9]="Time",tt[tt.Timestamp=10]="Timestamp",tt[tt.Interval=11]="Interval",tt[tt.List=12]="List",tt[tt.Struct_=13]="Struct_",tt[tt.Union=14]="Union",tt[tt.FixedSizeBinary=15]="FixedSizeBinary",tt[tt.FixedSizeList=16]="FixedSizeList",tt[tt.Map=17]="Map",tt[tt.Duration=18]="Duration",tt[tt.LargeBinary=19]="LargeBinary",tt[tt.LargeUtf8=20]="LargeUtf8",tt[tt.LargeList=21]="LargeList",tt[tt.RunEndEncoded=22]="RunEndEncoded";class rx{constructor(){this.bb=null,this.bb_pos=0}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsField(t,e){return(e||new rx).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsField(t,e){return t.setPosition(t.position()+4),(e||new rx).__init(t.readInt32(t.position())+t.position(),t)}name(t){let e=this.bb.__offset(this.bb_pos,4);return e?this.bb.__string(this.bb_pos+e,t):null}nullable(){let t=this.bb.__offset(this.bb_pos,6);return!!t&&!!this.bb.readInt8(this.bb_pos+t)}typeType(){let t=this.bb.__offset(this.bb_pos,8);return t?this.bb.readUint8(this.bb_pos+t):t_.NONE}type(t){let e=this.bb.__offset(this.bb_pos,10);return e?this.bb.__union(t,this.bb_pos+e):null}dictionary(t){let e=this.bb.__offset(this.bb_pos,12);return e?(t||new rM).__init(this.bb.__indirect(this.bb_pos+e),this.bb):null}children(t,e){let i=this.bb.__offset(this.bb_pos,14);return i?(e||new rx).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+i)+4*t),this.bb):null}childrenLength(){let t=this.bb.__offset(this.bb_pos,14);return t?this.bb.__vector_len(this.bb_pos+t):0}customMetadata(t,e){let i=this.bb.__offset(this.bb_pos,16);return i?(e||new rL).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+i)+4*t),this.bb):null}customMetadataLength(){let t=this.bb.__offset(this.bb_pos,16);return t?this.bb.__vector_len(this.bb_pos+t):0}static startField(t){t.startObject(7)}static addName(t,e){t.addFieldOffset(0,e,0)}static addNullable(t,e){t.addFieldInt8(1,+e,0)}static addTypeType(t,e){t.addFieldInt8(2,e,t_.NONE)}static addType(t,e){t.addFieldOffset(3,e,0)}static addDictionary(t,e){t.addFieldOffset(4,e,0)}static addChildren(t,e){t.addFieldOffset(5,e,0)}static createChildrenVector(t,e){t.startVector(4,e.length,4);for(let i=e.length-1;i>=0;i--)t.addOffset(e[i]);return t.endVector()}static startChildrenVector(t,e){t.startVector(4,e,4)}static addCustomMetadata(t,e){t.addFieldOffset(6,e,0)}static createCustomMetadataVector(t,e){t.startVector(4,e.length,4);for(let i=e.length-1;i>=0;i--)t.addOffset(e[i]);return t.endVector()}static startCustomMetadataVector(t,e){t.startVector(4,e,4)}static endField(t){return t.endObject()}}class rC{constructor(){this.bb=null,this.bb_pos=0}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsSchema(t,e){return(e||new rC).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsSchema(t,e){return t.setPosition(t.position()+4),(e||new rC).__init(t.readInt32(t.position())+t.position(),t)}endianness(){let t=this.bb.__offset(this.bb_pos,4);return t?this.bb.readInt16(this.bb_pos+t):tf.Little}fields(t,e){let i=this.bb.__offset(this.bb_pos,6);return i?(e||new rx).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+i)+4*t),this.bb):null}fieldsLength(){let t=this.bb.__offset(this.bb_pos,6);return t?this.bb.__vector_len(this.bb_pos+t):0}customMetadata(t,e){let i=this.bb.__offset(this.bb_pos,8);return i?(e||new rL).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+i)+4*t),this.bb):null}customMetadataLength(){let t=this.bb.__offset(this.bb_pos,8);return t?this.bb.__vector_len(this.bb_pos+t):0}features(t){let e=this.bb.__offset(this.bb_pos,10);return e?this.bb.readInt64(this.bb.__vector(this.bb_pos+e)+8*t):BigInt(0)}featuresLength(){let t=this.bb.__offset(this.bb_pos,10);return t?this.bb.__vector_len(this.bb_pos+t):0}static startSchema(t){t.startObject(4)}static addEndianness(t,e){t.addFieldInt16(0,e,tf.Little)}static addFields(t,e){t.addFieldOffset(1,e,0)}static createFieldsVector(t,e){t.startVector(4,e.length,4);for(let i=e.length-1;i>=0;i--)t.addOffset(e[i]);return t.endVector()}static startFieldsVector(t,e){t.startVector(4,e,4)}static addCustomMetadata(t,e){t.addFieldOffset(2,e,0)}static createCustomMetadataVector(t,e){t.startVector(4,e.length,4);for(let i=e.length-1;i>=0;i--)t.addOffset(e[i]);return t.endVector()}static startCustomMetadataVector(t,e){t.startVector(4,e,4)}static addFeatures(t,e){t.addFieldOffset(3,e,0)}static createFeaturesVector(t,e){t.startVector(8,e.length,8);for(let i=e.length-1;i>=0;i--)t.addInt64(e[i]);return t.endVector()}static startFeaturesVector(t,e){t.startVector(8,e,8)}static endSchema(t){return t.endObject()}static finishSchemaBuffer(t,e){t.finish(e)}static finishSizePrefixedSchemaBuffer(t,e){t.finish(e,void 0,!0)}static createSchema(t,e,i,r,n){return rC.startSchema(t),rC.addEndianness(t,e),rC.addFields(t,i),rC.addCustomMetadata(t,r),rC.addFeatures(t,n),rC.endSchema(t)}}class rP{constructor(){this.bb=null,this.bb_pos=0}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsFooter(t,e){return(e||new rP).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsFooter(t,e){return t.setPosition(t.position()+4),(e||new rP).__init(t.readInt32(t.position())+t.position(),t)}version(){let t=this.bb.__offset(this.bb_pos,4);return t?this.bb.readInt16(this.bb_pos+t):ty.V1}schema(t){let e=this.bb.__offset(this.bb_pos,6);return e?(t||new rC).__init(this.bb.__indirect(this.bb_pos+e),this.bb):null}dictionaries(t,e){let i=this.bb.__offset(this.bb_pos,8);return i?(e||new rE).__init(this.bb.__vector(this.bb_pos+i)+24*t,this.bb):null}dictionariesLength(){let t=this.bb.__offset(this.bb_pos,8);return t?this.bb.__vector_len(this.bb_pos+t):0}recordBatches(t,e){let i=this.bb.__offset(this.bb_pos,10);return i?(e||new rE).__init(this.bb.__vector(this.bb_pos+i)+24*t,this.bb):null}recordBatchesLength(){let t=this.bb.__offset(this.bb_pos,10);return t?this.bb.__vector_len(this.bb_pos+t):0}customMetadata(t,e){let i=this.bb.__offset(this.bb_pos,12);return i?(e||new rL).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+i)+4*t),this.bb):null}customMetadataLength(){let t=this.bb.__offset(this.bb_pos,12);return t?this.bb.__vector_len(this.bb_pos+t):0}static startFooter(t){t.startObject(5)}static addVersion(t,e){t.addFieldInt16(0,e,ty.V1)}static addSchema(t,e){t.addFieldOffset(1,e,0)}static addDictionaries(t,e){t.addFieldOffset(2,e,0)}static startDictionariesVector(t,e){t.startVector(24,e,8)}static addRecordBatches(t,e){t.addFieldOffset(3,e,0)}static startRecordBatchesVector(t,e){t.startVector(24,e,8)}static addCustomMetadata(t,e){t.addFieldOffset(4,e,0)}static createCustomMetadataVector(t,e){t.startVector(4,e.length,4);for(let i=e.length-1;i>=0;i--)t.addOffset(e[i]);return t.endVector()}static startCustomMetadataVector(t,e){t.startVector(4,e,4)}static endFooter(t){return t.endObject()}static finishFooterBuffer(t,e){t.finish(e)}static finishSizePrefixedFooterBuffer(t,e){t.finish(e,void 0,!0)}}class rk{constructor(t=[],e,i,r=ty.V5){this.fields=t||[],this.metadata=e||new Map,i||(i=rz(this.fields)),this.dictionaries=i,this.metadataVersion=r}get[Symbol.toStringTag](){return"Schema"}get names(){return this.fields.map(t=>t.name)}toString(){return`Schema<{ ${this.fields.map((t,e)=>`${e}: ${t}`).join(", ")} }>`}select(t){let e=new Set(t);return new rk(this.fields.filter(t=>e.has(t.name)),this.metadata)}selectAt(t){return new rk(t.map(t=>this.fields[t]).filter(Boolean),this.metadata)}assign(...t){let e=t[0]instanceof rk?t[0]:new rk(Array.isArray(t[0])?t[0]:t),i=[...this.fields],r=rj(rj(new Map,this.metadata),e.metadata),n=e.fields.filter(t=>{let e=i.findIndex(e=>e.name===t.name);return!~e||(i[e]=t.clone({metadata:rj(rj(new Map,i[e].metadata),t.metadata)}))&&!1}),s=rz(n,new Map);return new rk([...i,...n],r,new Map([...this.dictionaries,...s]))}}rk.prototype.fields=null,rk.prototype.metadata=null,rk.prototype.dictionaries=null;class rV{static new(...t){let[e,i,r,n]=t;return t[0]&&"object"==typeof t[0]&&({name:e}=t[0],void 0===i&&(i=t[0].type),void 0===r&&(r=t[0].nullable),void 0===n&&(n=t[0].metadata)),new rV(`${e}`,i,r,n)}constructor(t,e,i=!1,r){this.name=t,this.type=e,this.nullable=i,this.metadata=r||new Map}get typeId(){return this.type.typeId}get[Symbol.toStringTag](){return"Field"}toString(){return`${this.name}: ${this.type}`}clone(...t){let[e,i,r,n]=t;return t[0]&&"object"==typeof t[0]?{name:e=this.name,type:i=this.type,nullable:r=this.nullable,metadata:n=this.metadata}=t[0]:[e=this.name,i=this.type,r=this.nullable,n=this.metadata]=t,rV.new(e,i,r,n)}}function rj(t,e){return new Map([...t||new Map,...e||new Map])}function rz(t,e=new Map){for(let i=-1,r=t.length;++i<r;){let r=t[i].type;if(er.isDictionary(r)){if(e.has(r.id)){if(e.get(r.id)!==r.dictionary)throw Error("Cannot create Schema containing two different dictionaries with the same Id")}else e.set(r.id,r.dictionary)}r.children&&r.children.length>0&&rz(r.children,e)}return e}rV.prototype.type=null,rV.prototype.name=null,rV.prototype.nullable=null,rV.prototype.metadata=null;class rq{static decode(t){t=new rR(tQ(t));let e=rP.getRootAsFooter(t);return new rG(rk.decode(e.schema(),new Map,e.version()),e)}static encode(t){let e=new rF,i=rk.encode(e,t.schema);for(let i of(rP.startRecordBatchesVector(e,t.numRecordBatches),[...t.recordBatches()].slice().reverse()))rY.encode(e,i);let r=e.endVector();for(let i of(rP.startDictionariesVector(e,t.numDictionaries),[...t.dictionaryBatches()].slice().reverse()))rY.encode(e,i);let n=e.endVector();return rP.startFooter(e),rP.addSchema(e,i),rP.addVersion(e,ty.V5),rP.addRecordBatches(e,r),rP.addDictionaries(e,n),rP.finishFooterBuffer(e,rP.endFooter(e)),e.asUint8Array()}get numRecordBatches(){return this._recordBatches.length}get numDictionaries(){return this._dictionaryBatches.length}constructor(t,e=ty.V5,i,r){this.schema=t,this.version=e,i&&(this._recordBatches=i),r&&(this._dictionaryBatches=r)}*recordBatches(){for(let t,e=-1,i=this.numRecordBatches;++e<i;)(t=this.getRecordBatch(e))&&(yield t)}*dictionaryBatches(){for(let t,e=-1,i=this.numDictionaries;++e<i;)(t=this.getDictionaryBatch(e))&&(yield t)}getRecordBatch(t){return t>=0&&t<this.numRecordBatches&&this._recordBatches[t]||null}getDictionaryBatch(t){return t>=0&&t<this.numDictionaries&&this._dictionaryBatches[t]||null}}class rG extends rq{get numRecordBatches(){return this._footer.recordBatchesLength()}get numDictionaries(){return this._footer.dictionariesLength()}constructor(t,e){super(t,e.version()),this._footer=e}getRecordBatch(t){if(t>=0&&t<this.numRecordBatches){let e=this._footer.recordBatches(t);if(e)return rY.decode(e)}return null}getDictionaryBatch(t){if(t>=0&&t<this.numDictionaries){let e=this._footer.dictionaries(t);if(e)return rY.decode(e)}return null}}class rY{static decode(t){return new rY(t.metaDataLength(),t.bodyLength(),t.offset())}static encode(t,e){let{metaDataLength:i}=e,r=BigInt(e.offset),n=BigInt(e.bodyLength);return rE.createBlock(t,r,i,n)}constructor(t,e,i){this.metaDataLength=t,this.offset=t1(i),this.bodyLength=t1(e)}}var rW={fromIterable:t=>r$(function*(t){let e,i=!1,r=[],n,s,o,a=0;({cmd:s,size:o}=(yield null)||{cmd:"read",size:0});let l=tZ(t)[Symbol.iterator]();try{do if({done:e,value:n}=Number.isNaN(o-a)?l.next():l.next(o-a),!e&&n.byteLength>0&&(r.push(n),a+=n.byteLength),e||o<=a)do({cmd:s,size:o}=yield"peek"===s?tW(r,o)[0]:([n,r,a]=tW(r,o),n));while(o<a);while(!e)}catch(t){i=!0,"function"==typeof l.throw&&l.throw(t)}finally{!1===i&&"function"==typeof l.return&&l.return(null)}return null}(t)),fromAsyncIterable:t=>r$(function(t){return(0,tv.FC)(this,arguments,function*(){let e,i=!1,r=[],n,s,o,a=0;({cmd:s,size:o}=(yield yield(0,tv.qq)(null))||{cmd:"read",size:0});let l=tX(t)[Symbol.asyncIterator]();try{do if({done:e,value:n}=Number.isNaN(o-a)?yield(0,tv.qq)(l.next()):yield(0,tv.qq)(l.next(o-a)),!e&&n.byteLength>0&&(r.push(n),a+=n.byteLength),e||o<=a)do({cmd:s,size:o}=yield yield(0,tv.qq)("peek"===s?tW(r,o)[0]:([n,r,a]=tW(r,o),n)));while(o<a);while(!e)}catch(t){i=!0,"function"==typeof l.throw&&(yield(0,tv.qq)(l.throw(t)))}finally{!1===i&&"function"==typeof l.return&&(yield(0,tv.qq)(l.return(new Uint8Array(0))))}return yield(0,tv.qq)(null)})}(t)),fromDOMStream:t=>r$(function(t){return(0,tv.FC)(this,arguments,function*(){let e=!1,i=!1,r=[],n,s,o,a=0;({cmd:s,size:o}=(yield yield(0,tv.qq)(null))||{cmd:"read",size:0});let l=new rH(t);try{do if({done:e,value:n}=Number.isNaN(o-a)?yield(0,tv.qq)(l.read()):yield(0,tv.qq)(l.read(o-a)),!e&&n.byteLength>0&&(r.push(tQ(n)),a+=n.byteLength),e||o<=a)do({cmd:s,size:o}=yield yield(0,tv.qq)("peek"===s?tW(r,o)[0]:([n,r,a]=tW(r,o),n)));while(o<a);while(!e)}catch(t){i=!0,yield(0,tv.qq)(l.cancel(t))}finally{!1===i?yield(0,tv.qq)(l.cancel()):t.locked&&l.releaseLock()}return yield(0,tv.qq)(null)})}(t)),fromNodeStream:t=>r$(function(t){return(0,tv.FC)(this,arguments,function*(){let e=[],i="error",r=!1,n=null,s,o,a=0,l=[],u;if({cmd:s,size:o}=(yield yield(0,tv.qq)(null))||{cmd:"read",size:0},t.isTTY)return yield yield(0,tv.qq)(new Uint8Array(0)),yield(0,tv.qq)(null);try{e[0]=rK(t,"end"),e[1]=rK(t,"error");do{if(e[2]=rK(t,"readable"),[i,n]=yield(0,tv.qq)(Promise.race(e.map(t=>t[2]))),"error"===i)break;if((r="end"===i)||(Number.isFinite(o-a)?(u=tQ(t.read(o-a))).byteLength<o-a&&(u=tQ(t.read())):u=tQ(t.read()),u.byteLength>0&&(l.push(u),a+=u.byteLength)),r||o<=a)do({cmd:s,size:o}=yield yield(0,tv.qq)("peek"===s?tW(l,o)[0]:([u,l,a]=tW(l,o),u)));while(o<a)}while(!r)}finally{var c;yield(0,tv.qq)((c="error"===i?n:null,u=l=null,new Promise((i,r)=>{for(let[i,r]of e)t.off(i,r);try{let e=t.destroy;e&&e.call(t,c),c=void 0}catch(t){c=t||c}finally{null!=c?r(c):i()}})))}return yield(0,tv.qq)(null)})}(t)),toDOMStream(t,e){throw Error('"toDOMStream" not available in this environment')},toNodeStream(t,e){throw Error('"toNodeStream" not available in this environment')}};let r$=t=>(t.next(),t);class rH{constructor(t){this.source=t,this.reader=null,this.reader=this.source.getReader(),this.reader.closed.catch(()=>{})}get closed(){return this.reader?this.reader.closed.catch(()=>{}):Promise.resolve()}releaseLock(){this.reader&&this.reader.releaseLock(),this.reader=null}cancel(t){return(0,tv.mG)(this,void 0,void 0,function*(){let{reader:e,source:i}=this;e&&(yield e.cancel(t).catch(()=>{})),i&&i.locked&&this.releaseLock()})}read(t){return(0,tv.mG)(this,void 0,void 0,function*(){if(0===t)return{done:null==this.reader,value:new Uint8Array(0)};let e=yield this.reader.read();return e.done||(e.value=tQ(e)),e})}}let rK=(t,e)=>{let i;let r=t=>i([e,t]);return[e,r,new Promise(n=>(i=n)&&t.once(e,r))]},rQ=Object.freeze({done:!0,value:void 0});class rJ{constructor(t){this._json=t}get schema(){return this._json.schema}get batches(){return this._json.batches||[]}get dictionaries(){return this._json.dictionaries||[]}}class rZ{tee(){return this._getDOMStream().tee()}pipe(t,e){return this._getNodeStream().pipe(t,e)}pipeTo(t,e){return this._getDOMStream().pipeTo(t,e)}pipeThrough(t,e){return this._getDOMStream().pipeThrough(t,e)}_getDOMStream(){return this._DOMStream||(this._DOMStream=this.toDOMStream())}_getNodeStream(){return this._nodeStream||(this._nodeStream=this.toNodeStream())}}class rX extends rZ{constructor(){super(),this._values=[],this.resolvers=[],this._closedPromise=new Promise(t=>this._closedPromiseResolve=t)}get closed(){return this._closedPromise}cancel(t){return(0,tv.mG)(this,void 0,void 0,function*(){yield this.return(t)})}write(t){this._ensureOpen()&&(this.resolvers.length<=0?this._values.push(t):this.resolvers.shift().resolve({done:!1,value:t}))}abort(t){this._closedPromiseResolve&&(this.resolvers.length<=0?this._error={error:t}:this.resolvers.shift().reject({done:!0,value:t}))}close(){if(this._closedPromiseResolve){let{resolvers:t}=this;for(;t.length>0;)t.shift().resolve(rQ);this._closedPromiseResolve(),this._closedPromiseResolve=void 0}}[Symbol.asyncIterator](){return this}toDOMStream(t){return rW.toDOMStream(this._closedPromiseResolve||this._error?this:this._values,t)}toNodeStream(t){return rW.toNodeStream(this._closedPromiseResolve||this._error?this:this._values,t)}throw(t){return(0,tv.mG)(this,void 0,void 0,function*(){return yield this.abort(t),rQ})}return(t){return(0,tv.mG)(this,void 0,void 0,function*(){return yield this.close(),rQ})}read(t){return(0,tv.mG)(this,void 0,void 0,function*(){return(yield this.next(t,"read")).value})}peek(t){return(0,tv.mG)(this,void 0,void 0,function*(){return(yield this.next(t,"peek")).value})}next(...t){return this._values.length>0?Promise.resolve({done:!1,value:this._values.shift()}):this._error?Promise.reject({done:!0,value:this._error.error}):this._closedPromiseResolve?new Promise((t,e)=>{this.resolvers.push({resolve:t,reject:e})}):Promise.resolve(rQ)}_ensureOpen(){if(this._closedPromiseResolve)return!0;throw Error("AsyncQueue is closed")}}class r0 extends rX{write(t){if((t=tQ(t)).byteLength>0)return super.write(t)}toString(t=!1){return t?tT(this.toUint8Array(!0)):this.toUint8Array(!1).then(tT)}toUint8Array(t=!1){return t?tW(this._values)[0]:(0,tv.mG)(this,void 0,void 0,function*(){var t,e,i,r;let n=[],s=0;try{for(var o,a=!0,l=(0,tv.KL)(this);!(t=(o=yield l.next()).done);a=!0)r=o.value,a=!1,n.push(r),s+=r.byteLength}catch(t){e={error:t}}finally{try{!a&&!t&&(i=l.return)&&(yield i.call(l))}finally{if(e)throw e.error}}return tW(n,s)[0]})}}class r1{constructor(t){t&&(this.source=new r3(rW.fromIterable(t)))}[Symbol.iterator](){return this}next(t){return this."
     "source.next(t)}throw(t){return this.source.throw(t)}return(t){return this.source.return(t)}peek(t){return this.source.peek(t)}read(t){return this.source.read(t)}}class r2{constructor(t){t instanceof r2?this.source=t.source:t instanceof r0?this.source=new r4(rW.fromAsyncIterable(t)):tz(t)?this.source=new r4(rW.fromNodeStream(t)):tV(t)?this.source=new r4(rW.fromDOMStream(t)):tC(t)?this.source=new r4(rW.fromDOMStream(t.body)):tF(t)?this.source=new r4(rW.fromIterable(t)):tR(t)?this.source=new r4(rW.fromAsyncIterable(t)):tL(t)&&(this.source=new r4(rW.fromAsyncIterable(t)))}[Symbol.asyncIterator](){return this}next(t){return this.source.next(t)}throw(t){return this.source.throw(t)}return(t){return this.source.return(t)}get closed(){return this.source.closed}cancel(t){return this.source.cancel(t)}peek(t){return this.source.peek(t)}read(t){return this.source.read(t)}}class r3{constructor(t){this.source=t}cancel(t){this.return(t)}peek(t){return this.next(t,"peek").value}read(t){return this.next(t,"read").value}next(t,e="read"){return this.source.next({cmd:e,size:t})}throw(t){return Object.create(this.source.throw&&this.source.throw(t)||rQ)}return(t){return Object.create(this.source.return&&this.source.return(t)||rQ)}}class r4{constructor(t){this.source=t,this._closedPromise=new Promise(t=>this._closedPromiseResolve=t)}cancel(t){return(0,tv.mG)(this,void 0,void 0,function*(){yield this.return(t)})}get closed(){return this._closedPromise}read(t){return(0,tv.mG)(this,void 0,void 0,function*(){return(yield this.next(t,"read")).value})}peek(t){return(0,tv.mG)(this,void 0,void 0,function*(){return(yield this.next(t,"peek")).value})}next(t){return(0,tv.mG)(this,arguments,void 0,function*(t,e="read"){return yield this.source.next({cmd:e,size:t})})}throw(t){return(0,tv.mG)(this,void 0,void 0,function*(){let e=this.source.throw&&(yield this.source.throw(t))||rQ;return this._closedPromiseResolve&&this._closedPromiseResolve(),this._closedPromiseResolve=void 0,Object.create(e)})}return(t){return(0,tv.mG)(this,void 0,void 0,function*(){let e=this.source.return&&(yield this.source.return(t))||rQ;return this._closedPromiseResolve&&this._closedPromiseResolve(),this._closedPromiseResolve=void 0,Object.create(e)})}}class r6 extends r1{constructor(t,e){super(),this.position=0,this.buffer=tQ(t),this.size=void 0===e?this.buffer.byteLength:e}readInt32(t){let{buffer:e,byteOffset:i}=this.readAt(t,4);return new DataView(e,i).getInt32(0,!0)}seek(t){return this.position=Math.min(t,this.size),t<this.size}read(t){let{buffer:e,size:i,position:r}=this;return e&&r<i?("number"!=typeof t&&(t=Number.POSITIVE_INFINITY),this.position=Math.min(i,r+Math.min(i-r,t)),e.subarray(r,this.position)):null}readAt(t,e){let i=this.buffer,r=Math.min(this.size,t+e);return i?i.subarray(t,r):new Uint8Array(e)}close(){this.buffer&&(this.buffer=null)}throw(t){return this.close(),{done:!0,value:t}}return(t){return this.close(),{done:!0,value:t}}}class r8 extends r2{constructor(t,e){super(),this.position=0,this._handle=t,"number"==typeof e?this.size=e:this._pending=(0,tv.mG)(this,void 0,void 0,function*(){this.size=(yield t.stat()).size,delete this._pending})}readInt32(t){return(0,tv.mG)(this,void 0,void 0,function*(){let{buffer:e,byteOffset:i}=yield this.readAt(t,4);return new DataView(e,i).getInt32(0,!0)})}seek(t){return(0,tv.mG)(this,void 0,void 0,function*(){return this._pending&&(yield this._pending),this.position=Math.min(t,this.size),t<this.size})}read(t){return(0,tv.mG)(this,void 0,void 0,function*(){this._pending&&(yield this._pending);let{_handle:e,size:i,position:r}=this;if(e&&r<i){"number"!=typeof t&&(t=Number.POSITIVE_INFINITY);let n=r,s=0,o=0,a=Math.min(i,n+Math.min(i-n,t)),l=new Uint8Array(Math.max(0,(this.position=a)-n));for(;(n+=o)<a&&(s+=o)<l.byteLength;)({bytesRead:o}=yield e.read(l,s,l.byteLength-s,n));return l}return null})}readAt(t,e){return(0,tv.mG)(this,void 0,void 0,function*(){this._pending&&(yield this._pending);let{_handle:i,size:r}=this;if(i&&t+e<r){let n=new Uint8Array(Math.min(r,t+e)-t);return(yield i.read(n,0,e,t)).buffer}return new Uint8Array(e)})}close(){return(0,tv.mG)(this,void 0,void 0,function*(){let t=this._handle;this._handle=null,t&&(yield t.close())})}throw(t){return(0,tv.mG)(this,void 0,void 0,function*(){return yield this.close(),{done:!0,value:t}})}return(t){return(0,tv.mG)(this,void 0,void 0,function*(){return yield this.close(),{done:!0,value:t}})}}function r5(t){return t<0&&(t=4294967295+t+1),`0x${t.toString(16)}`}let r7=[1,10,100,1e3,1e4,1e5,1e6,1e7,1e8];class r9{constructor(t){this.buffer=t}high(){return this.buffer[1]}low(){return this.buffer[0]}_times(t){let e=new Uint32Array([this.buffer[1]>>>16,65535&this.buffer[1],this.buffer[0]>>>16,65535&this.buffer[0]]),i=new Uint32Array([t.buffer[1]>>>16,65535&t.buffer[1],t.buffer[0]>>>16,65535&t.buffer[0]]),r=e[3]*i[3];this.buffer[0]=65535&r;let n=r>>>16;return n+=(r=e[2]*i[3])+(r=e[3]*i[2]>>>0),this.buffer[0]+=n<<16,this.buffer[1]=n>>>0<r?65536:0,this.buffer[1]+=n>>>16,this.buffer[1]+=e[1]*i[3]+e[2]*i[2]+e[3]*i[1],this.buffer[1]+=e[0]*i[3]+e[1]*i[2]+e[2]*i[1]+e[3]*i[0]<<16,this}_plus(t){let e=this.buffer[0]+t.buffer[0]>>>0;this.buffer[1]+=t.buffer[1],e<this.buffer[0]>>>0&&++this.buffer[1],this.buffer[0]=e}lessThan(t){return this.buffer[1]<t.buffer[1]||this.buffer[1]===t.buffer[1]&&this.buffer[0]<t.buffer[0]}equals(t){return this.buffer[1]===t.buffer[1]&&this.buffer[0]==t.buffer[0]}greaterThan(t){return t.lessThan(this)}hex(){return`${r5(this.buffer[1])} ${r5(this.buffer[0])}`}}class nt extends r9{times(t){return this._times(t),this}plus(t){return this._plus(t),this}static from(t,e=new Uint32Array(2)){return nt.fromString("string"==typeof t?t:t.toString(),e)}static fromNumber(t,e=new Uint32Array(2)){return nt.fromString(t.toString(),e)}static fromString(t,e=new Uint32Array(2)){let i=t.length,r=new nt(e);for(let e=0;e<i;){let n=8<i-e?8:i-e,s=new nt(new Uint32Array([Number.parseInt(t.slice(e,e+n),10),0])),o=new nt(new Uint32Array([r7[n],0]));r.times(o),r.plus(s),e+=n}return r}static convertArray(t){let e=new Uint32Array(2*t.length);for(let i=-1,r=t.length;++i<r;)nt.from(t[i],new Uint32Array(e.buffer,e.byteOffset+2*i*4,2));return e}static multiply(t,e){return new nt(new Uint32Array(t.buffer)).times(e)}static add(t,e){return new nt(new Uint32Array(t.buffer)).plus(e)}}class ne extends r9{negate(){return this.buffer[0]=~this.buffer[0]+1,this.buffer[1]=~this.buffer[1],0==this.buffer[0]&&++this.buffer[1],this}times(t){return this._times(t),this}plus(t){return this._plus(t),this}lessThan(t){let e=this.buffer[1]<<0,i=t.buffer[1]<<0;return e<i||e===i&&this.buffer[0]<t.buffer[0]}static from(t,e=new Uint32Array(2)){return ne.fromString("string"==typeof t?t:t.toString(),e)}static fromNumber(t,e=new Uint32Array(2)){return ne.fromString(t.toString(),e)}static fromString(t,e=new Uint32Array(2)){let i=t.startsWith("-"),r=t.length,n=new ne(e);for(let e=i?1:0;e<r;){let i=8<r-e?8:r-e,s=new ne(new Uint32Array([Number.parseInt(t.slice(e,e+i),10),0])),o=new ne(new Uint32Array([r7[i],0]));n.times(o),n.plus(s),e+=i}return i?n.negate():n}static convertArray(t){let e=new Uint32Array(2*t.length);for(let i=-1,r=t.length;++i<r;)ne.from(t[i],new Uint32Array(e.buffer,e.byteOffset+2*i*4,2));return e}static multiply(t,e){return new ne(new Uint32Array(t.buffer)).times(e)}static add(t,e){return new ne(new Uint32Array(t.buffer)).plus(e)}}class ni{constructor(t){this.buffer=t}high(){return new ne(new Uint32Array(this.buffer.buffer,this.buffer.byteOffset+8,2))}low(){return new ne(new Uint32Array(this.buffer.buffer,this.buffer.byteOffset,2))}negate(){return this.buffer[0]=~this.buffer[0]+1,this.buffer[1]=~this.buffer[1],this.buffer[2]=~this.buffer[2],this.buffer[3]=~this.buffer[3],0==this.buffer[0]&&++this.buffer[1],0==this.buffer[1]&&++this.buffer[2],0==this.buffer[2]&&++this.buffer[3],this}times(t){let e=new nt(new Uint32Array([this.buffer[3],0])),i=new nt(new Uint32Array([this.buffer[2],0])),r=new nt(new Uint32Array([this.buffer[1],0])),n=new nt(new Uint32Array([this.buffer[0],0])),s=new nt(new Uint32Array([t.buffer[3],0])),o=new nt(new Uint32Array([t.buffer[2],0])),a=new nt(new Uint32Array([t.buffer[1],0])),l=new nt(new Uint32Array([t.buffer[0],0])),u=nt.multiply(n,l);this.buffer[0]=u.low();let c=new nt(new Uint32Array([u.high(),0]));return u=nt.multiply(r,l),c.plus(u),u=nt.multiply(n,a),c.plus(u),this.buffer[1]=c.low(),this.buffer[3]=c.lessThan(u)?1:0,this.buffer[2]=c.high(),new nt(new Uint32Array(this.buffer.buffer,this.buffer.byteOffset+8,2)).plus(nt.multiply(i,l)).plus(nt.multiply(r,a)).plus(nt.multiply(n,o)),this.buffer[3]+=nt.multiply(e,l).plus(nt.multiply(i,a)).plus(nt.multiply(r,o)).plus(nt.multiply(n,s)).low(),this}plus(t){let e=new Uint32Array(4);return e[3]=this.buffer[3]+t.buffer[3]>>>0,e[2]=this.buffer[2]+t.buffer[2]>>>0,e[1]=this.buffer[1]+t.buffer[1]>>>0,e[0]=this.buffer[0]+t.buffer[0]>>>0,e[0]<this.buffer[0]>>>0&&++e[1],e[1]<this.buffer[1]>>>0&&++e[2],e[2]<this.buffer[2]>>>0&&++e[3],this.buffer[3]=e[3],this.buffer[2]=e[2],this.buffer[1]=e[1],this.buffer[0]=e[0],this}hex(){return`${r5(this.buffer[3])} ${r5(this.buffer[2])} ${r5(this.buffer[1])} ${r5(this.buffer[0])}`}static multiply(t,e){return new ni(new Uint32Array(t.buffer)).times(e)}static add(t,e){return new ni(new Uint32Array(t.buffer)).plus(e)}static from(t,e=new Uint32Array(4)){return ni.fromString("string"==typeof t?t:t.toString(),e)}static fromNumber(t,e=new Uint32Array(4)){return ni.fromString(t.toString(),e)}static fromString(t,e=new Uint32Array(4)){let i=t.startsWith("-"),r=t.length,n=new ni(e);for(let e=i?1:0;e<r;){let i=8<r-e?8:r-e,s=new ni(new Uint32Array([Number.parseInt(t.slice(e,e+i),10),0,0,0])),o=new ni(new Uint32Array([r7[i],0,0,0]));n.times(o),n.plus(s),e+=i}return i?n.negate():n}static convertArray(t){let e=new Uint32Array(4*t.length);for(let i=-1,r=t.length;++i<r;)ni.from(t[i],new Uint32Array(e.buffer,e.byteOffset+16*i,4));return e}}class nr extends eP{constructor(t,e,i,r,n=ty.V5){super(),this.nodesIndex=-1,this.buffersIndex=-1,this.bytes=t,this.nodes=e,this.buffers=i,this.dictionaries=r,this.metadataVersion=n}visit(t){return super.visit(t instanceof rV?t.type:t)}visitNull(t,{length:e}=this.nextFieldNode()){return rA({type:t,length:e})}visitBool(t,{length:e,nullCount:i}=this.nextFieldNode()){return rA({type:t,length:e,nullCount:i,nullBitmap:this.readNullBitmap(t,i),data:this.readData(t)})}visitInt(t,{length:e,nullCount:i}=this.nextFieldNode()){return rA({type:t,length:e,nullCount:i,nullBitmap:this.readNullBitmap(t,i),data:this.readData(t)})}visitFloat(t,{length:e,nullCount:i}=this.nextFieldNode()){return rA({type:t,length:e,nullCount:i,nullBitmap:this.readNullBitmap(t,i),data:this.readData(t)})}visitUtf8(t,{length:e,nullCount:i}=this.nextFieldNode()){return rA({type:t,length:e,nullCount:i,nullBitmap:this.readNullBitmap(t,i),valueOffsets:this.readOffsets(t),data:this.readData(t)})}visitLargeUtf8(t,{length:e,nullCount:i}=this.nextFieldNode()){return rA({type:t,length:e,nullCount:i,nullBitmap:this.readNullBitmap(t,i),valueOffsets:this.readOffsets(t),data:this.readData(t)})}visitBinary(t,{length:e,nullCount:i}=this.nextFieldNode()){return rA({type:t,length:e,nullCount:i,nullBitmap:this.readNullBitmap(t,i),valueOffsets:this.readOffsets(t),data:this.readData(t)})}visitLargeBinary(t,{length:e,nullCount:i}=this.nextFieldNode()){return rA({type:t,length:e,nullCount:i,nullBitmap:this.readNullBitmap(t,i),valueOffsets:this.readOffsets(t),data:this.readData(t)})}visitFixedSizeBinary(t,{length:e,nullCount:i}=this.nextFieldNode()){return rA({type:t,length:e,nullCount:i,nullBitmap:this.readNullBitmap(t,i),data:this.readData(t)})}visitDate(t,{length:e,nullCount:i}=this.nextFieldNode()){return rA({type:t,length:e,nullCount:i,nullBitmap:this.readNullBitmap(t,i),data:this.readData(t)})}visitTimestamp(t,{length:e,nullCount:i}=this.nextFieldNode()){return rA({type:t,length:e,nullCount:i,nullBitmap:this.readNullBitmap(t,i),data:this.readData(t)})}visitTime(t,{length:e,nullCount:i}=this.nextFieldNode()){return rA({type:t,length:e,nullCount:i,nullBitmap:this.readNullBitmap(t,i),data:this.readData(t)})}visitDecimal(t,{length:e,nullCount:i}=this.nextFieldNode()){return rA({type:t,length:e,nullCount:i,nullBitmap:this.readNullBitmap(t,i),data:this.readData(t)})}visitList(t,{length:e,nullCount:i}=this.nextFieldNode()){return rA({type:t,length:e,nullCount:i,nullBitmap:this.readNullBitmap(t,i),valueOffsets:this.readOffsets(t),child:this.visit(t.children[0])})}visitStruct(t,{length:e,nullCount:i}=this.nextFieldNode()){return rA({type:t,length:e,nullCount:i,nullBitmap:this.readNullBitmap(t,i),children:this.visitMany(t.children)})}visitUnion(t,{length:e,nullCount:i}=this.nextFieldNode()){return this.metadataVersion<ty.V5&&this.readNullBitmap(t,i),t.mode===td.Sparse?this.visitSparseUnion(t,{length:e,nullCount:i}):this.visitDenseUnion(t,{length:e,nullCount:i})}visitDenseUnion(t,{length:e,nullCount:i}=this.nextFieldNode()){return rA({type:t,length:e,nullCount:i,typeIds:this.readTypeIds(t),valueOffsets:this.readOffsets(t),children:this.visitMany(t.children)})}visitSparseUnion(t,{length:e,nullCount:i}=this.nextFieldNode()){return rA({type:t,length:e,nullCount:i,typeIds:this.readTypeIds(t),children:this.visitMany(t.children)})}visitDictionary(t,{length:e,nullCount:i}=this.nextFieldNode()){return rA({type:t,length:e,nullCount:i,nullBitmap:this.readNullBitmap(t,i),data:this.readData(t.indices),dictionary:this.readDictionary(t)})}visitInterval(t,{length:e,nullCount:i}=this.nextFieldNode()){return rA({type:t,length:e,nullCount:i,nullBitmap:this.readNullBitmap(t,i),data:this.readData(t)})}visitDuration(t,{length:e,nullCount:i}=this.nextFieldNode()){return rA({type:t,length:e,nullCount:i,nullBitmap:this.readNullBitmap(t,i),data:this.readData(t)})}visitFixedSizeList(t,{length:e,nullCount:i}=this.nextFieldNode()){return rA({type:t,length:e,nullCount:i,nullBitmap:this.readNullBitmap(t,i),child:this.visit(t.children[0])})}visitMap(t,{length:e,nullCount:i}=this.nextFieldNode()){return rA({type:t,length:e,nullCount:i,nullBitmap:this.readNullBitmap(t,i),valueOffsets:this.readOffsets(t),child:this.visit(t.children[0])})}nextFieldNode(){return this.nodes[++this.nodesIndex]}nextBufferRange(){return this.buffers[++this.buffersIndex]}readNullBitmap(t,e,i=this.nextBufferRange()){return e>0&&this.readData(t,i)||new Uint8Array(0)}readOffsets(t,e){return this.readData(t,e)}readTypeIds(t,e){return this.readData(t,e)}readData(t,{length:e,offset:i}=this.nextBufferRange()){return this.bytes.subarray(i,i+e)}readDictionary(t){return this.dictionaries.get(t.id)}}class nn extends nr{constructor(t,e,i,r,n){super(new Uint8Array(0),e,i,r,n),this.sources=t}readNullBitmap(t,e,{offset:i}=this.nextBufferRange()){return e<=0?new Uint8Array(0):ra(this.sources[i])}readOffsets(t,{offset:e}=this.nextBufferRange()){return t$(Uint8Array,t$(t.OffsetArrayType,this.sources[e]))}readTypeIds(t,{offset:e}=this.nextBufferRange()){return t$(Uint8Array,t$(t.ArrayType,this.sources[e]))}readData(t,{offset:e}=this.nextBufferRange()){let{sources:i}=this;if(er.isTimestamp(t)||(er.isInt(t)||er.isTime(t))&&64===t.bitWidth||er.isDuration(t)||er.isDate(t)&&t.unit===tu.MILLISECOND)return t$(Uint8Array,ne.convertArray(i[e]));if(er.isDecimal(t))return t$(Uint8Array,ni.convertArray(i[e]));if(er.isBinary(t)||er.isLargeBinary(t)||er.isFixedSizeBinary(t))return function(t){let e=t.join(""),i=new Uint8Array(e.length/2);for(let t=0;t<e.length;t+=2)i[t>>1]=Number.parseInt(e.slice(t,t+2),16);return i}(i[e]);if(er.isBool(t))return ra(i[e]);if(er.isUtf8(t)||er.isLargeUtf8(t))return tE(i[e].join(""));return t$(Uint8Array,t$(t.ArrayType,i[e].map(t=>+t)))}}class ns extends eP{compareSchemas(t,e){return t===e||e instanceof t.constructor&&this.compareManyFields(t.fields,e.fields)}compareManyFields(t,e){return t===e||Array.isArray(t)&&Array.isArray(e)&&t.length===e.length&&t.every((t,i)=>this.compareFields(t,e[i]))}compareFields(t,e){return t===e||e instanceof t.constructor&&t.name===e.name&&t.nullable===e.nullable&&this.visit(t.type,e.type)}}function no(t,e){return e instanceof t.constructor}function na(t,e){return t===e||no(t,e)}function nl(t,e){return t===e||no(t,e)&&t.bitWidth===e.bitWidth&&t.isSigned===e.isSigned}function nu(t,e){return t===e||no(t,e)&&t.precision===e.precision}function nc(t,e){return t===e||no(t,e)&&t.unit===e.unit}function nd(t,e){return t===e||no(t,e)&&t.unit===e.unit&&t.timezone===e.timezone}function nh(t,e){return t===e||no(t,e)&&t.unit===e.unit&&t.bitWidth===e.bitWidth}function np(t,e){return t===e||no(t,e)&&t.mode===e.mode&&t.typeIds.every((t,i)=>t===e.typeIds[i])&&nb.compareManyFields(t.children,e.children)}function ny(t,e){return t===e||no(t,e)&&t.unit===e.unit}function nf(t,e){return t===e||no(t,e)&&t.unit===e.unit}ns.prototype.visitNull=na,ns.prototype.visitBool=na,ns.prototype.visitInt=nl,ns.prototype.visitInt8=nl,ns.prototype.visitInt16=nl,ns.prototype.visitInt32=nl,ns.prototype.visitInt64=nl,ns.prototype.visitUint8=nl,ns.prototype.visitUint16=nl,ns.prototype.visitUint32=nl,ns.prototype.visitUint64=nl,ns.prototype.visitFloat=nu,ns.prototype.visitFloat16=nu,ns.prototype.visitFloat32=nu,ns.prototype.visitFloat64=nu,ns.prototype.visitUtf8=na,ns.prototype.visitLargeUtf8=na,ns.prototype.visitBinary=na,ns.prototype.visitLargeBinary=na,ns.prototype.visitFixedSizeBinary=function(t,e){return t===e||no(t,e)&&t.byteWidth===e.byteWidth},ns.prototype.visitDate=nc,ns.prototype.visitDateDay=nc,ns.prototype.visitDateMillisecond=nc,ns.prototype.visitTimestamp=nd,ns.prototype.visitTimestampSecond=nd,ns.prototype.visitTimestampMillisecond=nd,ns.prototype.visitTimestampMicrosecond=nd,ns.prototype.visitTimestampNanosecond=nd,ns.prototype.visitTime=nh,ns.prototype.visitTimeSecond=nh,ns.prototype.visitTimeMillisecond=nh,ns.prototype.visitTimeMicrosecond=nh,ns.prototype.visitTimeNanosecond=nh,ns.prototype.visitDecimal=na,ns.prototype.visitList=function(t,e){return t===e||no(t,e)&&t.children.length===e.children.length&&nb.compareManyFields(t.children,e.children)},ns.prototype.visitStruct=function(t,e){return t===e||no(t,e)&&t.children.length===e.children.length&&nb.compareManyFields(t.children,e.children)},ns.prototype.visitUnion=np,ns.prototype.visitDenseUnion=np,ns.prototype.visitSparseUnion=np,ns.prototype.visitDictionary=function(t,e){return t===e||no(t,e)&&t.id===e.id&&t.isOrdered===e.isOrdered&&nb.visit(t.indices,e.indices)&&nb.visit(t.dictionary,e.dictionary)},ns.prototype.visitInterval=ny,ns.prototype.visitIntervalDayTime=ny,ns.prototype.visitIntervalYearMonth=ny,ns.prototype.visitDuration=nf,ns.prototype.visitDurationSecond=nf,ns.prototype.visitDurationMillisecond=nf,ns.prototype.visitDurationMicrosecond=nf,ns.prototype.visitDurationNanosecond=nf,ns.prototype.visitFixedSizeList=function(t,e){return t===e||no(t,e)&&t.listSize===e.listSize&&t.children.length===e.children.length&&nb.compareManyFields(t.children,e.children)},ns.prototype.visitMap=function(t,e){return t===e||no(t,e)&&t.keysSorted===e.keysSorted&&t.children.length===e.children.length&&nb.compareManyFields(t.children,e.children)};let nb=new ns;function n_(t,e){return nb.compareSchemas(t,e)}function nm(t,e){return function(t,e){let i=[...t.fields],r=[],n={numBatches:e.reduce((t,e)=>Math.max(t,e.length),0)},s=0,o=0,a=-1,l=e.length,u,c=[];for(;n.numBatches-- >0;){for(o=Number.POSITIVE_INFINITY,a=-1;++a<l;)c[a]=u=e[a].shift(),o=Math.min(o,u?u.length:o);Number.isFinite(o)&&(c=function(t,e,i,r,n){var s;let o=(e+63&-64)>>3;for(let a=-1,l=r.length;++a<l;){let l=i[a],u=null==l?void 0:l.length;if(u>=e)u===e?i[a]=l:(i[a]=l.slice(0,e),n.numBatches=Math.max(n.numBatches,r[a].unshift(l.slice(e,u-e))));else{let r=t[a];t[a]=r.clone({nullable:!0}),i[a]=null!==(s=null==l?void 0:l._changeLengthAndBackfillNullBitmap(e))&&void 0!==s?s:rA({type:r.type,length:e,nullCount:e,nullBitmap:new Uint8Array(o)})}}return i}(i,o,c,e,n),o>0&&(r[s++]=rA({type:new eN(i),length:o,nullCount:0,children:c.slice()})))}return[t=t.assign(i),r.map(e=>new nv(t,e))]}(t,e.map(t=>t.data.concat()))}class ng{constructor(...t){var e,i;let r,n;if(0===t.length)return this.batches=[],this.schema=new rk([]),this._offsets=[0],this;t[0]instanceof rk&&(r=t.shift()),t.at(-1) instanceof Uint32Array&&(n=t.pop());let s=t=>{if(t){if(t instanceof nv)return[t];if(t instanceof ng)return t.batches;if(t instanceof rw){if(t.type instanceof eN)return[new nv(new rk(t.type.children),t)]}else if(Array.isArray(t))return t.flatMap(t=>s(t));else if("function"==typeof t[Symbol.iterator])return[...t].flatMap(t=>s(t));else if("object"==typeof t){let e=Object.keys(t),i=e.map(e=>new rv([t[e]])),[,n]=nm(null!=r?r:new rk(e.map((t,e)=>new rV(String(t),i[e].type,i[e].nullable))),i);return 0===n.length?[new nv(t)]:n}}return[]},o=t.flatMap(t=>s(t));if(!((r=null!==(i=null!=r?r:null===(e=o[0])||void 0===e?void 0:e.schema)&&void 0!==i?i:new rk([]))instanceof rk))throw TypeError("Table constructor expects a [Schema, RecordBatch[]] pair.");for(let t of o){if(!(t instanceof nv))throw TypeError("Table constructor expects a [Schema, RecordBatch[]] pair.");if(!n_(r,t.schema))throw TypeError("Table and inner RecordBatch schemas must be equivalent.")}this.schema=r,this.batches=o,this._offsets=null!=n?n:i5(this.data)}get data(){return this.batches.map(({data:t})=>t)}get numCols(){return this.schema.fields.length}get numRows(){return this.data.reduce((t,e)=>t+e.length,0)}get nullCount(){return -1===this._nullCount&&(this._nullCount=i8(this.data)),this._nullCount}isValid(t){return!1}get(t){return null}at(t){return this.get(i0(t,this.numRows))}set(t,e){}indexOf(t,e){return -1}[Symbol.iterator](){return this.batches.length>0?r_.visit(new rv(this.data)):[][Symbol.iterator]()}toArray(){return[...this]}toString(){return`[
  ${this.toArray().join(",\n  ")}
]`}concat(...t){let e=this.schema;return new ng(e,this.data.concat(t.flatMap(({data:t})=>t)).map(t=>new nv(e,t)))}slice(t,e){let i=this.schema;return[t,e]=iX({length:this.numRows},t,e),new ng(i,i7(this.data,this._offsets,t,e).map(t=>new nv(i,t)))}getChild(t){return this.getChildAt(this.schema.fields.findIndex(e=>e.name===t))}getChildAt(t){if(t>-1&&t<this.schema.fields.length){let e=this.data.map(e=>e.children[t]);if(0===e.length){let{type:i}=this.schema.fields[t],r=rA({type:i,length:0,nullCount:0});e.push(r._changeLengthAndBackfillNullBitmap(this.numRows))}return new rv(e)}return null}setChild(t,e){var i;return this.setChildAt(null===(i=this.schema.fields)||void 0===i?void 0:i.findIndex(e=>e.name===t),e)}setChildAt(t,e){let i=this.schema,r=[...this.batches];if(t>-1&&t<this.numCols){e||(e=new rv([rA({type:new en,length:this.numRows})]));let n=i.fields.slice(),s=n[t].clone({type:e.type}),o=this.schema.fields.map((t,e)=>this.getChildAt(e));[n[t],o[t]]=[s,e],[i,r]=nm(i,o)}return new ng(i,r)}select(t){let e=this.schema.fields.reduce((t,e,i)=>t.set(e.name,i),new Map);return this.selectAt(t.map(t=>e.get(t)).filter(t=>t>-1))}selectAt(t){return new ng(this.schema.selectAt(t),this.batches.map(e=>e.selectAt(t)))}assign(t){let e=this.schema.fields,[i,r]=t.schema.fields.reduce((t,i,r)=>{let[n,s]=t,o=e.findIndex(t=>t.name===i.name);return~o?s[o]=r:n.push(r),t},[[],[]]);return new ng(...nm(this.schema.assign(t.schema),[...e.map((t,e)=>[e,r[e]]).map(([e,i])=>void 0===i?this.getChildAt(e):t.getChildAt(i)),...i.map(e=>t.getChildAt(e))].filter(Boolean)))}}ng[Symbol.toStringTag]=((te=ng.prototype).schema=null,te.batches=[],te._offsets=new Uint32Array([0]),te._nullCount=-1,te[Symbol.isConcatSpreadable]=!0,te.isValid=re(rt),te.get=re(iY.getVisitFn(ts.Struct)),te.set=ri(ih.getVisitFn(ts.Struct)),te.indexOf=rr(rp.getVisitFn(ts.Struct)),"Table");class nv{constructor(...t){switch(t.length){case 2:if([this.schema]=t,!(this.schema instanceof rk)||([,this.data=rA({nullCount:0,type:new eN(this.schema.fields),children:this.schema.fields.map(t=>rA({type:t.type,nullCount:0}))})]=t,!(this.data instanceof rw)))throw TypeError("RecordBatch constructor expects a [Schema, Data] pair.");[this.schema,this.data]=nI(this.schema,this.data.children);break;case 1:{let[e]=t,{fields:i,children:r,length:n}=Object.keys(e).reduce((t,i,r)=>(t.children[r]=e[i],t.length=Math.max(t.length,e[i].length),t.fields[r]=rV.new({name:i,type:e[i].type,nullable:!0}),t),{length:0,fields:[],children:[]}),s=new rk(i),o=rA({type:new eN(i),length:n,children:r,nullCount:0});[this.schema,this.data]=nI(s,o.children,n);break}default:throw TypeError("RecordBatch constructor expects an Object mapping names to child Data, or a [Schema, Data] pair.")}}get dictionaries(){return this._dictionaries||(this._dictionaries=function t(e,i,r=new Map){var n,s;if((null!==(n=null==e?void 0:e.length)&&void 0!==n?n:0)>0&&(null==e?void 0:e.length)===(null==i?void 0:i.length))for(let n=-1,o=e.length;++n<o;){let{type:o}=e[n],a=i[n];for(let e of[a,...(null===(s=null==a?void 0:a.dictionary)||void 0===s?void 0:s.data)||[]])t(o.children,null==e?void 0:e.children,r);if(er.isDictionary(o)){let{id:t}=o;if(r.has(t)){if(r.get(t)!==a.dictionary)throw Error("Cannot create Schema containing two different dictionaries with the same Id")}else(null==a?void 0:a.dictionary)&&r.set(t,a.dictionary)}}return r}(this.schema.fields,this.data.children))}get numCols(){return this.schema.fields.length}get numRows(){return this.data.length}get nullCount(){return this.data.nullCount}isValid(t){return this.data.getValid(t)}get(t){return iY.visit(this.data,t)}at(t){return this.get(i0(t,this.numRows))}set(t,e){return ih.visit(this.data,t,e)}indexOf(t,e){return rp.visit(this.data,t,e)}[Symbol.iterator](){return r_.visit(new rv([this.data]))}toArray(){return[...this]}concat(...t){return new ng(this.schema,[this,...t])}slice(t,e){let[i]=new rv([this.data]).slice(t,e).data;return new nv(this.schema,i)}getChild(t){var e;return this.getChildAt(null===(e=this.schema.fields)||void 0===e?void 0:e.findIndex(e=>e.name===t))}getChildAt(t){return t>-1&&t<this.schema.fields.length?new rv([this.data.children[t]]):null}setChild(t,e){var i;return this.setChildAt(null===(i=this.schema.fields)||void 0===i?void 0:i.findIndex(e=>e.name===t),e)}setChildAt(t,e){let i=this.schema,r=this.data;if(t>-1&&t<this.numCols){e||(e=new rv([rA({type:new en,length:this.numRows})]));let n=i.fields.slice(),s=r.children.slice(),o=n[t].clone({type:e.type});[n[t],s[t]]=[o,e.data[0]],i=new rk(n,new Map(this.schema.metadata)),r=rA({type:new eN(n),children:s})}return new nv(i,r)}select(t){let e=this.schema.select(t),i=new eN(e.fields),r=[];for(let e of t){let t=this.schema.fields.findIndex(t=>t.name===e);~t&&(r[t]=this.data.children[t])}return new nv(e,rA({type:i,length:this.numRows,children:r}))}selectAt(t){let e=this.schema.selectAt(t),i=t.map(t=>this.data.children[t]).filter(Boolean),r=rA({type:new eN(e.fields),length:this.numRows,children:i});return new nv(e,r)}}function nI(t,e,i=e.reduce((t,e)=>Math.max(t,e.length),0)){var r;let n=[...t.fields],s=[...e],o=(i+63&-64)>>3;for(let[a,l]of t.fields.entries()){let t=e[a];t&&t.length===i||(n[a]=l.clone({nullable:!0}),s[a]=null!==(r=null==t?void 0:t._changeLengthAndBackfillNullBitmap(i))&&void 0!==r?r:rA({type:l.type,length:i,nullCount:i,nullBitmap:new Uint8Array(o)}))}return[t.assign(n),rA({type:new eN(n),length:i,children:s})]}nv[Symbol.toStringTag]=((ti=nv.prototype)._nullCount=-1,ti[Symbol.isConcatSpreadable]=!0,"RecordBatch");class nw extends nv{constructor(t){super(t,rA({type:new eN(t.fields),nullCount:0,children:t.fields.map(t=>rA({type:t.type}))}))}}(tr=tm||(tm={}))[tr.BUFFER=0]="BUFFER",(tn=tg||(tg={}))[tn.LZ4_FRAME=0]="LZ4_FRAME",tn[tn.ZSTD=1]="ZSTD";class nS{constructor(){this.bb=null,this.bb_pos=0}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsBodyCompression(t,e){return(e||new nS).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsBodyCompression(t,e){return t.setPosition(t.position()+4),(e||new nS).__init(t.readInt32(t.position())+t.position(),t)}codec(){let t=this.bb.__offset(this.bb_pos,4);return t?this.bb.readInt8(this.bb_pos+t):tg.LZ4_FRAME}method(){let t=this.bb.__offset(this.bb_pos,6);return t?this.bb.readInt8(this.bb_pos+t):tm.BUFFER}static startBodyCompression(t){t.startObject(2)}static addCodec(t,e){t.addFieldInt8(0,e,tg.LZ4_FRAME)}static addMethod(t,e){t.addFieldInt8(1,e,tm.BUFFER)}static endBodyCompression(t){return t.endObject()}static createBodyCompression(t,e,i){return nS.startBodyCompression(t),nS.addCodec(t,e),nS.addMethod(t,i),nS.endBodyCompression(t)}}class nT{constructor(){this.bb=null,this.bb_pos=0}__init(t,e){return this.bb_pos=t,this.bb=e,this}offset(){return this.bb.readInt64(this.bb_pos)}length(){return this.bb.readInt64(this.bb_pos+8)}static sizeOf(){return 16}static createBuffer(t,e,i){return t.prep(8,16),t.writeInt64(BigInt(null!=i?i:0)),t.writeInt64(BigInt(null!=e?e:0)),t.offset()}}class nA{constructor(){this.bb=null,this.bb_pos=0}__init(t,e){return this.bb_pos=t,this.bb=e,this}length(){return this.bb.readInt64(this.bb_pos)}nullCount(){return this.bb.readInt64(this.bb_pos+8)}static sizeOf(){return 16}static createFieldNode(t,e,i){return t.prep(8,16),t.writeInt64(BigInt(null!=i?i:0)),t.writeInt64(BigInt(null!=e?e:0)),t.offset()}}class nE{constructor(){this.bb=null,this.bb_pos=0}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsRecordBatch(t,e){return(e||new nE).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsRecordBatch(t,e){return t.setPosition(t.position()+4),(e||new nE).__init(t.readInt32(t.position())+t.position(),t)}length(){let t=this.bb.__offset(this.bb_pos,4);return t?this.bb.readInt64(this.bb_pos+t):BigInt("0")}nodes(t,e){let i=this.bb.__offset(this.bb_pos,6);return i?(e||new nA).__init(this.bb.__vector(this.bb_pos+i)+16*t,this.bb):null}nodesLength(){let t=this.bb.__offset(this.bb_pos,6);return t?this.bb.__vector_len(this.bb_pos+t):0}buffers(t,e){let i=this.bb.__offset(this.bb_pos,8);return i?(e||new nT).__init(this.bb.__vector(this.bb_pos+i)+16*t,this.bb):null}buffersLength(){let t=this.bb.__offset(this.bb_pos,8);return t?this.bb.__vector_len(this.bb_pos+t):0}compression(t){let e=this.bb.__offset(this.bb_pos,10);return e?(t||new nS).__init(this.bb.__indirect(this.bb_pos+e),this.bb):null}static startRecordBatch(t){t.startObject(4)}static addLength(t,e){t.addFieldInt64(0,e,BigInt("0"))}static addNodes(t,e){t.addFieldOffset(1,e,0)}static startNodesVector(t,e){t.startVector(16,e,8)}static addBuffers(t,e){t.addFieldOffset(2,e,0)}static startBuffersVector(t,e){t.startVector(16,e,8)}static addCompression(t,e){t.addFieldOffset(3,e,0)}static endRecordBatch(t){return t.endObject()}}class nB{constructor(){this.bb=null,this.bb_pos=0}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsDictionaryBatch(t,e){return(e||new nB).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsDictionaryBatch(t,e){return t.setPosition(t.position()+4),(e||new nB).__init(t.readInt32(t.position())+t.position(),t)}id(){let t=this.bb.__offset(this.bb_pos,4);return t?this.bb.readInt64(this.bb_pos+t):BigInt("0")}data(t){let e=this.bb.__offset(this.bb_pos,6);return e?(t||new nE).__init(this.bb.__indirect(this.bb_pos+e),this.bb):null}isDelta(){let t=this.bb.__offset(this.bb_pos,8);return!!t&&!!this.bb.readInt8(this.bb_pos+t)}static startDictionaryBatch(t){t.startObject(3)}static addId(t,e){t.addFieldInt64(0,e,BigInt("0"))}static addData(t,e){t.addFieldOffset(1,e,0)}static addIsDelta(t,e){t.addFieldInt8(2,+e,0)}static endDictionaryBatch(t){return t.endObject()}}class nD{constructor(){this.bb=null,this.bb_pos=0}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsFloatingPoint(t,e){return(e||new nD).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsFloatingPoint(t,e){return t.setPosition(t.position()+4),(e||new nD).__init(t.readInt32(t.position())+t.position(),t)}precision(){let t=this.bb.__offset(this.bb_pos,4);return t?this.bb.readInt16(this.bb_pos+t):ta.HALF}static startFloatingPoint(t){t.startObject(1)}static addPrecision(t,e){t.addFieldInt16(0,e,ta.HALF)}static endFloatingPoint(t){return t.endObject()}static createFloatingPoint(t,e){return nD.startFloatingPoint(t),nD.addPrecision(t,e),nD.endFloatingPoint(t)}}class nO{constructor(){this.bb=null,this.bb_pos=0}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsDecimal(t,e){return(e||new nO).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsDecimal(t,e){return t.setPosition(t.position()+4),(e||new nO).__init(t.readInt32(t.position())+t.position(),t)}precision(){let t=this.bb.__offset(this.bb_pos,4);return t?this.bb.readInt32(this.bb_pos+t):0}scale(){let t=this.bb.__offset(this.bb_pos,6);return t?this.bb.readInt32(this.bb_pos+t):0}bitWidth(){let t=this.bb.__offset(this.bb_pos,8);return t?this.bb.readInt32(this.bb_pos+t):128}static startDecimal(t){t.startObject(3)}static addPrecision(t,e){t.addFieldInt32(0,e,0)}static addScale(t,e){t.addFieldInt32(1,e,0)}static addBitWidth(t,e){t.addFieldInt32(2,e,128)}static endDecimal(t){return t.endObject()}static createDecimal(t,e,i,r){return nO.startDecimal(t),nO.addPrecision(t,e),nO.addScale(t,i),nO.addBitWidth(t,r),nO.endDecimal(t)}}class nN{constructor(){this.bb=null,this.bb_pos=0}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsDate(t,e){return(e||new nN).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsDate(t,e){return t.setPosition(t.position()+4),(e||new nN).__init(t.readInt32(t.position())+t.position(),t)}unit(){let t=this.bb.__offset(this.bb_pos,4);return t?this.bb.readInt16(this.bb_pos+t):tu.MILLISECOND}static startDate(t){t.startObject(1)}static addUnit(t,e){t.addFieldInt16(0,e,tu.MILLISECOND)}static endDate(t){return t.endObject()}static createDate(t,e){return nN.startDate(t),nN.addUnit(t,e),nN.endDate(t)}}class nR{constructor(){this.bb=null,this.bb_pos=0}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsTime(t,e){return(e||new nR).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsTime(t,e){return t.setPosition(t.position()+4),(e||new nR).__init(t.readInt32(t.position())+t.position(),t)}unit(){let t=this.bb.__offset(this.bb_pos,4);return t?this.bb.readInt16(this.bb_pos+t):tl.MILLISECOND}bitWidth(){let t=this.bb.__offset(this.bb_pos,6);return t?this.bb.readInt32(this.bb_pos+t):32}static startTime(t){t.startObject(2)}static addUnit(t,e){t.addFieldInt16(0,e,tl.MILLISECOND)}static addBitWidth(t,e){t.addFieldInt32(1,e,32)}static endTime(t){return t.endObject()}static createTime(t,e,i){return nR.startTime(t),nR.addUnit(t,e),nR.addBitWidth(t,i),nR.endTime(t)}}class nF{constructor(){this.bb=null,this.bb_pos=0}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsTimestamp(t,e){return(e||new nF).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsTimestamp(t,e){return t.setPosition(t.position()+4),(e||new nF).__init(t.readInt32(t.position())+t.position(),t)}unit(){let t=this.bb.__offset(this.bb_pos,4);return t?this.bb.readInt16(this.bb_pos+t):tl.SECOND}timezone(t){let e=this.bb.__offset(this.bb_pos,6);return e?this.bb.__string(this.bb_pos+e,t):null}static startTimestamp(t){t.startObject(2)}static addUnit(t,e){t.addFieldInt16(0,e,tl.SECOND)}static addTimezone(t,e){t.addFieldOffset(1,e,0)}static endTimestamp(t){return t.endObject()}static createTimestamp(t,e,i){return nF.startTimestamp(t),nF.addUnit(t,e),nF.addTimezone(t,i),nF.endTimestamp(t)}}class nL{constructor(){this.bb=null,this.bb_pos=0}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsInterval(t,e){return(e||new nL).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsInterval(t,e){return t.setPosition(t.position()+4),(e||new nL).__init(t.readInt32(t.position())+t.position(),t)}unit(){let t=this.bb.__offset(this.bb_pos,4);return t?this.bb.readInt16(this.bb_pos+t):tc.YEAR_MONTH}static startInterval(t){t.startObject(1)}static addUnit(t,e){t.addFieldInt16(0,e,tc.YEAR_MONTH)}static endInterval(t){return t.endObject()}static createInterval(t,e){return nL.startInterval(t),nL.addUnit(t,e),nL.endInterval(t)}}class nU{constructor(){this.bb=null,this.bb_pos=0}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsDuration(t,e){return(e||new nU).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsDuration(t,e){return t.setPosition(t.position()+4),(e||new nU).__init(t.readInt32(t.position())+t.position(),t)}unit(){let t=this.bb.__offset(this.bb_pos,4);return t?this.bb.readInt16(this.bb_pos+t):tl.MILLISECOND}static startDuration(t){t.startObject(1)}static addUnit(t,e){t.addFieldInt16(0,e,tl.MILLISECOND)}static endDuration(t){return t.endObject()}static createDuration(t,e){return nU.startDuration(t),nU.addUnit(t,e),nU.endDuration(t)}}class nM{constructor(){this.bb=null,this.bb_pos=0}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsUnion(t,e){return(e||new nM).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsUnion(t,e){return t.setPosition(t.position()+4),(e||new nM).__init(t.readInt32(t.position())+t.position(),t)}mode(){let t=this.bb.__offset(this.bb_pos,4);return t?this.bb.readInt16(this.bb_pos+t):td.Sparse}typeIds(t){let e=this.bb.__offset(this.bb_pos,6);return e?this.bb.readInt32(this.bb.__vector(this.bb_pos+e)+4*t):0}typeIdsLength(){let t=this.bb.__offset(this.bb_pos,6);return t?this.bb.__vector_len(this.bb_pos+t):0}typeIdsArray(){let t=this.bb.__offset(this.bb_pos,6);return t?new Int32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+t),this.bb.__vector_len(this.bb_pos+t)):null}static startUnion(t){t.startObject(2)}static addMode(t,e){t.addFieldInt16(0,e,td.Sparse)}static addTypeIds(t,e){t.addFieldOffset(1,e,0)}static createTypeIdsVector(t,e){t.startVector(4,e.length,4);for(let i=e.length-1;i>=0;i--)t.addInt32(e[i]);return t.endVector()}static startTypeIdsVector(t,e){t.startVector(4,e,4)}static endUnion(t){return t.endObject()}static createUnion(t,e,i){return nM.startUnion(t),nM.addMode(t,e),nM.addTypeIds(t,i),nM.endUnion(t)}}class nx{constructor(){this.bb=null,this.bb_pos=0}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsFixedSizeBinary(t,e){return(e||new nx).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsFixedSizeBinary(t,e){return t.setPosition(t.position()+4),(e||new nx).__init(t.readInt32(t.position())+t.position(),t)}byteWidth(){let t=this.bb.__offset(this.bb_pos,4);return t?this.bb.readInt32(this.bb_pos+t):0}static startFixedSizeBinary(t){t.startObject(1)}static addByteWidth(t,e){t.addFieldInt32(0,e,0)}static endFixedSizeBinary(t){return t.endObject()}static createFixedSizeBinary(t,e){return nx.startFixedSizeBinary(t),nx.addByteWidth(t,e),nx.endFixedSizeBinary(t)}}class nC{constructor(){this.bb=null,this.bb_pos=0}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsFixedSizeList(t,e){return(e||new nC).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsFixedSizeList(t,e){return t.setPosition(t.position()+4),(e||new nC).__init(t.readInt32(t.position())+t.position(),t)}listSize(){let t=this.bb.__offset(this.bb_pos,4);return t?this.bb.readInt32(this.bb_pos+t):0}static startFixedSizeList(t){t.startObject(1)}static addListSize(t,e){t.addFieldInt32(0,e,0)}static endFixedSizeList(t){return t.endObject()}static createFixedSizeList(t,e){return nC.startFixedSizeList(t),nC.addListSize(t,e),nC.endFixedSizeList(t)}}class nP{constructor(){this.bb=null,this.bb_pos=0}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsMap(t,e){return(e||new nP).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsMap(t,e){return t.setPosition(t.position()+4),(e||new nP).__init(t.readInt32(t.position())+t.position(),t)}keysSorted(){let t=this.bb.__offset(this.bb_pos,4);return!!t&&!!this.bb.readInt8(this.bb_pos+t)}static startMap(t){t.startObject(1)}static addKeysSorted(t,e){t.addFieldInt8(0,+e,0)}static endMap(t){return t.endObject()}static createMap(t,e){return nP.startMap(t),nP.addKeysSorted(t,e),nP.endMap(t)}}class nk{constructor(){this.bb=null,this.bb_pos=0}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsMessage(t,e){return(e||new nk).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsMessage(t,e){return t.setPosition(t.position()+4),(e||new nk).__init(t.readInt32(t.position())+t.position(),t)}version(){let t=this.bb.__offset(this.bb_pos,4);return t?this.bb.readInt16(this.bb_pos+t):ty.V1}headerType(){let t=this.bb.__offset(this.bb_pos,6);return t?this.bb.readUint8(this.bb_pos+t):th.NONE}header(t){let e=this.bb.__offset(this.bb_pos,8);return e?this.bb.__union(t,this.bb_pos+e):null}bodyLength(){let t=this.bb.__offset(this.bb_pos,10);return t?this.bb.readInt64(this.bb_pos+t):BigInt("0")}customMetadata(t,e){let i=this.bb.__offset(this.bb_pos,12);return i?(e||new rL).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+i)+4*t),this.bb):null}customMetadataLength(){let t=this.bb.__offset(this.bb_pos,12);return t?this.bb.__vector_len(this.bb_pos+t):0}static startMessage(t){t.startObject(5)}static addVersion(t,e){t.addFieldInt16(0,e,ty.V1)}static addHeaderType(t,e){t.addFieldInt8(1,e,th.NONE)}static addHeader(t,e){t.addFieldOffset(2,e,0)}static addBodyLength(t,e){t.addFieldInt64(3,e,BigInt("0"))}static addCustomMetadata(t,e){t.addFieldOffset(4,e,0)}static createCustomMetadataVector(t,e){t.startVector(4,e.length,4);for(let i=e.length-1;i>=0;i--)t.addOffset(e[i]);return t.endVector()}static startCustomMetadataVector(t,e){t.startVector(4,e,4)}static endMessage(t){return t.endObject()}static finishMessageBuffer(t,e){t.finish(e)}static finishSizePrefixedMessageBuffer(t,e){t.finish(e,void 0,!0)}static createMessage(t,e,i,r,n,s){return nk.startMessage(t),nk.addVersion(t,e),nk.addHeaderType(t,i),nk.addHeader(t,r),nk.addBodyLength(t,n),nk.addCustomMetadata(t,s),nk.endMessage(t)}}class nV{constructor(){this.bb=null,this.bb_pos=0}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsNull(t,e){return(e||new nV).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsNull(t,e){return t.setPosition(t.position()+4),(e||new nV).__init(t.readInt32(t.position())+t.position(),t)}static startNull(t){t.startObject(0)}static endNull(t){return t.endObject()}static createNull(t){return nV.startNull(t),nV.endNull(t)}}class nj{constructor(){this.bb=null,this.bb_pos=0}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsBinary(t,e){return(e||new nj).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsBinary(t,e){return t.setPosition(t.position()+4),(e||new nj).__init(t.readInt32(t.position())+t.position(),t)}static startBinary(t){t.startObject(0)}static endBinary(t){return t.endObject()}static createBinary(t){return nj.startBinary(t),nj.endBinary(t)}}class nz{constructor(){this.bb=null,this.bb_pos=0}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsLargeBinary(t,e){return(e||new nz).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsLargeBinary(t,e){return t.setPosition(t.position()+4),(e||new nz).__init(t.readInt32(t.position())+t.position(),t)}static startLargeBinary(t){t.startObject(0)}static endLargeBinary(t){return t.endObject()}static createLargeBinary(t){return nz.startLargeBinary(t),nz.endLargeBinary(t)}}class nq{constructor(){this.bb=null,this.bb_pos=0}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsBool(t,e){return(e||new nq).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsBool(t,e){return t.setPosition(t.position()+4),(e||new nq).__init(t.readInt32(t.position())+t.position(),t)}static startBool(t){t.startObject(0)}static endBool(t){return t.endObject()}static createBool(t){return nq.startBool(t),nq.endBool(t)}}class nG{constructor(){this.bb=null,this.bb_pos=0}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsUtf8(t,e){return(e||new nG).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsUtf8(t,e){return t.setPosition(t.position()+4),(e||new nG).__init(t.readInt32(t.position())+t.position(),t)}static startUtf8(t){t.startObject(0)}static endUtf8(t){return t.endObject()}static createUtf8(t){return nG.startUtf8(t),nG.endUtf8(t)}}class nY{constructor(){this.bb=null,this.bb_pos=0}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsLargeUtf8(t,e){return(e||new nY).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsLargeUtf8(t,e){return t.setPosition(t.position()+4),(e||new nY).__init(t.readInt32(t.position())+t.position(),t)}static startLargeUtf8(t){t.startObject(0)}static endLargeUtf8(t){return t.endObject()}static createLargeUtf8(t){return nY.startLargeUtf8(t),nY.endLargeUtf8(t)}}class nW{constructor(){this.bb=null,this.bb_pos=0}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsList(t,e){return(e||new nW).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsList(t,e){return t.setPosition(t.position()+4),(e||new nW).__init(t.readInt32(t.position())+t.position(),t)}static startList(t){t"
     ".startObject(0)}static endList(t){return t.endObject()}static createList(t){return nW.startList(t),nW.endList(t)}}class n${constructor(){this.bb=null,this.bb_pos=0}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsStruct_(t,e){return(e||new n$).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsStruct_(t,e){return t.setPosition(t.position()+4),(e||new n$).__init(t.readInt32(t.position())+t.position(),t)}static startStruct_(t){t.startObject(0)}static endStruct_(t){return t.endObject()}static createStruct_(t){return n$.startStruct_(t),n$.endStruct_(t)}}class nH extends eP{visit(t,e){return null==t||null==e?void 0:super.visit(t,e)}visitNull(t,e){return nV.startNull(e),nV.endNull(e)}visitInt(t,e){return rU.startInt(e),rU.addBitWidth(e,t.bitWidth),rU.addIsSigned(e,t.isSigned),rU.endInt(e)}visitFloat(t,e){return nD.startFloatingPoint(e),nD.addPrecision(e,t.precision),nD.endFloatingPoint(e)}visitBinary(t,e){return nj.startBinary(e),nj.endBinary(e)}visitLargeBinary(t,e){return nz.startLargeBinary(e),nz.endLargeBinary(e)}visitBool(t,e){return nq.startBool(e),nq.endBool(e)}visitUtf8(t,e){return nG.startUtf8(e),nG.endUtf8(e)}visitLargeUtf8(t,e){return nY.startLargeUtf8(e),nY.endLargeUtf8(e)}visitDecimal(t,e){return nO.startDecimal(e),nO.addScale(e,t.scale),nO.addPrecision(e,t.precision),nO.addBitWidth(e,t.bitWidth),nO.endDecimal(e)}visitDate(t,e){return nN.startDate(e),nN.addUnit(e,t.unit),nN.endDate(e)}visitTime(t,e){return nR.startTime(e),nR.addUnit(e,t.unit),nR.addBitWidth(e,t.bitWidth),nR.endTime(e)}visitTimestamp(t,e){let i=t.timezone&&e.createString(t.timezone)||void 0;return nF.startTimestamp(e),nF.addUnit(e,t.unit),void 0!==i&&nF.addTimezone(e,i),nF.endTimestamp(e)}visitInterval(t,e){return nL.startInterval(e),nL.addUnit(e,t.unit),nL.endInterval(e)}visitDuration(t,e){return nU.startDuration(e),nU.addUnit(e,t.unit),nU.endDuration(e)}visitList(t,e){return nW.startList(e),nW.endList(e)}visitStruct(t,e){return n$.startStruct_(e),n$.endStruct_(e)}visitUnion(t,e){nM.startTypeIdsVector(e,t.typeIds.length);let i=nM.createTypeIdsVector(e,t.typeIds);return nM.startUnion(e),nM.addMode(e,t.mode),nM.addTypeIds(e,i),nM.endUnion(e)}visitDictionary(t,e){let i=this.visit(t.indices,e);return rM.startDictionaryEncoding(e),rM.addId(e,BigInt(t.id)),rM.addIsOrdered(e,t.isOrdered),void 0!==i&&rM.addIndexType(e,i),rM.endDictionaryEncoding(e)}visitFixedSizeBinary(t,e){return nx.startFixedSizeBinary(e),nx.addByteWidth(e,t.byteWidth),nx.endFixedSizeBinary(e)}visitFixedSizeList(t,e){return nC.startFixedSizeList(e),nC.addListSize(e,t.listSize),nC.endFixedSizeList(e)}visitMap(t,e){return nP.startMap(e),nP.addKeysSorted(e,t.keysSorted),nP.endMap(e)}}let nK=new nH;function nQ(t){return new n2(t.count,function t(e){return(e||[]).reduce((e,i)=>[...e,new n6(i.count,(i.VALIDITY||[]).reduce((t,e)=>t+ +(0===e),0)),...t(i.children)],[])}(t.columns),function t(e,i=[]){for(let r=-1,n=(e||[]).length;++r<n;){let n=e[r];n.VALIDITY&&i.push(new n4(i.length,n.VALIDITY.length)),n.TYPE_ID&&i.push(new n4(i.length,n.TYPE_ID.length)),n.OFFSET&&i.push(new n4(i.length,n.OFFSET.length)),n.DATA&&i.push(new n4(i.length,n.DATA.length)),i=t(n.children,i)}return i}(t.columns))}function nJ(t,e){return(t.children||[]).filter(Boolean).map(t=>rV.fromJSON(t,e))}function nZ(t=[]){return new Map(t.map(({key:t,value:e})=>[t,e]))}function nX(t){return new es(t.isSigned,t.bitWidth)}function n0(t,e){let i=t.type.name;switch(i){case"NONE":case"null":return new en;case"binary":return new em;case"largebinary":return new eg;case"utf8":return new ev;case"largeutf8":return new eI;case"bool":return new ew;case"list":return new eO((e||[])[0]);case"struct":case"struct_":return new eN(e||[])}switch(i){case"int":{let e=t.type;return new es(e.isSigned,e.bitWidth)}case"floatingpoint":return new ey(ta[t.type.precision]);case"decimal":{let e=t.type;return new eS(e.scale,e.precision,e.bitWidth)}case"date":return new eT(tu[t.type.unit]);case"time":{let e=t.type;return new eA(tl[e.unit],e.bitWidth)}case"timestamp":{let e=t.type;return new eE(tl[e.unit],e.timezone)}case"interval":return new eB(tc[t.type.unit]);case"duration":return new eD(tl[t.type.unit]);case"union":{let i=t.type,[r,...n]=(i.mode+"").toLowerCase();return new eR(td[r.toUpperCase()+n.join("")],i.typeIds||[],e||[])}case"fixedsizebinary":return new eF(t.type.byteWidth);case"fixedsizelist":return new eL(t.type.listSize,(e||[])[0]);case"map":{let i=t.type;return new eU((e||[])[0],i.keysSorted)}}throw Error(`Unrecognized type: "${i}"`)}class n1{static fromJSON(t,e){let i=new n1(0,ty.V5,e);return i._createHeader=()=>{switch(e){case th.Schema:return rk.fromJSON(t);case th.RecordBatch:return n2.fromJSON(t);case th.DictionaryBatch:return n3.fromJSON(t)}throw Error(`Unrecognized Message type: { name: ${th[e]}, type: ${e} }`)},i}static decode(t){t=new rR(tQ(t));let e=nk.getRootAsMessage(t),i=e.bodyLength(),r=e.version(),n=e.headerType(),s=new n1(i,r,n);return s._createHeader=()=>{switch(n){case th.Schema:return rk.decode(e.header(new rC),new Map,e.version());case th.RecordBatch:return n2.decode(e.header(new nE),e.version());case th.DictionaryBatch:return n3.decode(e.header(new nB),e.version())}throw Error(`Unrecognized Message type: { name: ${th[n]}, type: ${n} }`)},s}static encode(t){let e=new rF,i=-1;return t.isSchema()?i=rk.encode(e,t.header()):t.isRecordBatch()?i=n2.encode(e,t.header()):t.isDictionaryBatch()&&(i=n3.encode(e,t.header())),nk.startMessage(e),nk.addVersion(e,ty.V5),nk.addHeader(e,i),nk.addHeaderType(e,t.headerType),nk.addBodyLength(e,BigInt(t.bodyLength)),nk.finishMessageBuffer(e,nk.endMessage(e)),e.asUint8Array()}static from(t,e=0){if(t instanceof rk)return new n1(0,ty.V5,th.Schema,t);if(t instanceof n2)return new n1(e,ty.V5,th.RecordBatch,t);if(t instanceof n3)return new n1(e,ty.V5,th.DictionaryBatch,t);throw Error(`Unrecognized Message header: ${t}`)}get type(){return this.headerType}get version(){return this._version}get headerType(){return this._headerType}get bodyLength(){return this._bodyLength}header(){return this._createHeader()}isSchema(){return this.headerType===th.Schema}isRecordBatch(){return this.headerType===th.RecordBatch}isDictionaryBatch(){return this.headerType===th.DictionaryBatch}constructor(t,e,i,r){this._version=e,this._headerType=i,this.body=new Uint8Array(0),r&&(this._createHeader=()=>r),this._bodyLength=t1(t)}}class n2{get nodes(){return this._nodes}get length(){return this._length}get buffers(){return this._buffers}constructor(t,e,i){this._nodes=e,this._buffers=i,this._length=t1(t)}}class n3{get id(){return this._id}get data(){return this._data}get isDelta(){return this._isDelta}get length(){return this.data.length}get nodes(){return this.data.nodes}get buffers(){return this.data.buffers}constructor(t,e,i=!1){this._data=t,this._isDelta=i,this._id=t1(e)}}class n4{constructor(t,e){this.offset=t1(t),this.length=t1(e)}}class n6{constructor(t,e){this.length=t1(t),this.nullCount=t1(e)}}function n8(t,e){let i=[];for(let r,n=-1,s=-1,o=t.childrenLength();++n<o;)(r=t.children(n))&&(i[++s]=rV.decode(r,e));return i}function n5(t){let e=new Map;if(t)for(let i,r,n=-1,s=Math.trunc(t.customMetadataLength());++n<s;)(i=t.customMetadata(n))&&null!=(r=i.key())&&e.set(r,i.value());return e}function n7(t){return new es(t.isSigned(),t.bitWidth())}function n9(t,e){let i=t.typeType();switch(i){case t_.NONE:case t_.Null:return new en;case t_.Binary:return new em;case t_.LargeBinary:return new eg;case t_.Utf8:return new ev;case t_.LargeUtf8:return new eI;case t_.Bool:return new ew;case t_.List:return new eO((e||[])[0]);case t_.Struct_:return new eN(e||[])}switch(i){case t_.Int:{let e=t.type(new rU);return new es(e.isSigned(),e.bitWidth())}case t_.FloatingPoint:return new ey(t.type(new nD).precision());case t_.Decimal:{let e=t.type(new nO);return new eS(e.scale(),e.precision(),e.bitWidth())}case t_.Date:return new eT(t.type(new nN).unit());case t_.Time:{let e=t.type(new nR);return new eA(e.unit(),e.bitWidth())}case t_.Timestamp:{let e=t.type(new nF);return new eE(e.unit(),e.timezone())}case t_.Interval:return new eB(t.type(new nL).unit());case t_.Duration:return new eD(t.type(new nU).unit());case t_.Union:{let i=t.type(new nM);return new eR(i.mode(),i.typeIdsArray()||[],e||[])}case t_.FixedSizeBinary:return new eF(t.type(new nx).byteWidth());case t_.FixedSizeList:return new eL(t.type(new nC).listSize(),(e||[])[0]);case t_.Map:{let i=t.type(new nP);return new eU((e||[])[0],i.keysSorted())}}throw Error(`Unrecognized type: "${t_[i]}" (${i})`)}rV.encode=function(t,e){let i=-1,r=-1,n=-1,s=e.type,o=e.typeId;er.isDictionary(s)?(o=s.dictionary.typeId,n=nK.visit(s,t),r=nK.visit(s.dictionary,t)):r=nK.visit(s,t);let a=(s.children||[]).map(e=>rV.encode(t,e)),l=rx.createChildrenVector(t,a),u=e.metadata&&e.metadata.size>0?rx.createCustomMetadataVector(t,[...e.metadata].map(([e,i])=>{let r=t.createString(`${e}`),n=t.createString(`${i}`);return rL.startKeyValue(t),rL.addKey(t,r),rL.addValue(t,n),rL.endKeyValue(t)})):-1;return e.name&&(i=t.createString(e.name)),rx.startField(t),rx.addType(t,r),rx.addTypeType(t,o),rx.addChildren(t,l),rx.addNullable(t,!!e.nullable),-1!==i&&rx.addName(t,i),-1!==n&&rx.addDictionary(t,n),-1!==u&&rx.addCustomMetadata(t,u),rx.endField(t)},rV.decode=function(t,e){let i,r,n,s,o,a;return e&&(a=t.dictionary())?(e.has(i=t1(a.id()))?(s=(s=a.indexType())?n7(s):new el,o=new ex(e.get(i),s,i,a.isOrdered())):(s=(s=a.indexType())?n7(s):new el,e.set(i,n=n9(t,n8(t,e))),o=new ex(n,s,i,a.isOrdered())),r=new rV(t.name(),o,t.nullable(),n5(t))):(n=n9(t,n8(t,e)),r=new rV(t.name(),n,t.nullable(),n5(t))),r||null},rV.fromJSON=function(t,e){let i,r,n,s,o,a;return e&&(s=t.dictionary)?(e.has(i=s.id)?(r=(r=s.indexType)?nX(r):new el,a=new ex(e.get(i),r,i,s.isOrdered)):(r=(r=s.indexType)?nX(r):new el,e.set(i,o=n0(t,nJ(t,e))),a=new ex(o,r,i,s.isOrdered)),n=new rV(t.name,a,t.nullable,nZ(t.metadata))):(o=n0(t,nJ(t,e)),n=new rV(t.name,o,t.nullable,nZ(t.metadata))),n||null},rk.encode=function(t,e){let i=e.fields.map(e=>rV.encode(t,e));rC.startFieldsVector(t,i.length);let r=rC.createFieldsVector(t,i),n=e.metadata&&e.metadata.size>0?rC.createCustomMetadataVector(t,[...e.metadata].map(([e,i])=>{let r=t.createString(`${e}`),n=t.createString(`${i}`);return rL.startKeyValue(t),rL.addKey(t,r),rL.addValue(t,n),rL.endKeyValue(t)})):-1;return rC.startSchema(t),rC.addFields(t,r),rC.addEndianness(t,st?tf.Little:tf.Big),-1!==n&&rC.addCustomMetadata(t,n),rC.endSchema(t)},rk.decode=function(t,e=new Map,i=ty.V5){return new rk(function(t,e){let i=[];for(let r,n=-1,s=-1,o=t.fieldsLength();++n<o;)(r=t.fields(n))&&(i[++s]=rV.decode(r,e));return i}(t,e),n5(t),e,i)},rk.fromJSON=function(t,e=new Map){return new rk((t.fields||[]).filter(Boolean).map(t=>rV.fromJSON(t,e)),nZ(t.metadata),e)},n2.encode=function(t,e){let i=e.nodes||[],r=e.buffers||[];for(let e of(nE.startNodesVector(t,i.length),i.slice().reverse()))n6.encode(t,e);let n=t.endVector();for(let e of(nE.startBuffersVector(t,r.length),r.slice().reverse()))n4.encode(t,e);let s=t.endVector();return nE.startRecordBatch(t),nE.addLength(t,BigInt(e.length)),nE.addNodes(t,n),nE.addBuffers(t,s),nE.endRecordBatch(t)},n2.decode=function(t,e=ty.V5){if(null!==t.compression())throw Error("Record batch compression not implemented");return new n2(t.length(),function(t){let e=[];for(let i,r=-1,n=-1,s=t.nodesLength();++r<s;)(i=t.nodes(r))&&(e[++n]=n6.decode(i));return e}(t),function(t,e){let i=[];for(let r,n=-1,s=-1,o=t.buffersLength();++n<o;)(r=t.buffers(n))&&(e<ty.V4&&(r.bb_pos+=8*(n+1)),i[++s]=n4.decode(r));return i}(t,e))},n2.fromJSON=nQ,n3.encode=function(t,e){let i=n2.encode(t,e.data);return nB.startDictionaryBatch(t),nB.addId(t,BigInt(e.id)),nB.addIsDelta(t,e.isDelta),nB.addData(t,i),nB.endDictionaryBatch(t)},n3.decode=function(t,e=ty.V5){return new n3(n2.decode(t.data(),e),t.id(),t.isDelta())},n3.fromJSON=function(t){return new n3(nQ(t.data),t.id,t.isDelta)},n6.encode=function(t,e){return nA.createFieldNode(t,BigInt(e.length),BigInt(e.nullCount))},n6.decode=function(t){return new n6(t.length(),t.nullCount())},n4.encode=function(t,e){return nT.createBuffer(t,BigInt(e.offset),BigInt(e.length))},n4.decode=function(t){return new n4(t.offset(),t.length())};let st=(()=>{let t=new ArrayBuffer(2);return new DataView(t).setInt16(0,256,!0),256===new Int16Array(t)[0]})(),se=t=>`Expected ${th[t]} Message in stream, but was null or length 0.`,si=t=>`Header pointer of flatbuffer-encoded ${th[t]} Message is null or length 0.`,sr=(t,e)=>`Expected to read ${t} metadata bytes, but only read ${e}.`,sn=(t,e)=>`Expected to read ${t} bytes for message body, but only read ${e}.`;class ss{constructor(t){this.source=t instanceof r1?t:new r1(t)}[Symbol.iterator](){return this}next(){let t;return(t=this.readMetadataLength()).done||-1===t.value&&(t=this.readMetadataLength()).done||(t=this.readMetadata(t.value)).done?rQ:t}throw(t){return this.source.throw(t)}return(t){return this.source.return(t)}readMessage(t){let e;if((e=this.next()).done)return null;if(null!=t&&e.value.headerType!==t)throw Error(se(t));return e.value}readMessageBody(t){if(t<=0)return new Uint8Array(0);let e=tQ(this.source.read(t));if(e.byteLength<t)throw Error(sn(t,e.byteLength));return e.byteOffset%8==0&&e.byteOffset+e.byteLength<=e.buffer.byteLength?e:e.slice()}readSchema(t=!1){let e=th.Schema,i=this.readMessage(e),r=null==i?void 0:i.header();if(t&&!r)throw Error(si(e));return r}readMetadataLength(){let t=this.source.read(sl),e=t&&new rR(t),i=(null==e?void 0:e.readInt32(0))||0;return{done:0===i,value:i}}readMetadata(t){let e=this.source.read(t);if(!e)return rQ;if(e.byteLength<t)throw Error(sr(t,e.byteLength));return{done:!1,value:n1.decode(e)}}}class so{constructor(t,e){this.source=t instanceof r2?t:tx(t)?new r8(t,e):new r2(t)}[Symbol.asyncIterator](){return this}next(){return(0,tv.mG)(this,void 0,void 0,function*(){let t;return(t=yield this.readMetadataLength()).done||-1===t.value&&(t=yield this.readMetadataLength()).done||(t=yield this.readMetadata(t.value)).done?rQ:t})}throw(t){return(0,tv.mG)(this,void 0,void 0,function*(){return yield this.source.throw(t)})}return(t){return(0,tv.mG)(this,void 0,void 0,function*(){return yield this.source.return(t)})}readMessage(t){return(0,tv.mG)(this,void 0,void 0,function*(){let e;if((e=yield this.next()).done)return null;if(null!=t&&e.value.headerType!==t)throw Error(se(t));return e.value})}readMessageBody(t){return(0,tv.mG)(this,void 0,void 0,function*(){if(t<=0)return new Uint8Array(0);let e=tQ((yield this.source.read(t)));if(e.byteLength<t)throw Error(sn(t,e.byteLength));return e.byteOffset%8==0&&e.byteOffset+e.byteLength<=e.buffer.byteLength?e:e.slice()})}readSchema(){return(0,tv.mG)(this,arguments,void 0,function*(t=!1){let e=th.Schema,i=yield this.readMessage(e),r=null==i?void 0:i.header();if(t&&!r)throw Error(si(e));return r})}readMetadataLength(){return(0,tv.mG)(this,void 0,void 0,function*(){let t=yield this.source.read(sl),e=t&&new rR(t),i=(null==e?void 0:e.readInt32(0))||0;return{done:0===i,value:i}})}readMetadata(t){return(0,tv.mG)(this,void 0,void 0,function*(){let e=yield this.source.read(t);if(!e)return rQ;if(e.byteLength<t)throw Error(sr(t,e.byteLength));return{done:!1,value:n1.decode(e)}})}}class sa extends ss{constructor(t){super(new Uint8Array(0)),this._schema=!1,this._body=[],this._batchIndex=0,this._dictionaryIndex=0,this._json=t instanceof rJ?t:new rJ(t)}next(){let{_json:t}=this;if(!this._schema)return this._schema=!0,{done:!1,value:n1.fromJSON(t.schema,th.Schema)};if(this._dictionaryIndex<t.dictionaries.length){let e=t.dictionaries[this._dictionaryIndex++];return this._body=e.data.columns,{done:!1,value:n1.fromJSON(e,th.DictionaryBatch)}}if(this._batchIndex<t.batches.length){let e=t.batches[this._batchIndex++];return this._body=e.columns,{done:!1,value:n1.fromJSON(e,th.RecordBatch)}}return this._body=[],rQ}readMessageBody(t){return function t(e){return(e||[]).reduce((e,i)=>[...e,...i.VALIDITY&&[i.VALIDITY]||[],...i.TYPE_ID&&[i.TYPE_ID]||[],...i.OFFSET&&[i.OFFSET]||[],...i.DATA&&[i.DATA]||[],...t(i.children)],[])}(this._body)}readMessage(t){let e;if((e=this.next()).done)return null;if(null!=t&&e.value.headerType!==t)throw Error(se(t));return e.value}readSchema(){let t=th.Schema,e=this.readMessage(t),i=null==e?void 0:e.header();if(!e||!i)throw Error(si(t));return i}}let sl=4,su="ARROW1",sc=new Uint8Array(su.length);for(let t=0;t<su.length;t+=1)sc[t]=su.codePointAt(t);function sd(t,e=0){for(let i=-1,r=sc.length;++i<r;)if(sc[i]!==t[e+i])return!1;return!0}let sh=sc.length,sp=sh+sl,sy=2*sh+sl;class sf extends rZ{constructor(t){super(),this._impl=t}get closed(){return this._impl.closed}get schema(){return this._impl.schema}get autoDestroy(){return this._impl.autoDestroy}get dictionaries(){return this._impl.dictionaries}get numDictionaries(){return this._impl.numDictionaries}get numRecordBatches(){return this._impl.numRecordBatches}get footer(){return this._impl.isFile()?this._impl.footer:null}isSync(){return this._impl.isSync()}isAsync(){return this._impl.isAsync()}isFile(){return this._impl.isFile()}isStream(){return this._impl.isStream()}next(){return this._impl.next()}throw(t){return this._impl.throw(t)}return(t){return this._impl.return(t)}cancel(){return this._impl.cancel()}reset(t){return this._impl.reset(t),this._DOMStream=void 0,this._nodeStream=void 0,this}open(t){let e=this._impl.open(t);return tR(e)?e.then(()=>this):this}readRecordBatch(t){return this._impl.isFile()?this._impl.readRecordBatch(t):null}[Symbol.iterator](){return this._impl[Symbol.iterator]()}[Symbol.asyncIterator](){return this._impl[Symbol.asyncIterator]()}toDOMStream(){return rW.toDOMStream(this.isSync()?{[Symbol.iterator]:()=>this}:{[Symbol.asyncIterator]:()=>this})}toNodeStream(){return rW.toNodeStream(this.isSync()?{[Symbol.iterator]:()=>this}:{[Symbol.asyncIterator]:()=>this},{objectMode:!0})}static throughNode(t){throw Error('"throughNode" not available in this environment')}static throughDOM(t,e){throw Error('"throughDOM" not available in this environment')}static from(t){return t instanceof sf?t:tU(t)?new sb(new sA(t)):tx(t)?function(t){return(0,tv.mG)(this,void 0,void 0,function*(){let{size:e}=yield t.stat(),i=new r8(t,e);return e>=sy&&sd((yield i.readAt(0,sh+7&-8)))?new sg(new sT(i)):new s_(new sw(i))})}(t):tR(t)?(0,tv.mG)(this,void 0,void 0,function*(){return yield sf.from((yield t))}):tC(t)||tV(t)||tz(t)||tL(t)?function(t){return(0,tv.mG)(this,void 0,void 0,function*(){let e=yield t.peek(sh+7&-8);return e&&e.byteLength>=4?sd(e)?new sm(new sS((yield t.read()))):new s_(new sw(t)):new s_(new sw(function(){return(0,tv.FC)(this,arguments,function*(){})}()))})}(new r2(t)):function(t){let e=t.peek(sh+7&-8);return e&&e.byteLength>=4?sd(e)?new sm(new sS(t.read())):new sb(new sI(t)):new sb(new sI(function*(){}()))}(new r1(t))}static readAll(t){return t instanceof sf?t.isSync()?sB(t):sD(t):tU(t)||ArrayBuffer.isView(t)||tF(t)||tM(t)?sB(t):sD(t)}}class sb extends sf{constructor(t){super(t),this._impl=t}readAll(){return[...this]}[Symbol.iterator](){return this._impl[Symbol.iterator]()}[Symbol.asyncIterator](){return(0,tv.FC)(this,arguments,function*(){yield(0,tv.qq)((yield*(0,tv.V2)((0,tv.KL)(this[Symbol.iterator]()))))})}}class s_ extends sf{constructor(t){super(t),this._impl=t}readAll(){return(0,tv.mG)(this,void 0,void 0,function*(){var t,e,i,r;let n=[];try{for(var s,o=!0,a=(0,tv.KL)(this);!(t=(s=yield a.next()).done);o=!0)r=s.value,o=!1,n.push(r)}catch(t){e={error:t}}finally{try{!o&&!t&&(i=a.return)&&(yield i.call(a))}finally{if(e)throw e.error}}return n})}[Symbol.iterator](){throw Error("AsyncRecordBatchStreamReader is not Iterable")}[Symbol.asyncIterator](){return this._impl[Symbol.asyncIterator]()}}class sm extends sb{constructor(t){super(t),this._impl=t}}class sg extends s_{constructor(t){super(t),this._impl=t}}class sv{get numDictionaries(){return this._dictionaryIndex}get numRecordBatches(){return this._recordBatchIndex}constructor(t=new Map){this.closed=!1,this.autoDestroy=!0,this._dictionaryIndex=0,this._recordBatchIndex=0,this.dictionaries=t}isSync(){return!1}isAsync(){return!1}isFile(){return!1}isStream(){return!1}reset(t){return this._dictionaryIndex=0,this._recordBatchIndex=0,this.schema=t,this.dictionaries=new Map,this}_loadRecordBatch(t,e){let i=this._loadVectors(t,e,this.schema.fields),r=rA({type:new eN(this.schema.fields),length:t.length,children:i});return new nv(this.schema,r)}_loadDictionaryBatch(t,e){let{id:i,isDelta:r}=t,{dictionaries:n,schema:s}=this,o=n.get(i),a=s.dictionaries.get(i),l=this._loadVectors(t.data,e,[a]);return(o&&r?o.concat(new rv(l)):new rv(l)).memoize()}_loadVectors(t,e,i){return new nr(e,t.nodes,t.buffers,this.dictionaries,this.schema.metadataVersion).visitMany(i)}}class sI extends sv{constructor(t,e){super(e),this._reader=tU(t)?new sa(this._handle=t):new ss(this._handle=t)}isSync(){return!0}isStream(){return!0}[Symbol.iterator](){return this}cancel(){!this.closed&&(this.closed=!0)&&(this.reset()._reader.return(),this._reader=null,this.dictionaries=null)}open(t){return this.closed||(this.autoDestroy=sE(this,t),this.schema||(this.schema=this._reader.readSchema())||this.cancel()),this}throw(t){return!this.closed&&this.autoDestroy&&(this.closed=!0)?this.reset()._reader.throw(t):rQ}return(t){return!this.closed&&this.autoDestroy&&(this.closed=!0)?this.reset()._reader.return(t):rQ}next(){let t;if(this.closed)return rQ;let{_reader:e}=this;for(;t=this._readNextMessageAndValidate();)if(t.isSchema())this.reset(t.header());else if(t.isRecordBatch()){this._recordBatchIndex++;let i=t.header(),r=e.readMessageBody(t.bodyLength);return{done:!1,value:this._loadRecordBatch(i,r)}}else if(t.isDictionaryBatch()){this._dictionaryIndex++;let i=t.header(),r=e.readMessageBody(t.bodyLength),n=this._loadDictionaryBatch(i,r);this.dictionaries.set(i.id,n)}return this.schema&&0===this._recordBatchIndex?(this._recordBatchIndex++,{done:!1,value:new nw(this.schema)}):this.return()}_readNextMessageAndValidate(t){return this._reader.readMessage(t)}}class sw extends sv{constructor(t,e){super(e),this._reader=new so(this._handle=t)}isAsync(){return!0}isStream(){return!0}[Symbol.asyncIterator](){return this}cancel(){return(0,tv.mG)(this,void 0,void 0,function*(){!this.closed&&(this.closed=!0)&&(yield this.reset()._reader.return(),this._reader=null,this.dictionaries=null)})}open(t){return(0,tv.mG)(this,void 0,void 0,function*(){return this.closed||(this.autoDestroy=sE(this,t),this.schema||(this.schema=yield this._reader.readSchema())||(yield this.cancel())),this})}throw(t){return(0,tv.mG)(this,void 0,void 0,function*(){return!this.closed&&this.autoDestroy&&(this.closed=!0)?yield this.reset()._reader.throw(t):rQ})}return(t){return(0,tv.mG)(this,void 0,void 0,function*(){return!this.closed&&this.autoDestroy&&(this.closed=!0)?yield this.reset()._reader.return(t):rQ})}next(){return(0,tv.mG)(this,void 0,void 0,function*(){let t;if(this.closed)return rQ;let{_reader:e}=this;for(;t=yield this._readNextMessageAndValidate();)if(t.isSchema())yield this.reset(t.header());else if(t.isRecordBatch()){this._recordBatchIndex++;let i=t.header(),r=yield e.readMessageBody(t.bodyLength);return{done:!1,value:this._loadRecordBatch(i,r)}}else if(t.isDictionaryBatch()){this._dictionaryIndex++;let i=t.header(),r=yield e.readMessageBody(t.bodyLength),n=this._loadDictionaryBatch(i,r);this.dictionaries.set(i.id,n)}return this.schema&&0===this._recordBatchIndex?(this._recordBatchIndex++,{done:!1,value:new nw(this.schema)}):yield this.return()})}_readNextMessageAndValidate(t){return(0,tv.mG)(this,void 0,void 0,function*(){return yield this._reader.readMessage(t)})}}class sS extends sI{get footer(){return this._footer}get numDictionaries(){return this._footer?this._footer.numDictionaries:0}get numRecordBatches(){return this._footer?this._footer.numRecordBatches:0}constructor(t,e){super(t instanceof r6?t:new r6(t),e)}isSync(){return!0}isFile(){return!0}open(t){if(!this.closed&&!this._footer)for(let t of(this.schema=(this._footer=this._readFooter()).schema,this._footer.dictionaryBatches()))t&&this._readDictionaryBatch(this._dictionaryIndex++);return super.open(t)}readRecordBatch(t){var e;if(this.closed)return null;this._footer||this.open();let i=null===(e=this._footer)||void 0===e?void 0:e.getRecordBatch(t);if(i&&this._handle.seek(i.offset)){let t=this._reader.readMessage(th.RecordBatch);if(null==t?void 0:t.isRecordBatch()){let e=t.header(),i=this._reader.readMessageBody(t.bodyLength);return this._loadRecordBatch(e,i)}}return null}_readDictionaryBatch(t){var e;let i=null===(e=this._footer)||void 0===e?void 0:e.getDictionaryBatch(t);if(i&&this._handle.seek(i.offset)){let t=this._reader.readMessage(th.DictionaryBatch);if(null==t?void 0:t.isDictionaryBatch()){let e=t.header(),i=this._reader.readMessageBody(t.bodyLength),r=this._loadDictionaryBatch(e,i);this.dictionaries.set(e.id,r)}}}_readFooter(){let{_handle:t}=this,e=t.size-sp,i=t.readInt32(e),r=t.readAt(e-i,i);return rq.decode(r)}_readNextMessageAndValidate(t){var e;if(this._footer||this.open(),this._footer&&this._recordBatchIndex<this.numRecordBatches){let i=null===(e=this._footer)||void 0===e?void 0:e.getRecordBatch(this._recordBatchIndex);if(i&&this._handle.seek(i.offset))return this._reader.readMessage(t)}return null}}class sT extends sw{get footer(){return this._footer}get numDictionaries(){return this._footer?this._footer.numDictionaries:0}get numRecordBatches(){return this._footer?this._footer.numRecordBatches:0}constructor(t,...e){super(t instanceof r8?t:new r8(t,"number"!=typeof e[0]?e.shift():void 0),e[0]instanceof Map?e.shift():void 0)}isFile(){return!0}isAsync(){return!0}open(t){let e=Object.create(null,{open:{get:()=>super.open}});return(0,tv.mG)(this,void 0,void 0,function*(){if(!this.closed&&!this._footer)for(let t of(this.schema=(this._footer=yield this._readFooter()).schema,this._footer.dictionaryBatches()))t&&(yield this._readDictionaryBatch(this._dictionaryIndex++));return yield e.open.call(this,t)})}readRecordBatch(t){return(0,tv.mG)(this,void 0,void 0,function*(){var e;if(this.closed)return null;this._footer||(yield this.open());let i=null===(e=this._footer)||void 0===e?void 0:e.getRecordBatch(t);if(i&&(yield this._handle.seek(i.offset))){let t=yield this._reader.readMessage(th.RecordBatch);if(null==t?void 0:t.isRecordBatch()){let e=t.header(),i=yield this._reader.readMessageBody(t.bodyLength);return this._loadRecordBatch(e,i)}}return null})}_readDictionaryBatch(t){return(0,tv.mG)(this,void 0,void 0,function*(){var e;let i=null===(e=this._footer)||void 0===e?void 0:e.getDictionaryBatch(t);if(i&&(yield this._handle.seek(i.offset))){let t=yield this._reader.readMessage(th.DictionaryBatch);if(null==t?void 0:t.isDictionaryBatch()){let e=t.header(),i=yield this._reader.readMessageBody(t.bodyLength),r=this._loadDictionaryBatch(e,i);this.dictionaries.set(e.id,r)}}})}_readFooter(){return(0,tv.mG)(this,void 0,void 0,function*(){let{_handle:t}=this;t._pending&&(yield t._pending);let e=t.size-sp,i=yield t.readInt32(e),r=yield t.readAt(e-i,i);return rq.decode(r)})}_readNextMessageAndValidate(t){return(0,tv.mG)(this,void 0,void 0,function*(){if(this._footer||(yield this.open()),this._footer&&this._recordBatchIndex<this.numRecordBatches){let e=this._footer.getRecordBatch(this._recordBatchIndex);if(e&&(yield this._handle.seek(e.offset)))return yield this._reader.readMessage(t)}return null})}}class sA extends sI{constructor(t,e){super(t,e)}_loadVectors(t,e,i){return new nn(e,t.nodes,t.buffers,this.dictionaries,this.schema.metadataVersion).visitMany(i)}}function sE(t,e){return e&&"boolean"==typeof e.autoDestroy?e.autoDestroy:t.autoDestroy}function*sB(t){let e=sf.from(t);try{if(!e.open({autoDestroy:!1}).closed)do yield e;while(!e.reset().open().closed)}finally{e.cancel()}}function sD(t){return(0,tv.FC)(this,arguments,function*(){let e=yield(0,tv.qq)(sf.from(t));try{if(!(yield(0,tv.qq)(e.open({autoDestroy:!1}))).closed)do yield yield(0,tv.qq)(e);while(!(yield(0,tv.qq)(e.reset().open())).closed)}finally{yield(0,tv.qq)(e.cancel())}})}class sO extends eP{static assemble(...t){let e=t=>t.flatMap(t=>Array.isArray(t)?e(t):t instanceof nv?t.data.children:t.data),i=new sO;return i.visitMany(e(t)),i}constructor(){super(),this._byteLength=0,this._nodes=[],this._buffers=[],this._bufferRegions=[]}visit(t){if(t instanceof rv)return this.visitMany(t.data),this;let{type:e}=t;if(!er.isDictionary(e)){let{length:i}=t;if(i>2147483647)throw RangeError("Cannot write arrays larger than 2^31 - 1 in length");if(er.isUnion(e))this.nodes.push(new n6(i,0));else{let{nullCount:r}=t;er.isNull(e)||sN.call(this,r<=0?new Uint8Array(0):ro(t.offset,i,t.nullBitmap)),this.nodes.push(new n6(i,r))}}return super.visit(t)}visitNull(t){return this}visitDictionary(t){return this.visit(t.clone(t.type.indices))}get nodes(){return this._nodes}get buffers(){return this._buffers}get byteLength(){return this._byteLength}get bufferRegions(){return this._bufferRegions}}function sN(t){let e=t.byteLength+7&-8;return this.buffers.push(t),this.bufferRegions.push(new n4(this._byteLength,e)),this._byteLength+=e,this}function sR(t){return sN.call(this,t.values.subarray(0,t.length*t.stride))}function sF(t){let{length:e,values:i,valueOffsets:r}=t,n=t1(r[0]),s=Math.min(t1(r[e])-n,i.byteLength-n);return sN.call(this,t0(-n,e+1,r)),sN.call(this,i.subarray(n,n+s)),this}function sL(t){let{length:e,valueOffsets:i}=t;if(i){let{0:r,[e]:n}=i;return sN.call(this,t0(-r,e+1,i)),this.visit(t.children[0].slice(r,n-r))}return this.visit(t.children[0])}function sU(t){return this.visitMany(t.type.children.map((e,i)=>t.children[i]).filter(Boolean))[0]}sO.prototype.visitBool=function(t){let e;return t.nullCount>=t.length?sN.call(this,new Uint8Array(0)):(e=t.values)instanceof Uint8Array?sN.call(this,ro(t.offset,t.length,e)):sN.call(this,ra(t.values))},sO.prototype.visitInt=sR,sO.prototype.visitFloat=sR,sO.prototype.visitUtf8=sF,sO.prototype.visitLargeUtf8=sF,sO.prototype.visitBinary=sF,sO.prototype.visitLargeBinary=sF,sO.prototype.visitFixedSizeBinary=sR,sO.prototype.visitDate=sR,sO.prototype.visitTimestamp=sR,sO.prototype.visitTime=sR,sO.prototype.visitDecimal=sR,sO.prototype.visitList=sL,sO.prototype.visitStruct=sU,sO.prototype.visitUnion=function(t){var e;let{type:i,length:r,typeIds:n,valueOffsets:s}=t;if(sN.call(this,n),i.mode===td.Sparse)return sU.call(this,t);if(i.mode===td.Dense){if(t.offset<=0)return sN.call(this,s),sU.call(this,t);{let o=new Int32Array(r),a=Object.create(null),l=Object.create(null);for(let t,i,u=-1;++u<r;)void 0!==(t=n[u])&&(void 0===(i=a[t])&&(i=a[t]=s[u]),o[u]=s[u]-i,l[t]=(null!==(e=l[t])&&void 0!==e?e:0)+1);sN.call(this,o),this.visitMany(t.children.map((t,e)=>{let n=i.typeIds[e],s=a[n],o=l[n];return t.slice(s,Math.min(r,o))}))}}return this},sO.prototype.visitInterval=sR,sO.prototype.visitDuration=sR,sO.prototype.visitFixedSizeList=sL,sO.prototype.visitMap=sL;class sM extends rZ{static throughNode(t){throw Error('"throughNode" not available in this environment')}static throughDOM(t,e){throw Error('"throughDOM" not available in this environment')}constructor(t){super(),this._position=0,this._started=!1,this._sink=new r0,this._schema=null,this._dictionaryBlocks=[],this._recordBatchBlocks=[],this._seenDictionaries=new Map,this._dictionaryDeltaOffsets=new Map,tN(t)||(t={autoDestroy:!0,writeLegacyIpcFormat:!1}),this._autoDestroy="boolean"!=typeof t.autoDestroy||t.autoDestroy,this._writeLegacyIpcFormat="boolean"==typeof t.writeLegacyIpcFormat&&t.writeLegacyIpcFormat}toString(t=!1){return this._sink.toString(t)}toUint8Array(t=!1){return this._sink.toUint8Array(t)}writeAll(t){return tR(t)?t.then(t=>this.writeAll(t)):tL(t)?sk(this,t):sP(this,t)}get closed(){return this._sink.closed}[Symbol.asyncIterator](){return this._sink[Symbol.asyncIterator]()}toDOMStream(t){return this._sink.toDOMStream(t)}toNodeStream(t){return this._sink.toNodeStream(t)}close(){return this.reset()._sink.close()}abort(t){return this.reset()._sink.abort(t)}finish(){return this._autoDestroy?this.close():this.reset(this._sink,this._schema),this}reset(t=this._sink,e=null){return t===this._sink||t instanceof r0?this._sink=t:(this._sink=new r0,t&&tk(t)?this.toDOMStream({type:"bytes"}).pipeTo(t):t&&tj(t)&&this.toNodeStream({objectMode:!1}).pipe(t)),this._started&&this._schema&&this._writeFooter(this._schema),this._started=!1,this._dictionaryBlocks=[],this._recordBatchBlocks=[],this._seenDictionaries=new Map,this._dictionaryDeltaOffsets=new Map,e&&n_(e,this._schema)||(null==e?(this._position=0,this._schema=null):(this._started=!0,this._schema=e,this._writeSchema(e))),this}write(t){let e=null;if(this._sink){if(null==t)return this.finish()&&void 0;if(t instanceof ng&&!(e=t.schema))return this.finish()&&void 0;if(t instanceof nv&&!(e=t.schema))return this.finish()&&void 0}else throw Error("RecordBatchWriter is closed");if(e&&!n_(e,this._schema)){if(this._started&&this._autoDestroy)return this.close();this.reset(this._sink,e)}t instanceof nv?t instanceof nw||this._writeRecordBatch(t):t instanceof ng?this.writeAll(t.batches):tF(t)&&this.writeAll(t)}_writeMessage(t,e=8){let i=e-1,r=n1.encode(t),n=r.byteLength,s=this._writeLegacyIpcFormat?4:8,o=n+s+i&~i;return t.headerType===th.RecordBatch?this._recordBatchBlocks.push(new rY(o,t.bodyLength,this._position)):t.headerType===th.DictionaryBatch&&this._dictionaryBlocks.push(new rY(o,t.bodyLength,this._position)),this._writeLegacyIpcFormat||this._write(Int32Array.of(-1)),this._write(Int32Array.of(o-s)),n>0&&this._write(r),this._writePadding(o-n-s)}_write(t){if(this._started){let e=tQ(t);e&&e.byteLength>0&&(this._sink.write(e),this._position+=e.byteLength)}return this}_writeSchema(t){return this._writeMessage(n1.from(t))}_writeFooter(t){return this._writeLegacyIpcFormat?this._write(Int32Array.of(0)):this._write(Int32Array.of(-1,0))}_writeMagic(){return this._write(sc)}_writePadding(t){return t>0?this._write(new Uint8Array(t)):this}_writeRecordBatch(t){let{byteLength:e,nodes:i,bufferRegions:r,buffers:n}=sO.assemble(t),s=new n2(t.numRows,i,r),o=n1.from(s,e);return this._writeDictionaries(t)._writeMessage(o)._writeBodyBuffers(n)}_writeDictionaryBatch(t,e,i=!1){let{byteLength:r,nodes:n,bufferRegions:s,buffers:o}=sO.assemble(new rv([t])),a=new n3(new n2(t.length,n,s),e,i),l=n1.from(a,r);return this._writeMessage(l)._writeBodyBuffers(o)}_writeBodyBuffers(t){let e,i,r;for(let n=-1,s=t.length;++n<s;)(e=t[n])&&(i=e.byteLength)>0&&(this._write(e),(r=(i+7&-8)-i)>0&&this._writePadding(r));return this}_writeDictionaries(t){var e,i;for(let[r,n]of t.dictionaries){let t=null!==(e=null==n?void 0:n.data)&&void 0!==e?e:[],s=this._seenDictionaries.get(r),o=null!==(i=this._dictionaryDeltaOffsets.get(r))&&void 0!==i?i:0;if(s&&s.data[0]===t[0]){if(o<t.length)for(let e of t.slice(o))this._writeDictionaryBatch(e,r,!0)}else for(let[e,i]of t.entries())this._writeDictionaryBatch(i,r,e>0);this._seenDictionaries.set(r,n),this._dictionaryDeltaOffsets.set(r,t.length)}return this}}class sx extends sM{static writeAll(t,e){let i=new sx(e);return tR(t)?t.then(t=>i.writeAll(t)):tL(t)?sk(i,t):sP(i,t)}}class sC extends sM{static writeAll(t){let e=new sC;return tR(t)?t.then(t=>e.writeAll(t)):tL(t)?sk(e,t):sP(e,t)}constructor(){super(),this._autoDestroy=!0}_writeSchema(t){return this._writeMagic()._writePadding(2)}_writeDictionaryBatch(t,e,i=!1){if(!i&&this._seenDictionaries.has(e))throw Error("The Arrow File format does not support replacement dictionaries. ");return super._writeDictionaryBatch(t,e,i)}_writeFooter(t){let e=rq.encode(new rq(t,ty.V5,this._recordBatchBlocks,this._dictionaryBlocks));return super._writeFooter(t)._write(e)._write(Int32Array.of(e.byteLength))._writeMagic()}}function sP(t,e){let i=e;for(let r of(e instanceof ng&&(i=e.batches,t.reset(void 0,e.schema)),i))t.write(r);return t.finish()}function sk(t,e){return(0,tv.mG)(this,void 0,void 0,function*(){var i,r,n,s,o,a,l;try{for(i=!0,r=(0,tv.KL)(e);!(s=(n=yield r.next()).done);i=!0)l=n.value,i=!1,t.write(l)}catch(t){o={error:t}}finally{try{!i&&!s&&(a=r.return)&&(yield a.call(r))}finally{if(o)throw o.error}}return t.finish()})}var sV=Object.create,sj=Object.defineProperty,sz=Object.getOwnPropertyDescriptor,sq=Object.getOwnPropertyNames,sG=Object.getPrototypeOf,sY=Object.prototype.hasOwnProperty,sW=(s=(t,e)=>{e.exports=Worker},()=>(o||s((o={exports:{}}).exports,o),o.exports)),s$=((a=s$||{})[a.UNDEFINED=0]="UNDEFINED",a[a.AUTOMATIC=1]="AUTOMATIC",a[a.READ_ONLY=2]="READ_ONLY",a[a.READ_WRITE=3]="READ_WRITE",a),sH=((l=sH||{})[l.IDENTIFIER=0]="IDENTIFIER",l[l.NUMERIC_CONSTANT=1]="NUMERIC_CONSTANT",l[l.STRING_CONSTANT=2]="STRING_CONSTANT",l[l.OPERATOR=3]="OPERATOR",l[l.KEYWORD=4]="KEYWORD",l[l.COMMENT=5]="COMMENT",l),sK=((u=sK||{})[u.NONE=0]="NONE",u[u.DEBUG=1]="DEBUG",u[u.INFO=2]="INFO",u[u.WARNING=3]="WARNING",u[u.ERROR=4]="ERROR",u),sQ=((c=sQ||{})[c.NONE=0]="NONE",c[c.CONNECT=1]="CONNECT",c[c.DISCONNECT=2]="DISCONNECT",c[c.OPEN=3]="OPEN",c[c.QUERY=4]="QUERY",c[c.INSTANTIATE=5]="INSTANTIATE",c),sJ=((d=sJ||{})[d.NONE=0]="NONE",d[d.OK=1]="OK",d[d.ERROR=2]="ERROR",d[d.START=3]="START",d[d.RUN=4]="RUN",d[d.CAPTURE=5]="CAPTURE",d),sZ=((h=sZ||{})[h.NONE=0]="NONE",h[h.WEB_WORKER=1]="WEB_WORKER",h[h.NODE_WORKER=2]="NODE_WORKER",h[h.BINDINGS=3]="BINDINGS",h[h.ASYNC_DUCKDB=4]="ASYNC_DUCKDB",h),sX=class{constructor(t=2){this.level=t}log(t){t.level>=this.level&&console.log(t)}},s0=((p=s0||{})[p.SUCCESS=0]="SUCCESS",p),s1=class{constructor(t,e){this._bindings=t,this._conn=e}get bindings(){return this._bindings}async close(){return this._bindings.disconnect(this._conn)}useUnsafe(t){return t(this._bindings,this._conn)}async query(t){this._bindings.logger.log({timestamp:new Date,level:2,origin:4,topic:4,event:4,value:t});let e=await this._bindings.runQuery(this._conn,t),i=sf.from(e);return console.assert(i.isSync(),"Reader is not sync"),console.assert(i.isFile(),"Reader is not file"),new ng(i)}async send(t){this._bindings.logger.log({timestamp:new Date,level:2,origin:4,topic:4,event:4,value:t});let e=await this._bindings.startPendingQuery(this._conn,t);for(;null==e;)e=await this._bindings.pollPendingQuery(this._conn);let i=new s2(this._bindings,this._conn,e),r=await sf.from(i);return console.assert(r.isAsync()),console.assert(r.isStream()),r}async cancelSent(){return await this._bindings.cancelPendingQuery(this._conn)}async getTableNames(t){return await this._bindings.getTableNames(this._conn,t)}async prepare(t){let e=await this._bindings.createPrepared(this._conn,t);return new s3(this._bindings,this._conn,e)}async insertArrowTable(t,e){let i=function(t,e="stream"){return("stream"===e?sx:sC).writeAll(t).toUint8Array(!0)}(t,"stream");await this.insertArrowFromIPCStream(i,e)}async insertArrowFromIPCStream(t,e){await this._bindings.insertArrowFromIPCStream(this._conn,t,e)}async insertCSVFromPath(t,e){await this._bindings.insertCSVFromPath(this._conn,t,e)}async insertJSONFromPath(t,e){await this._bindings.insertJSONFromPath(this._conn,t,e)}},s2=class{constructor(t,e,i){this.db=t,this.conn=e,this.header=i,this._first=!0,this._depleted=!1,this._inFlight=null}async next(){let t;return this._first?(this._first=!1,{done:!1,value:this.header}):this._depleted?{done:!0,value:null}:(null!=this._inFlight?(t=await this._inFlight,this._inFlight=null):t=await this.db.fetchQueryResults(this.conn),this._depleted=0==t.length,this._depleted||(this._inFlight=this.db.fetchQueryResults(this.conn)),{done:this._depleted,value:t})}[Symbol.asyncIterator](){return this}},s3=class{constructor(t,e,i){this.bindings=t,this.connectionId=e,this.statementId=i}async close(){await this.bindings.closePrepared(this.connectionId,this.statementId)}async query(...t){let e=await this.bindings.runPrepared(this.connectionId,this.statementId,t),i=sf.from(e);return console.assert(i.isSync()),console.assert(i.isFile()),new ng(i)}async send(...t){let e=await this.bindings.sendPrepared(this.connectionId,this.statementId,t),i=new s2(this.bindings,this.connectionId,e),r=await sf.from(i);return console.assert(r.isAsync()),console.assert(r.isStream()),r}},s4=((y=s4||{}).CANCEL_PENDING_QUERY="CANCEL_PENDING_QUERY",y.CLOSE_PREPARED="CLOSE_PREPARED",y.COLLECT_FILE_STATISTICS="COLLECT_FILE_STATISTICS",y.CONNECT="CONNECT",y.COPY_FILE_TO_BUFFER="COPY_FILE_TO_BUFFER",y.COPY_FILE_TO_PATH="COPY_FILE_TO_PATH",y.CREATE_PREPARED="CREATE_PREPARED",y.DISCONNECT="DISCONNECT",y.DROP_FILE="DROP_FILE",y.DROP_FILES="DROP_FILES",y.EXPORT_FILE_STATISTICS="EXPORT_FILE_STATISTICS",y.FETCH_QUERY_RESULTS="FETCH_QUERY_RESULTS",y.FLUSH_FILES="FLUSH_FILES",y.GET_FEATURE_FLAGS="GET_FEATURE_FLAGS",y.GET_TABLE_NAMES="GET_TABLE_NAMES",y.GET_VERSION="GET_VERSION",y.GLOB_FILE_INFOS="GLOB_FILE_INFOS",y.INSERT_ARROW_FROM_IPC_STREAM="INSERT_ARROW_FROM_IPC_STREAM",y.INSERT_CSV_FROM_PATH="IMPORT_CSV_FROM_PATH",y.INSERT_JSON_FROM_PATH="IMPORT_JSON_FROM_PATH",y.INSTANTIATE="INSTANTIATE",y.OPEN="OPEN",y.PING="PING",y.POLL_PENDING_QUERY="POLL_PENDING_QUERY",y.REGISTER_FILE_BUFFER="REGISTER_FILE_BUFFER",y.REGISTER_FILE_HANDLE="REGISTER_FILE_HANDLE",y.REGISTER_FILE_URL="REGISTER_FILE_URL",y.RESET="RESET",y.RUN_PREPARED="RUN_PREPARED",y.RUN_QUERY="RUN_QUERY",y.SEND_PREPARED="SEND_PREPARED",y.START_PENDING_QUERY="START_PENDING_QUERY",y.TOKENIZE="TOKENIZE",y),s6=((f=s6||{}).CONNECTION_INFO="CONNECTION_INFO",f.ERROR="ERROR",f.FEATURE_FLAGS="FEATURE_FLAGS",f.FILE_BUFFER="FILE_BUFFER",f.FILE_INFOS="FILE_INFOS",f.FILE_SIZE="FILE_SIZE",f.FILE_STATISTICS="FILE_STATISTICS",f.INSTANTIATE_PROGRESS="INSTANTIATE_PROGRESS",f.LOG="LOG",f.OK="OK",f.PREPARED_STATEMENT_ID="PREPARED_STATEMENT_ID",f.QUERY_PLAN="QUERY_PLAN",f.QUERY_RESULT="QUERY_RESULT",f.QUERY_RESULT_CHUNK="QUERY_RESULT_CHUNK",f.QUERY_RESULT_HEADER="QUERY_RESULT_HEADER",f.QUERY_RESULT_HEADER_OR_NULL="QUERY_RESULT_HEADER_OR_NULL",f.REGISTERED_FILE="REGISTERED_FILE",f.SCRIPT_TOKENS="SCRIPT_TOKENS",f.SUCCESS="SUCCESS",f.TABLE_NAMES="TABLE_NAMES",f.VERSION_STRING="VERSION_STRING",f),s8=class{constructor(t,e){this.promiseResolver=()=>{},this.promiseRejecter=()=>{},this.type=t,this.data=e,this.promise=new Promise((t,e)=>{this.promiseResolver=t,this.promiseRejecter=e})}};function s5(t,e){let i=function t(e){switch(e.typeId){case ts.Binary:return{sqlType:"binary"};case ts.Bool:return{sqlType:"bool"};case ts.Date:return{sqlType:"date"};case ts.DateDay:return{sqlType:"date32[d]"};case ts.DateMillisecond:return{sqlType:"date64[ms]"};case ts.Decimal:return{sqlType:"decimal",precision:e.precision,scale:e.scale};case ts.Float:return{sqlType:"float"};case ts.Float16:return{sqlType:"float16"};case ts.Float32:return{sqlType:"float32"};case ts.Float64:return{sqlType:"float64"};case ts.Int:return{sqlType:"int32"};case ts.Int16:return{sqlType:"int16"};case ts.Int32:return{sqlType:"int32"};case ts.Int64:return{sqlType:"int64"};case ts.Uint16:return{sqlType:"uint16"};case ts.Uint32:return{sqlType:"uint32"};case ts.Uint64:return{sqlType:"uint64"};case ts.Uint8:return{sqlType:"uint8"};case ts.IntervalDayTime:return{sqlType:"interval[dt]"};case ts.IntervalYearMonth:return{sqlType:"interval[m]"};case ts.List:return{sqlType:"list",valueType:t(e.valueType)};case ts.FixedSizeBinary:return{sqlType:"fixedsizebinary",byteWidth:e.byteWidth};case ts.Null:return{sqlType:"null"};case ts.Utf8:return{sqlType:"utf8"};case ts.Struct:return{sqlType:"struct",fields:e.children.map(t=>s5(t.name,t.type))};case ts.Map:return{sqlType:"map",keyType:t(e.keyType),valueType:t(e.valueType)};case ts.Time:return{sqlType:"time[s]"};case ts.TimeMicrosecond:return{sqlType:"time[us]"};case ts.TimeMillisecond:return{sqlType:"time[ms]"};case ts.TimeNanosecond:return{sqlType:"time[ns]"};case ts.TimeSecond:return{sqlType:"time[s]"};case ts.Timestamp:return{sqlType:"timestamp",timezone:e.timezone||void 0};case ts.TimestampSecond:return{sqlType:"timestamp[s]",timezone:e.timezone||void 0};case ts.TimestampMicrosecond:return{sqlType:"timestamp[us]",timezone:e.timezone||void 0};case ts.TimestampNanosecond:return{sqlType:"timestamp[ns]",timezone:e.timezone||void 0};case ts.TimestampMillisecond:return{sqlType:"timestamp[ms]",timezone:e.timezone||void 0}}throw Error("unsupported arrow type: ".concat(e.toString()))}(e);return i.name=t,i}var s7=new TextEncoder,s9=class{constructor(t,e=null){this._onInstantiationProgress=[],this._worker=null,this._workerShutdownPromise=null,this._workerShutdownResolver=()=>{},this._nextMessageId=0,this._pendingRequests=new Map,this._logger=t,this._onMessageHandler=this.onMessage.bind(this),this._onErrorHandler=this.onError.bind(this),this._onCloseHandler=this.onClose.bind(this),null!=e&&this.attach(e)}get logger(){return this._logger}attach(t){this._worker=t,this._worker.addEventListener("message",this._onMessageHandler),this._worker.addEventListener("error",this._onErrorHandler),this._worker.addEventListener("close",this._onCloseHandler),this._workerShutdownPromise=new Promise((t,e)=>{this._workerShutdownResolver=t})}detach(){this._worker&&(this._worker.removeEventListener("message",this._onMessageHandler),this._worker.removeEventListener("error",this._onErrorHandler),this._worker.removeEventListener("close",this._onCloseHandler),this._worker=null,this"
     "._workerShutdownResolver(null),this._workerShutdownPromise=null,this._workerShutdownResolver=()=>{})}async terminate(){this._worker&&(this._worker.terminate(),this._worker=null,this._workerShutdownPromise=null,this._workerShutdownResolver=()=>{})}async postTask(t,e=[]){if(!this._worker){console.error("cannot send a message since the worker is not set!");return}let i=this._nextMessageId++;return this._pendingRequests.set(i,t),this._worker.postMessage({messageId:i,type:t.type,data:t.data},e),await t.promise}onMessage(t){var e;let i=t.data;switch(i.type){case"LOG":this._logger.log(i.data);return;case"INSTANTIATE_PROGRESS":for(let t of this._onInstantiationProgress)t(i.data);return}let r=this._pendingRequests.get(i.requestId);if(!r){console.warn("unassociated response: [".concat(i.requestId,", ").concat(i.type.toString(),"]"));return}if(this._pendingRequests.delete(i.requestId),"ERROR"==i.type){let t=Error(i.data.message);t.name=i.data.name,null!=(e=Object.getOwnPropertyDescriptor(t,"stack"))&&e.writable&&(t.stack=i.data.stack),r.promiseRejecter(t);return}switch(r.type){case"CLOSE_PREPARED":case"COLLECT_FILE_STATISTICS":case"COPY_FILE_TO_PATH":case"DISCONNECT":case"DROP_FILE":case"DROP_FILES":case"FLUSH_FILES":case"INSERT_ARROW_FROM_IPC_STREAM":case"IMPORT_CSV_FROM_PATH":case"IMPORT_JSON_FROM_PATH":case"OPEN":case"PING":case"REGISTER_FILE_BUFFER":case"REGISTER_FILE_HANDLE":case"REGISTER_FILE_URL":case"RESET":if("OK"==i.type){r.promiseResolver(i.data);return}break;case"INSTANTIATE":if(this._onInstantiationProgress=[],"OK"==i.type){r.promiseResolver(i.data);return}break;case"GLOB_FILE_INFOS":if("FILE_INFOS"==i.type){r.promiseResolver(i.data);return}break;case"GET_VERSION":if("VERSION_STRING"==i.type){r.promiseResolver(i.data);return}break;case"GET_FEATURE_FLAGS":if("FEATURE_FLAGS"==i.type){r.promiseResolver(i.data);return}break;case"GET_TABLE_NAMES":if("TABLE_NAMES"==i.type){r.promiseResolver(i.data);return}break;case"TOKENIZE":if("SCRIPT_TOKENS"==i.type){r.promiseResolver(i.data);return}break;case"COPY_FILE_TO_BUFFER":if("FILE_BUFFER"==i.type){r.promiseResolver(i.data);return}break;case"EXPORT_FILE_STATISTICS":if("FILE_STATISTICS"==i.type){r.promiseResolver(i.data);return}break;case"CONNECT":if("CONNECTION_INFO"==i.type){r.promiseResolver(i.data);return}break;case"RUN_PREPARED":case"RUN_QUERY":if("QUERY_RESULT"==i.type){r.promiseResolver(i.data);return}break;case"SEND_PREPARED":if("QUERY_RESULT_HEADER"==i.type){r.promiseResolver(i.data);return}break;case"START_PENDING_QUERY":case"POLL_PENDING_QUERY":if("QUERY_RESULT_HEADER_OR_NULL"==i.type){r.promiseResolver(i.data);return}break;case"CANCEL_PENDING_QUERY":if(this._onInstantiationProgress=[],"SUCCESS"==i.type){r.promiseResolver(i.data);return}break;case"FETCH_QUERY_RESULTS":if("QUERY_RESULT_CHUNK"==i.type){r.promiseResolver(i.data);return}break;case"CREATE_PREPARED":if("PREPARED_STATEMENT_ID"==i.type){r.promiseResolver(i.data);return}}r.promiseRejecter(Error("unexpected response type: ".concat(i.type.toString())))}onError(t){console.error(t),console.error("error in duckdb worker: ".concat(t.message)),this._pendingRequests.clear()}onClose(){if(this._workerShutdownResolver(null),0!=this._pendingRequests.size){console.warn("worker terminated with ".concat(this._pendingRequests.size," pending requests"));return}this._pendingRequests.clear()}async reset(){let t=new s8("RESET",null);return await this.postTask(t)}async ping(){let t=new s8("PING",null);await this.postTask(t)}async dropFile(t){let e=new s8("DROP_FILE",t);return await this.postTask(e)}async dropFiles(){let t=new s8("DROP_FILES",null);return await this.postTask(t)}async flushFiles(){let t=new s8("FLUSH_FILES",null);return await this.postTask(t)}async instantiate(t,e=null,i=t=>{}){this._onInstantiationProgress.push(i);let r=new s8("INSTANTIATE",[t,e]);return await this.postTask(r)}async getVersion(){let t=new s8("GET_VERSION",null);return await this.postTask(t)}async getFeatureFlags(){let t=new s8("GET_FEATURE_FLAGS",null);return await this.postTask(t)}async open(t){let e=new s8("OPEN",t);await this.postTask(e)}async tokenize(t){let e=new s8("TOKENIZE",t);return await this.postTask(e)}async connectInternal(){let t=new s8("CONNECT",null);return await this.postTask(t)}async connect(){return new s1(this,await this.connectInternal())}async disconnect(t){let e=new s8("DISCONNECT",t);await this.postTask(e)}async runQuery(t,e){let i=new s8("RUN_QUERY",[t,e]);return await this.postTask(i)}async startPendingQuery(t,e){let i=new s8("START_PENDING_QUERY",[t,e]);return await this.postTask(i)}async pollPendingQuery(t){let e=new s8("POLL_PENDING_QUERY",t);return await this.postTask(e)}async cancelPendingQuery(t){let e=new s8("CANCEL_PENDING_QUERY",t);return await this.postTask(e)}async fetchQueryResults(t){let e=new s8("FETCH_QUERY_RESULTS",t);return await this.postTask(e)}async getTableNames(t,e){let i=new s8("GET_TABLE_NAMES",[t,e]);return await this.postTask(i)}async createPrepared(t,e){let i=new s8("CREATE_PREPARED",[t,e]);return await this.postTask(i)}async closePrepared(t,e){let i=new s8("CLOSE_PREPARED",[t,e]);await this.postTask(i)}async runPrepared(t,e,i){let r=new s8("RUN_PREPARED",[t,e,i]);return await this.postTask(r)}async sendPrepared(t,e,i){let r=new s8("SEND_PREPARED",[t,e,i]);return await this.postTask(r)}async globFiles(t){let e=new s8("GLOB_FILE_INFOS",t);return await this.postTask(e)}async registerFileText(t,e){let i=s7.encode(e);await this.registerFileBuffer(t,i)}async registerFileURL(t,e,i,r){void 0===e&&(e=t);let n=new s8("REGISTER_FILE_URL",[t,e,i,r]);await this.postTask(n)}async registerEmptyFileBuffer(t){}async registerFileBuffer(t,e){let i=new s8("REGISTER_FILE_BUFFER",[t,e]);await this.postTask(i,[e.buffer])}async registerFileHandle(t,e,i,r){let n=new s8("REGISTER_FILE_HANDLE",[t,e,i,r]);await this.postTask(n,[])}async collectFileStatistics(t,e){let i=new s8("COLLECT_FILE_STATISTICS",[t,e]);await this.postTask(i,[])}async exportFileStatistics(t){let e=new s8("EXPORT_FILE_STATISTICS",t);return await this.postTask(e,[])}async copyFileToBuffer(t){let e=new s8("COPY_FILE_TO_BUFFER",t);return await this.postTask(e)}async copyFileToPath(t,e){let i=new s8("COPY_FILE_TO_PATH",[t,e]);await this.postTask(i)}async insertArrowFromIPCStream(t,e,i){if(0==e.length)return;let r=new s8("INSERT_ARROW_FROM_IPC_STREAM",[t,e,i]);await this.postTask(r,[e.buffer])}async insertCSVFromPath(t,e,i){if(void 0!==i.columns){let t=[];for(let e in i.columns){let r=i.columns[e];t.push(s5(e,r))}i.columnsFlat=t,delete i.columns}let r=new s8("IMPORT_CSV_FROM_PATH",[t,e,i]);await this.postTask(r)}async insertJSONFromPath(t,e,i){if(void 0!==i.columns){let t=[];for(let e in i.columns){let r=i.columns[e];t.push(s5(e,r))}i.columnsFlat=t,delete i.columns}let r=new s8("IMPORT_JSON_FROM_PATH",[t,e,i]);await this.postTask(r)}},ot=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,3,1,0,1,10,14,1,12,0,65,0,65,0,65,0,252,10,0,0,11])),oe=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,8,1,6,0,6,64,25,11,11])),oi=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,10,1,8,0,65,0,253,15,253,98,11])),or=()=>(async t=>{try{return"u">typeof MessageChannel&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(t)}catch(t){return!1}})(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11])),on="1.29.0",os=on.split(".");os[0],os[1],os[2];var oo=()=>typeof navigator>"u";function oa(){let t="https://cdn.jsdelivr.net/npm/".concat("@duckdb/duckdb-wasm","@").concat(on,"/dist/");return{mvp:{mainModule:"".concat(t,"duckdb-mvp.wasm"),mainWorker:"".concat(t,"duckdb-browser-mvp.worker.js")},eh:{mainModule:"".concat(t,"duckdb-eh.wasm"),mainWorker:"".concat(t,"duckdb-browser-eh.worker.js")}}}var ol=null,ou=null,oc=null,od=null,oh=null;async function op(){return null==ol&&(ol="u">typeof BigInt64Array),null==ou&&(ou=await oe()),null==oc&&(oc=await or()),null==od&&(od=await oi()),null==oh&&(oh=await ot()),{bigInt64Array:ol,crossOriginIsolated:oo()||globalThis.crossOriginIsolated||!1,wasmExceptions:ou,wasmSIMD:od,wasmThreads:oc,wasmBulkMemory:oh}}async function oy(t){let e=await op();if(e.wasmExceptions){if(e.wasmSIMD&&e.wasmThreads&&e.crossOriginIsolated&&t.coi)return{mainModule:t.coi.mainModule,mainWorker:t.coi.mainWorker,pthreadWorker:t.coi.pthreadWorker};if(t.eh)return{mainModule:t.eh.mainModule,mainWorker:t.eh.mainWorker,pthreadWorker:null}}return{mainModule:t.mvp.mainModule,mainWorker:t.mvp.mainWorker,pthreadWorker:null}}m=null!=(b=sW())?sV(sG(b)):{},((t,e,i,r)=>{if(e&&"object"==typeof e||"function"==typeof e)for(let n of sq(e))sY.call(t,n)||n===i||sj(t,n,{get:()=>e[n],enumerable:!(r=sz(e,n))||r.enumerable})})(!_&&b&&b.__esModule?m:sj(m,"default",{value:b,enumerable:!0}),b),g=new TextDecoder,t=>("u">typeof SharedArrayBuffer&&t.buffer instanceof SharedArrayBuffer&&(t=new Uint8Array(t)),g.decode(t));var of=((v=of||{})[v.BUFFER=0]="BUFFER",v[v.NODE_FS=1]="NODE_FS",v[v.BROWSER_FILEREADER=2]="BROWSER_FILEREADER",v[v.BROWSER_FSACCESS=3]="BROWSER_FSACCESS",v[v.HTTP=4]="HTTP",v[v.S3=5]="S3",v)},63357:function(t,e,i){i.d(e,{VY:function(){return to},h4:function(){return tn},ck:function(){return tr},fC:function(){return ti},xz:function(){return ts}});var r=i(10331),n=i(78722),s=i(30057),o=i(20956),a=i(46499),l=i(5857),u=i(64316),c=i(19133),d=i(20686),h=i(7143),p=i(63440),y="Collapsible",[f,b]=(0,n.b)(y),[_,m]=f(y),g=r.forwardRef((t,e)=>{let{__scopeCollapsible:i,open:n,defaultOpen:s,disabled:o,onOpenChange:l,...d}=t,[h=!1,y]=(0,u.T)({prop:n,defaultProp:s,onChange:l});return(0,a.jsx)(_,{scope:i,disabled:o,contentId:(0,p.M)(),open:h,onOpenToggle:r.useCallback(()=>y(t=>!t),[y]),children:(0,a.jsx)(c.WV.div,{"data-state":A(h),"data-disabled":o?"":void 0,...d,ref:e})})});g.displayName=y;var v="CollapsibleTrigger",I=r.forwardRef((t,e)=>{let{__scopeCollapsible:i,...r}=t,n=m(v,i);return(0,a.jsx)(c.WV.button,{type:"button","aria-controls":n.contentId,"aria-expanded":n.open||!1,"data-state":A(n.open),"data-disabled":n.disabled?"":void 0,disabled:n.disabled,...r,ref:e,onClick:(0,l.M)(t.onClick,n.onOpenToggle)})});I.displayName=v;var w="CollapsibleContent",S=r.forwardRef((t,e)=>{let{forceMount:i,...r}=t,n=m(w,t.__scopeCollapsible);return(0,a.jsx)(h.z,{present:i||n.open,children:t=>{let{present:i}=t;return(0,a.jsx)(T,{...r,ref:e,present:i})}})});S.displayName=w;var T=r.forwardRef((t,e)=>{let{__scopeCollapsible:i,present:n,children:o,...l}=t,u=m(w,i),[h,p]=r.useState(n),y=r.useRef(null),f=(0,s.e)(e,y),b=r.useRef(0),_=b.current,g=r.useRef(0),v=g.current,I=u.open||h,S=r.useRef(I),T=r.useRef(void 0);return r.useEffect(()=>{let t=requestAnimationFrame(()=>S.current=!1);return()=>cancelAnimationFrame(t)},[]),(0,d.b)(()=>{let t=y.current;if(t){T.current=T.current||{transitionDuration:t.style.transitionDuration,animationName:t.style.animationName},t.style.transitionDuration="0s",t.style.animationName="none";let e=t.getBoundingClientRect();b.current=e.height,g.current=e.width,S.current||(t.style.transitionDuration=T.current.transitionDuration,t.style.animationName=T.current.animationName),p(n)}},[u.open,n]),(0,a.jsx)(c.WV.div,{"data-state":A(u.open),"data-disabled":u.disabled?"":void 0,id:u.contentId,hidden:!I,...l,ref:f,style:{"--radix-collapsible-content-height":_?"".concat(_,"px"):void 0,"--radix-collapsible-content-width":v?"".concat(v,"px"):void 0,...t.style},children:I&&o})});function A(t){return t?"open":"closed"}var E=i(36052),B="Accordion",D=["Home","End","ArrowDown","ArrowUp","ArrowLeft","ArrowRight"],[O,N,R]=function(t){let e=t+"CollectionProvider",[i,l]=(0,n.b)(e),[u,c]=i(e,{collectionRef:{current:null},itemMap:new Map}),d=t=>{let{scope:e,children:i}=t,n=r.useRef(null),s=r.useRef(new Map).current;return(0,a.jsx)(u,{scope:e,itemMap:s,collectionRef:n,children:i})};d.displayName=e;let h=t+"CollectionSlot",p=r.forwardRef((t,e)=>{let{scope:i,children:r}=t,n=c(h,i),l=(0,s.e)(e,n.collectionRef);return(0,a.jsx)(o.g7,{ref:l,children:r})});p.displayName=h;let y=t+"CollectionItemSlot",f="data-radix-collection-item",b=r.forwardRef((t,e)=>{let{scope:i,children:n,...l}=t,u=r.useRef(null),d=(0,s.e)(e,u),h=c(y,i);return r.useEffect(()=>(h.itemMap.set(u,{ref:u,...l}),()=>void h.itemMap.delete(u))),(0,a.jsx)(o.g7,{[f]:"",ref:d,children:n})});return b.displayName=y,[{Provider:d,Slot:p,ItemSlot:b},function(e){let i=c(t+"CollectionConsumer",e);return r.useCallback(()=>{let t=i.collectionRef.current;if(!t)return[];let e=Array.from(t.querySelectorAll("[".concat(f,"]")));return Array.from(i.itemMap.values()).sort((t,i)=>e.indexOf(t.ref.current)-e.indexOf(i.ref.current))},[i.collectionRef,i.itemMap])},l]}(B),[F,L]=(0,n.b)(B,[R,b]),U=b(),M=r.forwardRef((t,e)=>{let{type:i,...r}=t;return(0,a.jsx)(O.Provider,{scope:t.__scopeAccordion,children:"multiple"===i?(0,a.jsx)(j,{...r,ref:e}):(0,a.jsx)(V,{...r,ref:e})})});M.displayName=B;var[x,C]=F(B),[P,k]=F(B,{collapsible:!1}),V=r.forwardRef((t,e)=>{let{value:i,defaultValue:n,onValueChange:s=()=>{},collapsible:o=!1,...l}=t,[c,d]=(0,u.T)({prop:i,defaultProp:n,onChange:s});return(0,a.jsx)(x,{scope:t.__scopeAccordion,value:c?[c]:[],onItemOpen:d,onItemClose:r.useCallback(()=>o&&d(""),[o,d]),children:(0,a.jsx)(P,{scope:t.__scopeAccordion,collapsible:o,children:(0,a.jsx)(G,{...l,ref:e})})})}),j=r.forwardRef((t,e)=>{let{value:i,defaultValue:n,onValueChange:s=()=>{},...o}=t,[l=[],c]=(0,u.T)({prop:i,defaultProp:n,onChange:s}),d=r.useCallback(t=>c(function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];return[...e,t]}),[c]),h=r.useCallback(t=>c(function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];return e.filter(e=>e!==t)}),[c]);return(0,a.jsx)(x,{scope:t.__scopeAccordion,value:l,onItemOpen:d,onItemClose:h,children:(0,a.jsx)(P,{scope:t.__scopeAccordion,collapsible:!0,children:(0,a.jsx)(G,{...o,ref:e})})})}),[z,q]=F(B),G=r.forwardRef((t,e)=>{let{__scopeAccordion:i,disabled:n,dir:o,orientation:u="vertical",...d}=t,h=r.useRef(null),p=(0,s.e)(h,e),y=N(i),f="ltr"===(0,E.gm)(o),b=(0,l.M)(t.onKeyDown,t=>{var e;if(!D.includes(t.key))return;let i=t.target,r=y().filter(t=>{var e;return!(null===(e=t.ref.current)||void 0===e?void 0:e.disabled)}),n=r.findIndex(t=>t.ref.current===i),s=r.length;if(-1===n)return;t.preventDefault();let o=n,a=s-1,l=()=>{(o=n+1)>a&&(o=0)},c=()=>{(o=n-1)<0&&(o=a)};switch(t.key){case"Home":o=0;break;case"End":o=a;break;case"ArrowRight":"horizontal"===u&&(f?l():c());break;case"ArrowDown":"vertical"===u&&l();break;case"ArrowLeft":"horizontal"===u&&(f?c():l());break;case"ArrowUp":"vertical"===u&&c()}null===(e=r[o%s].ref.current)||void 0===e||e.focus()});return(0,a.jsx)(z,{scope:i,disabled:n,direction:o,orientation:u,children:(0,a.jsx)(O.Slot,{scope:i,children:(0,a.jsx)(c.WV.div,{...d,"data-orientation":u,ref:p,onKeyDown:n?void 0:b})})})}),Y="AccordionItem",[W,$]=F(Y),H=r.forwardRef((t,e)=>{let{__scopeAccordion:i,value:r,...n}=t,s=q(Y,i),o=C(Y,i),l=U(i),u=(0,p.M)(),c=r&&o.value.includes(r)||!1,d=s.disabled||t.disabled;return(0,a.jsx)(W,{scope:i,open:c,disabled:d,triggerId:u,children:(0,a.jsx)(g,{"data-orientation":s.orientation,"data-state":te(c),...l,...n,ref:e,disabled:d,open:c,onOpenChange:t=>{t?o.onItemOpen(r):o.onItemClose(r)}})})});H.displayName=Y;var K="AccordionHeader",Q=r.forwardRef((t,e)=>{let{__scopeAccordion:i,...r}=t,n=q(B,i),s=$(K,i);return(0,a.jsx)(c.WV.h3,{"data-orientation":n.orientation,"data-state":te(s.open),"data-disabled":s.disabled?"":void 0,...r,ref:e})});Q.displayName=K;var J="AccordionTrigger",Z=r.forwardRef((t,e)=>{let{__scopeAccordion:i,...r}=t,n=q(B,i),s=$(J,i),o=k(J,i),l=U(i);return(0,a.jsx)(O.ItemSlot,{scope:i,children:(0,a.jsx)(I,{"aria-disabled":s.open&&!o.collapsible||void 0,"data-orientation":n.orientation,id:s.triggerId,...l,...r,ref:e})})});Z.displayName=J;var X="AccordionContent",tt=r.forwardRef((t,e)=>{let{__scopeAccordion:i,...r}=t,n=q(B,i),s=$(X,i),o=U(i);return(0,a.jsx)(S,{role:"region","aria-labelledby":s.triggerId,"data-orientation":n.orientation,...o,...r,ref:e,style:{"--radix-accordion-content-height":"var(--radix-collapsible-content-height)","--radix-accordion-content-width":"var(--radix-collapsible-content-width)",...t.style}})});function te(t){return t?"open":"closed"}tt.displayName=X;var ti=M,tr=H,tn=Q,ts=Z,to=tt},68517:function(t,e,i){i.d(e,{fC:function(){return T},z$:function(){return A}});var r=i(10331),n=i(30057),s=i(78722),o=i(5857),a=i(64316),l=i(11086),u=i(98162),c=i(7143),d=i(70943),h=i(46499),p="Checkbox",[y,f]=(0,s.b)(p),[b,_]=y(p),m=r.forwardRef((t,e)=>{let{__scopeCheckbox:i,name:s,checked:l,defaultChecked:u,required:c,disabled:p,value:y="on",onCheckedChange:f,form:_,...m}=t,[g,v]=r.useState(null),T=(0,n.e)(e,t=>v(t)),A=r.useRef(!1),E=!g||_||!!g.closest("form"),[B=!1,D]=(0,a.T)({prop:l,defaultProp:u,onChange:f}),O=r.useRef(B);return r.useEffect(()=>{let t=null==g?void 0:g.form;if(t){let e=()=>D(O.current);return t.addEventListener("reset",e),()=>t.removeEventListener("reset",e)}},[g,D]),(0,h.jsxs)(b,{scope:i,state:B,disabled:p,children:[(0,h.jsx)(d.WV.button,{type:"button",role:"checkbox","aria-checked":w(B)?"mixed":B,"aria-required":c,"data-state":S(B),"data-disabled":p?"":void 0,disabled:p,value:y,...m,ref:T,onKeyDown:(0,o.M)(t.onKeyDown,t=>{"Enter"===t.key&&t.preventDefault()}),onClick:(0,o.M)(t.onClick,t=>{D(t=>!!w(t)||!t),E&&(A.current=t.isPropagationStopped(),A.current||t.stopPropagation())})}),E&&(0,h.jsx)(I,{control:g,bubbles:!A.current,name:s,value:y,checked:B,required:c,disabled:p,form:_,style:{transform:"translateX(-100%)"},defaultChecked:!w(u)&&u})]})});m.displayName=p;var g="CheckboxIndicator",v=r.forwardRef((t,e)=>{let{__scopeCheckbox:i,forceMount:r,...n}=t,s=_(g,i);return(0,h.jsx)(c.z,{present:r||w(s.state)||!0===s.state,children:(0,h.jsx)(d.WV.span,{"data-state":S(s.state),"data-disabled":s.disabled?"":void 0,...n,ref:e,style:{pointerEvents:"none",...t.style}})})});v.displayName=g;var I=t=>{let{control:e,checked:i,bubbles:n=!0,defaultChecked:s,...o}=t,a=r.useRef(null),c=(0,l.D)(i),d=(0,u.t)(e);r.useEffect(()=>{let t=a.current,e=Object.getOwnPropertyDescriptor(window.HTMLInputElement.prototype,"checked").set;if(c!==i&&e){let r=new Event("click",{bubbles:n});t.indeterminate=w(i),e.call(t,!w(i)&&i),t.dispatchEvent(r)}},[c,i,n]);let p=r.useRef(!w(i)&&i);return(0,h.jsx)("input",{type:"checkbox","aria-hidden":!0,defaultChecked:null!=s?s:p.current,...o,tabIndex:-1,ref:a,style:{...t.style,...d,position:"absolute",pointerEvents:"none",opacity:0,margin:0}})};function w(t){return"indeterminate"===t}function S(t){return w(t)?"indeterminate":t?"checked":"unchecked"}var T=m,A=v}}]);",    //
     "application/javascript", //
     "/_next/static/chunks/764-903eb5e7f2b2f294.js/", //
};
}
