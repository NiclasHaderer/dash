
#pragma once
#include "files.hpp"
namespace duckdb {
const File FILE_NEXT_STATIC_CHUNKS_493AB29E_5A13789B21FA6218_JS = {
     // Content
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     "l7Zm9yKHZhciBjPTA7YzxuLnBhcnRzLmxlbmd0aDtjKyspbi5wYXJ0c1tjXSgpO2RlbGV0ZSBsW24uaWRdfX19O3ZhciB5LHc9KHk9W10sZnVuY3Rpb24oZSxvKXtyZXR1cm4geVtlXT1vLHkuZmlsdGVyKEJvb2xlYW4pLmpvaW4oYApgKX0pO2Z1bmN0aW9uIEUoZSxvLGksbil7dmFyIHM9aT8iIjpuLmNzcztpZihlLnN0eWxlU2hlZXQpZS5zdHlsZVNoZWV0LmNzc1RleHQ9dyhvLHMpO2Vsc2V7dmFyIHI9ZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUocyksbD1lLmNoaWxkTm9kZXM7bFtvXSYmZS5yZW1vdmVDaGlsZChsW29dKSxsLmxlbmd0aD9lLmluc2VydEJlZm9yZShyLGxbb10pOmUuYXBwZW5kQ2hpbGQocil9fX0sZnVuY3Rpb24oZSxvKXtlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7dmFyIG89InUiPnR5cGVvZiB3aW5kb3cmJndpbmRvdy5sb2NhdGlvbjtpZighbyl0aHJvdyBFcnJvcigiZml4VXJscyByZXF1aXJlcyB3aW5kb3cubG9jYXRpb24iKTtpZighZXx8InN0cmluZyIhPXR5cGVvZiBlKXJldHVybiBlO3ZhciBpPW8ucHJvdG9jb2wrIi8vIitvLmhvc3Qsbj1pK28ucGF0aG5hbWUucmVwbGFjZSgvXC9bXlwvXSokLywiLyIpO3JldHVybiBlLnJlcGxhY2UoL3VybFxzKlwoKCg/OlteKShdfFwoKD86W14pKF0rfFwoW14pKF0qXCkpKlwpKSopXCkvZ2ksZnVuY3Rpb24oZSxvKXt2YXIgcz1vLnRyaW0oKS5yZXBsYWNlKC9eIiguKikiJC8sZnVuY3Rpb24oZSxvKXtyZXR1cm4gb30pLnJlcGxhY2UoL14nKC4qKSckLyxmdW5jdGlvbihlLG8pe3JldHVybiBvfSk7cmV0dXJuL14oI3xkYXRhOnxodHRwOlwvXC98aHR0cHM6XC9cL3xmaWxlOlwvXC9cL3xccyokKS9pLnRlc3Qocyk/ZToidXJsKCIrSlNPTi5zdHJpbmdpZnkoMD09PXMuaW5kZXhPZigiLy8iKT9zOjA9PT1zLmluZGV4T2YoIi8iKT9pK3M6bitzLnJlcGxhY2UoL15cLlwvLywiIikpKyIpIn0pfX0sZnVuY3Rpb24oZSxvLGkpe3ZhciBuLHMscixsLGEsYyxkLGgscDtlLmV4cG9ydHM9KG49ImNkeC1ub3RpZmllcyIscz0iY2R4LW5vdGlmeSIscj0iY2R4LW5vdGlmeV9fY3Jvc3MiLGw9ImNkeC1ub3RpZnlfX2J1dHRvbi0tY29uZmlybSIsYT0iY2R4LW5vdGlmeV9fYnV0dG9uLS1jYW5jZWwiLGM9ImNkeC1ub3RpZnlfX2lucHV0IixkPSJjZHgtbm90aWZ5X19idXR0b24iLGg9ImNkeC1ub3RpZnlfX2J0bnMtd3JhcHBlciIse2FsZXJ0OnA9ZnVuY3Rpb24oZSl7dmFyIG89ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiRElWIiksaT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJESVYiKSxuPWUubWVzc2FnZSxsPWUuc3R5bGU7cmV0dXJuIG8uY2xhc3NMaXN0LmFkZChzKSxsJiZvLmNsYXNzTGlzdC5hZGQocysiLS0iK2wpLG8uaW5uZXJIVE1MPW4saS5jbGFzc0xpc3QuYWRkKHIpLGkuYWRkRXZlbnRMaXN0ZW5lcigiY2xpY2siLG8ucmVtb3ZlLmJpbmQobykpLG8uYXBwZW5kQ2hpbGQoaSksb30sY29uZmlybTpmdW5jdGlvbihlKXt2YXIgbz1wKGUpLGk9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iiksbj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJidXR0b24iKSxzPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImJ1dHRvbiIpLGM9by5xdWVyeVNlbGVjdG9yKCIuIityKSx1PWUuY2FuY2VsSGFuZGxlcixnPWUub2tIYW5kbGVyO3JldHVybiBpLmNsYXNzTGlzdC5hZGQoaCksbi5pbm5lckhUTUw9ZS5va1RleHR8fCJDb25maXJtIixzLmlubmVySFRNTD1lLmNhbmNlbFRleHR8fCJDYW5jZWwiLG4uY2xhc3NMaXN0LmFkZChkKSxzLmNsYXNzTGlzdC5hZGQoZCksbi5jbGFzc0xpc3QuYWRkKGwpLHMuY2xhc3NMaXN0LmFkZChhKSx1JiYiZnVuY3Rpb24iPT10eXBlb2YgdSYmKHMuYWRkRXZlbnRMaXN0ZW5lcigiY2xpY2siLHUpLGMuYWRkRXZlbnRMaXN0ZW5lcigiY2xpY2siLHUpKSxnJiYiZnVuY3Rpb24iPT10eXBlb2YgZyYmbi5hZGRFdmVudExpc3RlbmVyKCJjbGljayIsZyksbi5hZGRFdmVudExpc3RlbmVyKCJjbGljayIsby5yZW1vdmUuYmluZChvKSkscy5hZGRFdmVudExpc3RlbmVyKCJjbGljayIsby5yZW1vdmUuYmluZChvKSksaS5hcHBlbmRDaGlsZChuKSxpLmFwcGVuZENoaWxkKHMpLG8uYXBwZW5kQ2hpbGQoaSksb30scHJvbXB0OmZ1bmN0aW9uKGUpe3ZhciBvPXAoZSksaT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKSxuPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImJ1dHRvbiIpLHM9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiaW5wdXQiKSxhPW8ucXVlcnlTZWxlY3RvcigiLiIrciksdT1lLmNhbmNlbEhhbmRsZXIsZz1lLm9rSGFuZGxlcjtyZXR1cm4gaS5jbGFzc0xpc3QuYWRkKGgpLG4uaW5uZXJIVE1MPWUub2tUZXh0fHwiT2siLG4uY2xhc3NMaXN0LmFkZChkKSxuLmNsYXNzTGlzdC5hZGQobCkscy5jbGFzc0xpc3QuYWRkKGMpLGUucGxhY2Vob2xkZXImJnMuc2V0QXR0cmlidXRlKCJwbGFjZWhvbGRlciIsZS5wbGFjZWhvbGRlciksZS5kZWZhdWx0JiYocy52YWx1ZT1lLmRlZmF1bHQpLGUuaW5wdXRUeXBlJiYocy50eXBlPWUuaW5wdXRUeXBlKSx1JiYiZnVuY3Rpb24iPT10eXBlb2YgdSYmYS5hZGRFdmVudExpc3RlbmVyKCJjbGljayIsdSksZyYmImZ1bmN0aW9uIj09dHlwZW9mIGcmJm4uYWRkRXZlbnRMaXN0ZW5lcigiY2xpY2siLGZ1bmN0aW9uKCl7ZyhzLnZhbHVlKX0pLG4uYWRkRXZlbnRMaXN0ZW5lcigiY2xpY2siLG8ucmVtb3ZlLmJpbmQobykpLGkuYXBwZW5kQ2hpbGQocyksaS5hcHBlbmRDaGlsZChuKSxvLmFwcGVuZENoaWxkKGkpLG99LGdldFdyYXBwZXI6ZnVuY3Rpb24oKXt2YXIgZT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJESVYiKTtyZXR1cm4gZS5jbGFzc0xpc3QuYWRkKG4pLGV9fSl9XSl9LGVDLmV4cG9ydHM9eCgpO2xldCBlVD1iKGVDLmV4cG9ydHMpO2NsYXNzIGVTe3Nob3coZSl7ZVQuc2hvdyhlKX19Y2xhc3MgZUkgZXh0ZW5kcyBlb3tjb25zdHJ1Y3Rvcih7Y29uZmlnOmUsZXZlbnRzRGlzcGF0Y2hlcjpvfSl7c3VwZXIoe2NvbmZpZzplLGV2ZW50c0Rpc3BhdGNoZXI6b30pLHRoaXMubm90aWZpZXI9bmV3IGVTfWdldCBtZXRob2RzKCl7cmV0dXJue3Nob3c6ZT0+dGhpcy5zaG93KGUpfX1zaG93KGUpe3JldHVybiB0aGlzLm5vdGlmaWVyLnNob3coZSl9fWNsYXNzIGVNIGV4dGVuZHMgZW97Z2V0IG1ldGhvZHMoKXtsZXQgZT0oKT0+dGhpcy5pc0VuYWJsZWQ7cmV0dXJue3RvZ2dsZTplPT50aGlzLnRvZ2dsZShlKSxnZXQgaXNFbmFibGVkKCl7cmV0dXJuIGUoKX19fXRvZ2dsZShlKXtyZXR1cm4gdGhpcy5FZGl0b3IuUmVhZE9ubHkudG9nZ2xlKGUpfWdldCBpc0VuYWJsZWQoKXtyZXR1cm4gdGhpcy5FZGl0b3IuUmVhZE9ubHkuaXNFbmFibGVkfX12YXIgZUE9e2V4cG9ydHM6e319O3k9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUpe3ZhciBvPWUudGFncztpZighT2JqZWN0LmtleXMobykubWFwKGZ1bmN0aW9uKGUpe3JldHVybiB0eXBlb2Ygb1tlXX0pLmV2ZXJ5KGZ1bmN0aW9uKGUpe3JldHVybiJvYmplY3QiPT09ZXx8ImJvb2xlYW4iPT09ZXx8ImZ1bmN0aW9uIj09PWV9KSl0aHJvdyBFcnJvcigiVGhlIGNvbmZpZ3VyYXRpb24gd2FzIGludmFsaWQiKTt0aGlzLmNvbmZpZz1lfXZhciBvPVsiUCIsIkxJIiwiVEQiLCJUSCIsIkRJViIsIkgxIiwiSDIiLCJIMyIsIkg0IiwiSDUiLCJINiIsIlBSRSJdO2Z1bmN0aW9uIGkoZSl7cmV0dXJuIC0xIT09by5pbmRleE9mKGUubm9kZU5hbWUpfXZhciBuPVsiQSIsIkIiLCJTVFJPTkciLCJJIiwiRU0iLCJTVUIiLCJTVVAiLCJVIiwiU1RSSUtFIl07cmV0dXJuIGUucHJvdG90eXBlLmNsZWFuPWZ1bmN0aW9uKGUpe2xldCBvPWRvY3VtZW50LmltcGxlbWVudGF0aW9uLmNyZWF0ZUhUTUxEb2N1bWVudCgpLGk9by5jcmVhdGVFbGVtZW50KCJkaXYiKTtyZXR1cm4gaS5pbm5lckhUTUw9ZSx0aGlzLl9zYW5pdGl6ZShvLGkpLGkuaW5uZXJIVE1MfSxlLnByb3RvdHlwZS5fc2FuaXRpemU9ZnVuY3Rpb24oZSxvKXt2YXIgcz1lLmNyZWF0ZVRyZWVXYWxrZXIobyxOb2RlRmlsdGVyLlNIT1dfVEVYVHxOb2RlRmlsdGVyLlNIT1dfRUxFTUVOVHxOb2RlRmlsdGVyLlNIT1dfQ09NTUVOVCxudWxsLCExKSxyPXMuZmlyc3RDaGlsZCgpO2lmKHIpZG97aWYoci5ub2RlVHlwZT09PU5vZGUuVEVYVF9OT0RFKXtpZighKCIiPT09ci5kYXRhLnRyaW0oKSYmKHIucHJldmlvdXNFbGVtZW50U2libGluZyYmaShyLnByZXZpb3VzRWxlbWVudFNpYmxpbmcpfHxyLm5leHRFbGVtZW50U2libGluZyYmaShyLm5leHRFbGVtZW50U2libGluZykpKSljb250aW51ZTtvLnJlbW92ZUNoaWxkKHIpLHRoaXMuX3Nhbml0aXplKGUsbyk7YnJlYWt9aWYoci5ub2RlVHlwZT09PU5vZGUuQ09NTUVOVF9OT0RFKXtvLnJlbW92ZUNoaWxkKHIpLHRoaXMuX3Nhbml0aXplKGUsbyk7YnJlYWt9dmFyIGwsYSxjLGQsaD0oYz1yLC0xIT09bi5pbmRleE9mKGMubm9kZU5hbWUpKTtoJiYoZD1BcnJheS5wcm90b3R5cGUuc29tZS5jYWxsKHIuY2hpbGROb2RlcyxpKSk7dmFyIHA9ISFvLnBhcmVudE5vZGUsdT1pKG8pJiZpKHIpJiZwLGc9ci5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpLGY9KGw9dGhpcy5jb25maWcsYT1yLCJmdW5jdGlvbiI9PXR5cGVvZiBsLnRhZ3NbZ10/bC50YWdzW2ddKGEpOmwudGFnc1tnXSk7aWYoaCYmZHx8dHlwZW9mIGY+InUifHwiYm9vbGVhbiI9PXR5cGVvZiBmJiYhZnx8IXRoaXMuY29uZmlnLmtlZXBOZXN0ZWRCbG9ja0VsZW1lbnRzJiZ1KXtpZighKCJTQ1JJUFQiPT09ci5ub2RlTmFtZXx8IlNUWUxFIj09PXIubm9kZU5hbWUpKWZvcig7ci5jaGlsZE5vZGVzLmxlbmd0aD4wOylvLmluc2VydEJlZm9yZShyLmNoaWxkTm9kZXNbMF0scik7by5yZW1vdmVDaGlsZChyKSx0aGlzLl9zYW5pdGl6ZShlLG8pO2JyZWFrfWZvcih2YXIgbT0wO208ci5hdHRyaWJ1dGVzLmxlbmd0aDttKz0xKXt2YXIgYj1yLmF0dHJpYnV0ZXNbbV07KGZ1bmN0aW9uKGUsbyxpKXt2YXIgbj1lLm5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm4hMCE9PW8mJigiZnVuY3Rpb24iPT10eXBlb2Ygb1tuXT8hb1tuXShlLnZhbHVlLGkpOnR5cGVvZiBvW25dPiJ1Inx8ITE9PT1vW25dfHwic3RyaW5nIj09dHlwZW9mIG9bbl0mJm9bbl0hPT1lLnZhbHVlKX0pKGIsZixyKSYmKHIucmVtb3ZlQXR0cmlidXRlKGIubmFtZSksbS09MSl9dGhpcy5fc2FuaXRpemUoZSxyKX13aGlsZShyPXMubmV4dFNpYmxpbmcoKSl9LGV9LGVBLmV4cG9ydHM9eSgpO2xldCBlXz1iKGVBLmV4cG9ydHMpO2Z1bmN0aW9uIGVMKGUsbyl7cmV0dXJuIGUubWFwKGU9PntsZXQgaT1BKG8pP28oZS50b29sKTpvO3JldHVybiBQKGkpfHwoZS5kYXRhPWZ1bmN0aW9uIGUobyxpKXtyZXR1cm4gQXJyYXkuaXNBcnJheShvKT9vLm1hcChvPT5lKG8saSkpOl8obyk/ZnVuY3Rpb24obyxpKXtsZXQgbj17fTtmb3IobGV0IHIgaW4gbyl7dmFyIHM7aWYoIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvLHIpKWNvbnRpbnVlO2xldCBsPW9bcl0sYT1fKHM9aVtyXSl8fCJib29sZWFuIj09PU0ocyl8fEEocyk/aVtyXTppO25bcl09ZShsLGEpfXJldHVybiBufShvLGkpOkwobyk/XyhpKT9lTyhvLGkpOiExPT09aT9lTyhvLHt9KTpvOm99KGUuZGF0YSxpKSksZX0pfWZ1bmN0aW9uIGVPKGUsbz17fSl7cmV0dXJuIG5ldyBlXyh7dGFnczpvfSkuY2xlYW4oZSl9Y2xhc3MgZU4gZXh0ZW5kcyBlb3tnZXQgbWV0aG9kcygpe3JldHVybntjbGVhbjooZSxvKT0+dGhpcy5jbGVhbihlLG8pfX1jbGVhbihlLG8pe3JldHVybiBlTyhlLG8pfX1jbGFzcyBlUCBleHRlbmRzIGVve2dldCBtZXRob2RzKCl7cmV0dXJue3NhdmU6KCk9PnRoaXMuc2F2ZSgpfX1zYXZlKCl7bGV0IGU9IkVkaXRvcidzIGNvbnRlbnQgY2FuIG5vdCBiZSBzYXZlZCBpbiByZWFkLW9ubHkgbW9kZSI7cmV0dXJuIHRoaXMuRWRpdG9yLlJlYWRPbmx5LmlzRW5hYmxlZD8oSShlLCJ3YXJuIiksUHJvbWlzZS5yZWplY3QoRXJyb3IoZSkpKTp0aGlzLkVkaXRvci5TYXZlci5zYXZlKCl9fWNsYXNzIGVEIGV4dGVuZHMgZW97Y29uc3RydWN0b3IoKXtzdXBlciguLi5hcmd1bWVudHMpLHRoaXMuc2VsZWN0aW9uVXRpbHM9bmV3IGVpfWdldCBtZXRob2RzKCl7cmV0dXJue2ZpbmRQYXJlbnRUYWc6KGUsbyk9PnRoaXMuZmluZFBhcmVudFRhZyhlLG8pLGV4cGFuZFRvVGFnOmU9PnRoaXMuZXhwYW5kVG9UYWco"
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     "JufX1pZihpLmN1cnJlbnRCbG9jayYmaS5jdXJyZW50QmxvY2suY3VycmVudElucHV0KXtsZXQgZT1pLmN1cnJlbnRCbG9jay50b29sLmJhc2VTYW5pdGl6ZUNvbmZpZztkb2N1bWVudC5leGVjQ29tbWFuZCgiaW5zZXJ0SFRNTCIsITEsZU8ocy5pbm5lckhUTUwsZSkpfWVsc2UgdGhpcy5pbnNlcnRCbG9jayhvKX1hc3luYyBwcm9jZXNzUGF0dGVybihlKXtsZXQgbz10aGlzLnRvb2xzUGF0dGVybnMuZmluZChvPT57bGV0IGk9by5wYXR0ZXJuLmV4ZWMoZSk7cmV0dXJuISFpJiZlPT09aS5zaGlmdCgpfSk7cmV0dXJuIG8/e2V2ZW50OnRoaXMuY29tcG9zZVBhc3RlRXZlbnQoInBhdHRlcm4iLHtrZXk6by5rZXksZGF0YTplfSksdG9vbDpvLnRvb2wubmFtZX06dm9pZCAwfWluc2VydEJsb2NrKGUsbz0hMSl7bGV0IGk7bGV0e0Jsb2NrTWFuYWdlcjpuLENhcmV0OnN9PXRoaXMuRWRpdG9yLHtjdXJyZW50QmxvY2s6cn09bjtpZihvJiZyJiZyLmlzRW1wdHkpe2k9bi5wYXN0ZShlLnRvb2wsZS5ldmVudCwhMCkscy5zZXRUb0Jsb2NrKGkscy5wb3NpdGlvbnMuRU5EKTtyZXR1cm59aT1uLnBhc3RlKGUudG9vbCxlLmV2ZW50KSxzLnNldFRvQmxvY2soaSxzLnBvc2l0aW9ucy5FTkQpfWluc2VydEVkaXRvckpTRGF0YShlKXtsZXR7QmxvY2tNYW5hZ2VyOm8sQ2FyZXQ6aSxUb29sczpufT10aGlzLkVkaXRvcjtlTChlLGU9Pm4uYmxvY2tUb29scy5nZXQoZSkuc2FuaXRpemVDb25maWcpLmZvckVhY2goKHt0b29sOmUsZGF0YTpufSxzKT0+e2xldCByPSExOzA9PT1zJiYocj1vLmN1cnJlbnRCbG9jayYmby5jdXJyZW50QmxvY2sudG9vbC5pc0RlZmF1bHQmJm8uY3VycmVudEJsb2NrLmlzRW1wdHkpO2xldCBsPW8uaW5zZXJ0KHt0b29sOmUsZGF0YTpuLHJlcGxhY2U6cn0pO2kuc2V0VG9CbG9jayhsLGkucG9zaXRpb25zLkVORCl9KX1wcm9jZXNzRWxlbWVudE5vZGUoZSxvLGkpe2xldCBuPU9iamVjdC5rZXlzKHRoaXMudG9vbHNUYWdzKSx7dG9vbDpzfT10aGlzLnRvb2xzVGFnc1tlLnRhZ05hbWVdfHx7fSxyPXRoaXMudGFnc0J5VG9vbFtudWxsPT1zP3ZvaWQgMDpzLm5hbWVdfHxbXSxsPW4uaW5jbHVkZXMoZS50YWdOYW1lKSxhPVYuYmxvY2tFbGVtZW50cy5pbmNsdWRlcyhlLnRhZ05hbWUudG9Mb3dlckNhc2UoKSksYz1BcnJheS5mcm9tKGUuY2hpbGRyZW4pLnNvbWUoKHt0YWdOYW1lOmV9KT0+bi5pbmNsdWRlcyhlKSYmIXIuaW5jbHVkZXMoZSkpLGQ9QXJyYXkuZnJvbShlLmNoaWxkcmVuKS5zb21lKCh7dGFnTmFtZTplfSk9PlYuYmxvY2tFbGVtZW50cy5pbmNsdWRlcyhlLnRvTG93ZXJDYXNlKCkpKTtyZXR1cm4gYXx8bHx8Yz8oIWx8fGMpJiYoIWF8fGR8fGMpP3ZvaWQgMDpbLi4ubyxpLGVdOihpLmFwcGVuZENoaWxkKGUpLFsuLi5vLGldKX1nZXROb2RlcyhlKXtsZXQgbztsZXQgaT1BcnJheS5mcm9tKGUuY2hpbGROb2Rlcyksbj0oZSxpKT0+e2lmKFYuaXNFbXB0eShpKSYmIVYuaXNTaW5nbGVUYWcoaSkpcmV0dXJuIGU7bGV0IHM9ZVtlLmxlbmd0aC0xXSxyPW5ldyBEb2N1bWVudEZyYWdtZW50O3N3aXRjaChzJiZWLmlzRnJhZ21lbnQocykmJihyPWUucG9wKCkpLGkubm9kZVR5cGUpe2Nhc2UgTm9kZS5FTEVNRU5UX05PREU6aWYobz10aGlzLnByb2Nlc3NFbGVtZW50Tm9kZShpLGUscikpcmV0dXJuIG87YnJlYWs7Y2FzZSBOb2RlLlRFWFRfTk9ERTpyZXR1cm4gci5hcHBlbmRDaGlsZChpKSxbLi4uZSxyXTtkZWZhdWx0OnJldHVyblsuLi5lLHJdfXJldHVyblsuLi5lLC4uLkFycmF5LmZyb20oaS5jaGlsZE5vZGVzKS5yZWR1Y2UobixbXSldfTtyZXR1cm4gaS5yZWR1Y2UobixbXSl9Y29tcG9zZVBhc3RlRXZlbnQoZSxvKXtyZXR1cm4gbmV3IEN1c3RvbUV2ZW50KGUse2RldGFpbDpvfSl9fTt0Ni5QQVRURVJOX1BST0NFU1NJTkdfTUFYX0xFTkdUSD00NTA7Y2xhc3MgdDggZXh0ZW5kcyBlb3tjb25zdHJ1Y3Rvcigpe3N1cGVyKC4uLmFyZ3VtZW50cyksdGhpcy50b29sc0RvbnRTdXBwb3J0UmVhZE9ubHk9W10sdGhpcy5yZWFkT25seUVuYWJsZWQ9ITF9Z2V0IGlzRW5hYmxlZCgpe3JldHVybiB0aGlzLnJlYWRPbmx5RW5hYmxlZH1hc3luYyBwcmVwYXJlKCl7bGV0e1Rvb2xzOmV9PXRoaXMuRWRpdG9yLHtibG9ja1Rvb2xzOm99PWUsaT1bXTtBcnJheS5mcm9tKG8uZW50cmllcygpKS5mb3JFYWNoKChbZSxvXSk9PntvLmlzUmVhZE9ubHlTdXBwb3J0ZWR8fGkucHVzaChlKX0pLHRoaXMudG9vbHNEb250U3VwcG9ydFJlYWRPbmx5PWksdGhpcy5jb25maWcucmVhZE9ubHkmJmkubGVuZ3RoPjAmJnRoaXMudGhyb3dDcml0aWNhbEVycm9yKCksdGhpcy50b2dnbGUodGhpcy5jb25maWcucmVhZE9ubHksITApfWFzeW5jIHRvZ2dsZShlPSF0aGlzLnJlYWRPbmx5RW5hYmxlZCxvPSExKXtlJiZ0aGlzLnRvb2xzRG9udFN1cHBvcnRSZWFkT25seS5sZW5ndGg+MCYmdGhpcy50aHJvd0NyaXRpY2FsRXJyb3IoKTtsZXQgaT10aGlzLnJlYWRPbmx5RW5hYmxlZDtmb3IobGV0IG8gaW4gdGhpcy5yZWFkT25seUVuYWJsZWQ9ZSx0aGlzLkVkaXRvcil0aGlzLkVkaXRvcltvXS50b2dnbGVSZWFkT25seSYmdGhpcy5FZGl0b3Jbb10udG9nZ2xlUmVhZE9ubHkoZSk7aWYoaT09PWV8fG8pcmV0dXJuIHRoaXMucmVhZE9ubHlFbmFibGVkO3RoaXMuRWRpdG9yLk1vZGlmaWNhdGlvbnNPYnNlcnZlci5kaXNhYmxlKCk7bGV0IG49YXdhaXQgdGhpcy5FZGl0b3IuU2F2ZXIuc2F2ZSgpO3JldHVybiBhd2FpdCB0aGlzLkVkaXRvci5CbG9ja01hbmFnZXIuY2xlYXIoKSxhd2FpdCB0aGlzLkVkaXRvci5SZW5kZXJlci5yZW5kZXIobi5ibG9ja3MpLHRoaXMuRWRpdG9yLk1vZGlmaWNhdGlvbnNPYnNlcnZlci5lbmFibGUoKSx0aGlzLnJlYWRPbmx5RW5hYmxlZH10aHJvd0NyaXRpY2FsRXJyb3IoKXt0aHJvdyBuZXcgUShgVG8gZW5hYmxlIHJlYWQtb25seSBtb2RlIGFsbCBjb25uZWN0ZWQgdG9vbHMgc2hvdWxkIHN1cHBvcnQgaXQuIFRvb2xzICR7dGhpcy50b29sc0RvbnRTdXBwb3J0UmVhZE9ubHkuam9pbigiLCAiKX0gZG9uJ3Qgc3VwcG9ydCByZWFkLW9ubHkgbW9kZS5gKX19Y2xhc3MgdDcgZXh0ZW5kcyBlb3tjb25zdHJ1Y3Rvcigpe3N1cGVyKC4uLmFyZ3VtZW50cyksdGhpcy5pc1JlY3RTZWxlY3Rpb25BY3RpdmF0ZWQ9ITEsdGhpcy5TQ1JPTExfU1BFRUQ9Myx0aGlzLkhFSUdIVF9PRl9TQ1JPTExfWk9ORT00MCx0aGlzLkJPVFRPTV9TQ1JPTExfWk9ORT0xLHRoaXMuVE9QX1NDUk9MTF9aT05FPTIsdGhpcy5NQUlOX01PVVNFX0JVVFRPTj0wLHRoaXMubW91c2Vkb3duPSExLHRoaXMuaXNTY3JvbGxpbmc9ITEsdGhpcy5pblNjcm9sbFpvbmU9bnVsbCx0aGlzLnN0YXJ0WD0wLHRoaXMuc3RhcnRZPTAsdGhpcy5tb3VzZVg9MCx0aGlzLm1vdXNlWT0wLHRoaXMuc3RhY2tPZlNlbGVjdGVkPVtdLHRoaXMubGlzdGVuZXJJZHM9W119c3RhdGljIGdldCBDU1MoKXtyZXR1cm57b3ZlcmxheToiY29kZXgtZWRpdG9yLW92ZXJsYXkiLG92ZXJsYXlDb250YWluZXI6ImNvZGV4LWVkaXRvci1vdmVybGF5X19jb250YWluZXIiLHJlY3Q6ImNvZGV4LWVkaXRvci1vdmVybGF5X19yZWN0YW5nbGUiLHRvcFNjcm9sbFpvbmU6ImNvZGV4LWVkaXRvci1vdmVybGF5X19zY3JvbGwtem9uZS0tdG9wIixib3R0b21TY3JvbGxab25lOiJjb2RleC1lZGl0b3Itb3ZlcmxheV9fc2Nyb2xsLXpvbmUtLWJvdHRvbSJ9fXByZXBhcmUoKXt0aGlzLmVuYWJsZU1vZHVsZUJpbmRpbmdzKCl9c3RhcnRTZWxlY3Rpb24oZSxvKXtsZXQgaT1kb2N1bWVudC5lbGVtZW50RnJvbVBvaW50KGUtd2luZG93LnBhZ2VYT2Zmc2V0LG8td2luZG93LnBhZ2VZT2Zmc2V0KTtpLmNsb3Nlc3QoYC4ke3RoaXMuRWRpdG9yLlRvb2xiYXIuQ1NTLnRvb2xiYXJ9YCl8fCh0aGlzLkVkaXRvci5CbG9ja1NlbGVjdGlvbi5hbGxCbG9ja3NTZWxlY3RlZD0hMSx0aGlzLmNsZWFyU2VsZWN0aW9uKCksdGhpcy5zdGFja09mU2VsZWN0ZWQ9W10pO2xldCBuPVtgLiR7ZWIuQ1NTLmNvbnRlbnR9YCxgLiR7dGhpcy5FZGl0b3IuVG9vbGJhci5DU1MudG9vbGJhcn1gLGAuJHt0aGlzLkVkaXRvci5JbmxpbmVUb29sYmFyLkNTUy5pbmxpbmVUb29sYmFyfWBdLHM9aS5jbG9zZXN0KCIuIit0aGlzLkVkaXRvci5VSS5DU1MuZWRpdG9yV3JhcHBlcikscj1uLnNvbWUoZT0+ISFpLmNsb3Nlc3QoZSkpOyFzfHxyfHwodGhpcy5tb3VzZWRvd249ITAsdGhpcy5zdGFydFg9ZSx0aGlzLnN0YXJ0WT1vKX1lbmRTZWxlY3Rpb24oKXt0aGlzLm1vdXNlZG93bj0hMSx0aGlzLnN0YXJ0WD0wLHRoaXMuc3RhcnRZPTAsdGhpcy5vdmVybGF5UmVjdGFuZ2xlLnN0eWxlLmRpc3BsYXk9Im5vbmUifWlzUmVjdEFjdGl2YXRlZCgpe3JldHVybiB0aGlzLmlzUmVjdFNlbGVjdGlvbkFjdGl2YXRlZH1jbGVhclNlbGVjdGlvbigpe3RoaXMuaXNSZWN0U2VsZWN0aW9uQWN0aXZhdGVkPSExfWVuYWJsZU1vZHVsZUJpbmRpbmdzKCl7bGV0e2NvbnRhaW5lcjplfT10aGlzLmdlbkhUTUwoKTt0aGlzLmxpc3RlbmVycy5vbihlLCJtb3VzZWRvd24iLGU9Pnt0aGlzLnByb2Nlc3NNb3VzZURvd24oZSl9LCExKSx0aGlzLmxpc3RlbmVycy5vbihkb2N1bWVudC5ib2R5LCJtb3VzZW1vdmUiLFUoZT0+e3RoaXMucHJvY2Vzc01vdXNlTW92ZShlKX0sMTApLHtwYXNzaXZlOiEwfSksdGhpcy5saXN0ZW5lcnMub24oZG9jdW1lbnQuYm9keSwibW91c2VsZWF2ZSIsKCk9Pnt0aGlzLnByb2Nlc3NNb3VzZUxlYXZlKCl9KSx0aGlzLmxpc3RlbmVycy5vbih3aW5kb3csInNjcm9sbCIsVShlPT57dGhpcy5wcm9jZXNzU2Nyb2xsKGUpfSwxMCkse3Bhc3NpdmU6ITB9KSx0aGlzLmxpc3RlbmVycy5vbihkb2N1bWVudC5ib2R5LCJtb3VzZXVwIiwoKT0+e3RoaXMucHJvY2Vzc01vdXNlVXAoKX0sITEpfXByb2Nlc3NNb3VzZURvd24oZSl7ZS5idXR0b249PT10aGlzLk1BSU5fTU9VU0VfQlVUVE9OJiYobnVsbCE9PWUudGFyZ2V0LmNsb3Nlc3QoVi5hbGxJbnB1dHNTZWxlY3Rvcil8fHRoaXMuc3RhcnRTZWxlY3Rpb24oZS5wYWdlWCxlLnBhZ2VZKSl9cHJvY2Vzc01vdXNlTW92ZShlKXt0aGlzLmNoYW5naW5nUmVjdGFuZ2xlKGUpLHRoaXMuc2Nyb2xsQnlab25lcyhlLmNsaWVudFkpfXByb2Nlc3NNb3VzZUxlYXZlKCl7dGhpcy5jbGVhclNlbGVjdGlvbigpLHRoaXMuZW5kU2VsZWN0aW9uKCl9cHJvY2Vzc1Njcm9sbChlKXt0aGlzLmNoYW5naW5nUmVjdGFuZ2xlKGUpfXByb2Nlc3NNb3VzZVVwKCl7dGhpcy5jbGVhclNlbGVjdGlvbigpLHRoaXMuZW5kU2VsZWN0aW9uKCl9c2Nyb2xsQnlab25lcyhlKXtpZih0aGlzLmluU2Nyb2xsWm9uZT1udWxsLGU8PXRoaXMuSEVJR0hUX09GX1NDUk9MTF9aT05FJiYodGhpcy5pblNjcm9sbFpvbmU9dGhpcy5UT1BfU0NST0xMX1pPTkUpLGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRIZWlnaHQtZTw9dGhpcy5IRUlHSFRfT0ZfU0NST0xMX1pPTkUmJih0aGlzLmluU2Nyb2xsWm9uZT10aGlzLkJPVFRPTV9TQ1JPTExfWk9ORSksIXRoaXMuaW5TY3JvbGxab25lKXt0aGlzLmlzU2Nyb2xsaW5nPSExO3JldHVybn10aGlzLmlzU2Nyb2xsaW5nfHwodGhpcy5zY3JvbGxWZXJ0aWNhbCh0aGlzLmluU2Nyb2xsWm9uZT09PXRoaXMuVE9QX1NDUk9MTF9aT05FPy10aGlzLlNDUk9MTF9TUEVFRDp0aGlzLlNDUk9MTF9TUEVFRCksdGhpcy5pc1Njcm9sbGluZz0hMCl9Z2VuSFRNTCgpe2xldHtVSTplfT10aGlzLkVkaXRvcixvPWUubm9kZXMuaG9sZGVyLnF1ZXJ5U2VsZWN0b3IoIi4iK2UuQ1NTLmVkaXRvcldyYXBwZXIpLGk9Vi5tYWtlKCJkaXYiLHQ3LkNTUy5vdmVybGF5LHt9KSxuPVYubWFrZSgiZGl2Iix0Ny5DU1Mub3ZlcmxheUNvbnRhaW5lcix7fSkscz1WLm1ha2UoImRpdiIsdDcuQ1NTLnJlY3Qse30pO3JldHVybiBuLmFwcGVuZENoaWxkKHMpLGkuYXBwZW5kQ2hpbGQobiksby5hcHBlbmRDaGlsZChpKSx0aGlzLm92ZXJsYXlSZWN0YW5nbGU9cyx7Y29udGFpbmVyOm8sb3ZlcmxheTppfX1zY3JvbGxWZXJ0aWNhbChlKXtpZighKHRoaXMuaW5TY3JvbGxab25lJiZ0aGlzLm1vdXNlZG93bikpcmV0dXJuO2xldCBvPXdpbmRvdy5wYWdlWU9mZnNldDt3aW5kb3cuc2Nyb2xsQnkoMCxlKSx0aGlzLm1vdXNlWSs9d2luZG93LnBhZ2VZT2Zmc2V0LW8sc2V0VGltZW91dCgoKT0+e3RoaXMuc2Nyb2xsVmVydGljYWwoZSl9LDAp"
     ""
     ""
     "YWRkKHRoaXMuQ1NTLmlucHV0U2hvd2VkKSxlJiZ0aGlzLm5vZGVzLmlucHV0LmZvY3VzKCksdGhpcy5pbnB1dE9wZW5lZD0hMH1jbG9zZUFjdGlvbnMoZT0hMCl7aWYodGhpcy5zZWxlY3Rpb24uaXNGYWtlQmFja2dyb3VuZEVuYWJsZWQpe2xldCBlPW5ldyBlaTtlLnNhdmUoKSx0aGlzLnNlbGVjdGlvbi5yZXN0b3JlKCksdGhpcy5zZWxlY3Rpb24ucmVtb3ZlRmFrZUJhY2tncm91bmQoKSxlLnJlc3RvcmUoKX10aGlzLm5vZGVzLmlucHV0LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5DU1MuaW5wdXRTaG93ZWQpLHRoaXMubm9kZXMuaW5wdXQudmFsdWU9IiIsZSYmdGhpcy5zZWxlY3Rpb24uY2xlYXJTYXZlZCgpLHRoaXMuaW5wdXRPcGVuZWQ9ITF9ZW50ZXJQcmVzc2VkKGUpe2xldCBvPXRoaXMubm9kZXMuaW5wdXQudmFsdWV8fCIiO2lmKCFvLnRyaW0oKSl7dGhpcy5zZWxlY3Rpb24ucmVzdG9yZSgpLHRoaXMudW5saW5rKCksZS5wcmV2ZW50RGVmYXVsdCgpLHRoaXMuY2xvc2VBY3Rpb25zKCk7cmV0dXJufWlmKCF0aGlzLnZhbGlkYXRlVVJMKG8pKXt0aGlzLm5vdGlmaWVyLnNob3coe21lc3NhZ2U6IlBhc3RlZCBsaW5rIGlzIG5vdCB2YWxpZC4iLHN0eWxlOiJlcnJvciJ9KSxTKCJJbmNvcnJlY3QgTGluayBwYXN0ZWQiLCJ3YXJuIixvKTtyZXR1cm59bz10aGlzLnByZXBhcmVMaW5rKG8pLHRoaXMuc2VsZWN0aW9uLnJlc3RvcmUoKSx0aGlzLnNlbGVjdGlvbi5yZW1vdmVGYWtlQmFja2dyb3VuZCgpLHRoaXMuaW5zZXJ0TGluayhvKSxlLnByZXZlbnREZWZhdWx0KCksZS5zdG9wUHJvcGFnYXRpb24oKSxlLnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpLHRoaXMuc2VsZWN0aW9uLmNvbGxhcHNlVG9FbmQoKSx0aGlzLmlubGluZVRvb2xiYXIuY2xvc2UoKX12YWxpZGF0ZVVSTChlKXtyZXR1cm4hL1xzLy50ZXN0KGUpfXByZXBhcmVMaW5rKGUpe3JldHVybiBlPWUudHJpbSgpLGU9dGhpcy5hZGRQcm90b2NvbChlKX1hZGRQcm90b2NvbChlKXtpZigvXihcdyspOihcL1wvKT8vLnRlc3QoZSkpcmV0dXJuIGU7bGV0IG89L15cL1teL1xzXS8udGVzdChlKSxpPSIjIj09PWUuc3Vic3RyaW5nKDAsMSksbj0vXlwvXC9bXi9cc10vLnRlc3QoZSk7cmV0dXJuIG98fGl8fG58fChlPSJodHRwOi8vIitlKSxlfWluc2VydExpbmsoZSl7bGV0IG89dGhpcy5zZWxlY3Rpb24uZmluZFBhcmVudFRhZygiQSIpO28mJnRoaXMuc2VsZWN0aW9uLmV4cGFuZFRvVGFnKG8pLGRvY3VtZW50LmV4ZWNDb21tYW5kKHRoaXMuY29tbWFuZExpbmssITEsZSl9dW5saW5rKCl7ZG9jdW1lbnQuZXhlY0NvbW1hbmQodGhpcy5jb21tYW5kVW5saW5rKX19b24uaXNJbmxpbmU9ITAsb24udGl0bGU9IkxpbmsiO2NsYXNzIG9ze2NvbnN0cnVjdG9yKHthcGk6ZX0pe3RoaXMuaTE4bkFQST1lLmkxOG4sdGhpcy5ibG9ja3NBUEk9ZS5ibG9ja3MsdGhpcy5zZWxlY3Rpb25BUEk9ZS5zZWxlY3Rpb24sdGhpcy50b29sc0FQST1lLnRvb2xzLHRoaXMuY2FyZXRBUEk9ZS5jYXJldH1hc3luYyByZW5kZXIoKXtsZXQgZT1laS5nZXQoKSxvPXRoaXMuYmxvY2tzQVBJLmdldEJsb2NrQnlFbGVtZW50KGUuYW5jaG9yTm9kZSk7aWYodm9pZCAwPT09bylyZXR1cm5bXTtsZXQgaT10aGlzLnRvb2xzQVBJLmdldEJsb2NrVG9vbHMoKSxuPWF3YWl0IGVwKG8saSk7aWYoMD09PW4ubGVuZ3RoKXJldHVybltdO2xldCBzPW4ucmVkdWNlKChlLGkpPT57dmFyIG47cmV0dXJuIG51bGw9PShuPWkudG9vbGJveCl8fG4uZm9yRWFjaChuPT57ZS5wdXNoKHtpY29uOm4uaWNvbix0aXRsZTpHLnQoZVYudG9vbE5hbWVzLG4udGl0bGUpLG5hbWU6aS5uYW1lLGNsb3NlT25BY3RpdmF0ZTohMCxvbkFjdGl2YXRlOmFzeW5jKCk9PntsZXQgZT1hd2FpdCB0aGlzLmJsb2Nrc0FQSS5jb252ZXJ0KG8uaWQsaS5uYW1lLG4uZGF0YSk7dGhpcy5jYXJldEFQSS5zZXRUb0Jsb2NrKGUsImVuZCIpfX0pfSksZX0sW10pLHI9YXdhaXQgby5nZXRBY3RpdmVUb29sYm94RW50cnkoKSxsPXZvaWQgMCE9PXI/ci5pY29uOmVRLGE9IVcoKTtyZXR1cm57aWNvbjpsLG5hbWU6ImNvbnZlcnQtdG8iLGhpbnQ6e3RpdGxlOnRoaXMuaTE4bkFQSS50KCJDb252ZXJ0IHRvIil9LGNoaWxkcmVuOntzZWFyY2hhYmxlOmEsaXRlbXM6cyxvbk9wZW46KCk9PnthJiYodGhpcy5zZWxlY3Rpb25BUEkuc2V0RmFrZUJhY2tncm91bmQoKSx0aGlzLnNlbGVjdGlvbkFQSS5zYXZlKCkpfSxvbkNsb3NlOigpPT57YSYmKHRoaXMuc2VsZWN0aW9uQVBJLnJlc3RvcmUoKSx0aGlzLnNlbGVjdGlvbkFQSS5yZW1vdmVGYWtlQmFja2dyb3VuZCgpKX19fX19b3MuaXNJbmxpbmU9ITA7Y2xhc3Mgb3J7Y29uc3RydWN0b3Ioe2RhdGE6ZSxhcGk6b30pe3RoaXMuQ1NTPXt3cmFwcGVyOiJjZS1zdHViIixpbmZvOiJjZS1zdHViX19pbmZvIix0aXRsZToiY2Utc3R1Yl9fdGl0bGUiLHN1YnRpdGxlOiJjZS1zdHViX19zdWJ0aXRsZSJ9LHRoaXMuYXBpPW8sdGhpcy50aXRsZT1lLnRpdGxlfHx0aGlzLmFwaS5pMThuLnQoIkVycm9yIiksdGhpcy5zdWJ0aXRsZT10aGlzLmFwaS5pMThuLnQoIlRoZSBibG9jayBjYW4gbm90IGJlIGRpc3BsYXllZCBjb3JyZWN0bHkuIiksdGhpcy5zYXZlZERhdGE9ZS5zYXZlZERhdGEsdGhpcy53cmFwcGVyPXRoaXMubWFrZSgpfXJlbmRlcigpe3JldHVybiB0aGlzLndyYXBwZXJ9c2F2ZSgpe3JldHVybiB0aGlzLnNhdmVkRGF0YX1tYWtlKCl7bGV0IGU9Vi5tYWtlKCJkaXYiLHRoaXMuQ1NTLndyYXBwZXIpLG89Vi5tYWtlKCJkaXYiLHRoaXMuQ1NTLmluZm8pLGk9Vi5tYWtlKCJkaXYiLHRoaXMuQ1NTLnRpdGxlLHt0ZXh0Q29udGVudDp0aGlzLnRpdGxlfSksbj1WLm1ha2UoImRpdiIsdGhpcy5DU1Muc3VidGl0bGUse3RleHRDb250ZW50OnRoaXMuc3VidGl0bGV9KTtyZXR1cm4gZS5pbm5lckhUTUw9JzxzdmcgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB3aWR0aD0iMjQiIGhlaWdodD0iMjQiIGZpbGw9Im5vbmUiIHZpZXdCb3g9IjAgMCAyNCAyNCI+PHJlY3Qgd2lkdGg9IjE0IiBoZWlnaHQ9IjE0IiB4PSI1IiB5PSI1IiBzdHJva2U9ImN1cnJlbnRDb2xvciIgc3Ryb2tlLXdpZHRoPSIyIiByeD0iNCIvPjxsaW5lIHgxPSIxMiIgeDI9IjEyIiB5MT0iOSIgeTI9IjEyIiBzdHJva2U9ImN1cnJlbnRDb2xvciIgc3Ryb2tlLWxpbmVjYXA9InJvdW5kIiBzdHJva2Utd2lkdGg9IjIiLz48cGF0aCBzdHJva2U9ImN1cnJlbnRDb2xvciIgc3Ryb2tlLWxpbmVjYXA9InJvdW5kIiBzdHJva2Utd2lkdGg9IjIiIGQ9Ik0xMiAxNS4wMlYxNS4wMSIvPjwvc3ZnPicsby5hcHBlbmRDaGlsZChpKSxvLmFwcGVuZENoaWxkKG4pLGUuYXBwZW5kQ2hpbGQobyksZX19b3IuaXNSZWFkT25seVN1cHBvcnRlZD0hMDtjbGFzcyBvbCBleHRlbmRzIHRqe2NvbnN0cnVjdG9yKCl7c3VwZXIoLi4uYXJndW1lbnRzKSx0aGlzLnR5cGU9dEQuSW5saW5lfWdldCB0aXRsZSgpe3JldHVybiB0aGlzLmNvbnN0cnVjdGFibGVbdHouVGl0bGVdfWNyZWF0ZSgpe3JldHVybiBuZXcgdGhpcy5jb25zdHJ1Y3RhYmxlKHthcGk6dGhpcy5hcGksY29uZmlnOnRoaXMuc2V0dGluZ3N9KX19Y2xhc3Mgb2EgZXh0ZW5kcyB0antjb25zdHJ1Y3Rvcigpe3N1cGVyKC4uLmFyZ3VtZW50cyksdGhpcy50eXBlPXRELlR1bmV9Y3JlYXRlKGUsbyl7cmV0dXJuIG5ldyB0aGlzLmNvbnN0cnVjdGFibGUoe2FwaTp0aGlzLmFwaSxjb25maWc6dGhpcy5zZXR0aW5ncyxibG9jazpvLGRhdGE6ZX0pfX1jbGFzcyBvYyBleHRlbmRzIE1hcHtnZXQgYmxvY2tUb29scygpe3JldHVybiBuZXcgb2MoQXJyYXkuZnJvbSh0aGlzLmVudHJpZXMoKSkuZmlsdGVyKChbLGVdKT0+ZS5pc0Jsb2NrKCkpKX1nZXQgaW5saW5lVG9vbHMoKXtyZXR1cm4gbmV3IG9jKEFycmF5LmZyb20odGhpcy5lbnRyaWVzKCkpLmZpbHRlcigoWyxlXSk9PmUuaXNJbmxpbmUoKSkpfWdldCBibG9ja1R1bmVzKCl7cmV0dXJuIG5ldyBvYyhBcnJheS5mcm9tKHRoaXMuZW50cmllcygpKS5maWx0ZXIoKFssZV0pPT5lLmlzVHVuZSgpKSl9Z2V0IGludGVybmFsVG9vbHMoKXtyZXR1cm4gbmV3IG9jKEFycmF5LmZyb20odGhpcy5lbnRyaWVzKCkpLmZpbHRlcigoWyxlXSk9PmUuaXNJbnRlcm5hbCkpfWdldCBleHRlcm5hbFRvb2xzKCl7cmV0dXJuIG5ldyBvYyhBcnJheS5mcm9tKHRoaXMuZW50cmllcygpKS5maWx0ZXIoKFssZV0pPT4hZS5pc0ludGVybmFsKSl9fXZhciBvZD1PYmplY3QuZGVmaW5lUHJvcGVydHksb2g9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcixvcD0oZSxvLGksbik9Pntmb3IodmFyIHMscj1uPjE/dm9pZCAwOm4/b2gobyxpKTpvLGw9ZS5sZW5ndGgtMTtsPj0wO2wtLSkocz1lW2xdKSYmKHI9KG4/cyhvLGkscik6cyhyKSl8fHIpO3JldHVybiBuJiZyJiZvZChvLGkscikscn07Y2xhc3Mgb3UgZXh0ZW5kcyB0antjb25zdHJ1Y3Rvcigpe3N1cGVyKC4uLmFyZ3VtZW50cyksdGhpcy50eXBlPXRELkJsb2NrLHRoaXMuaW5saW5lVG9vbHM9bmV3IG9jLHRoaXMudHVuZXM9bmV3IG9jfWNyZWF0ZShlLG8saSl7cmV0dXJuIG5ldyB0aGlzLmNvbnN0cnVjdGFibGUoe2RhdGE6ZSxibG9jazpvLHJlYWRPbmx5OmksYXBpOnRoaXMuYXBpLGNvbmZpZzp0aGlzLnNldHRpbmdzfSl9Z2V0IGlzUmVhZE9ubHlTdXBwb3J0ZWQoKXtyZXR1cm4hMD09PXRoaXMuY29uc3RydWN0YWJsZVt0SC5Jc1JlYWRPbmx5U3VwcG9ydGVkXX1nZXQgaXNMaW5lQnJlYWtzRW5hYmxlZCgpe3JldHVybiB0aGlzLmNvbnN0cnVjdGFibGVbdEguSXNFbmFibGVkTGluZUJyZWFrc119Z2V0IHRvb2xib3goKXtsZXQgZT10aGlzLmNvbnN0cnVjdGFibGVbdEguVG9vbGJveF0sbz10aGlzLmNvbmZpZ1t0Ui5Ub29sYm94XTtpZighUChlKSYmITEhPT1vKXJldHVybiBvP0FycmF5LmlzQXJyYXkoZSk/QXJyYXkuaXNBcnJheShvKT9vLm1hcCgobyxpKT0+e2xldCBuPWVbaV07cmV0dXJuIG4/ey4uLm4sLi4ub306b30pOltvXTpBcnJheS5pc0FycmF5KG8pP286W3suLi5lLC4uLm99XTpBcnJheS5pc0FycmF5KGUpP2U6W2VdfWdldCBjb252ZXJzaW9uQ29uZmlnKCl7cmV0dXJuIHRoaXMuY29uc3RydWN0YWJsZVt0SC5Db252ZXJzaW9uQ29uZmlnXX1nZXQgZW5hYmxlZElubGluZVRvb2xzKCl7cmV0dXJuIHRoaXMuY29uZmlnW3RSLkVuYWJsZWRJbmxpbmVUb29sc118fCExfWdldCBlbmFibGVkQmxvY2tUdW5lcygpe3JldHVybiB0aGlzLmNvbmZpZ1t0Ui5FbmFibGVkQmxvY2tUdW5lc119Z2V0IHBhc3RlQ29uZmlnKCl7cmV0dXJuIHRoaXMuY29uc3RydWN0YWJsZVt0SC5QYXN0ZUNvbmZpZ10/P3t9fWdldCBzYW5pdGl6ZUNvbmZpZygpe2xldCBlPXN1cGVyLnNhbml0aXplQ29uZmlnLG89dGhpcy5iYXNlU2FuaXRpemVDb25maWc7aWYoUChlKSlyZXR1cm4gbztsZXQgaT17fTtmb3IobGV0IG4gaW4gZSlpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxuKSl7bGV0IHM9ZVtuXTtfKHMpP2lbbl09T2JqZWN0LmFzc2lnbih7fSxvLHMpOmlbbl09c31yZXR1cm4gaX1nZXQgYmFzZVNhbml0aXplQ29uZmlnKCl7bGV0IGU9e307cmV0dXJuIEFycmF5LmZyb20odGhpcy5pbmxpbmVUb29scy52YWx1ZXMoKSkuZm9yRWFjaChvPT5PYmplY3QuYXNzaWduKGUsby5zYW5pdGl6ZUNvbmZpZykpLEFycmF5LmZyb20odGhpcy50dW5lcy52YWx1ZXMoKSkuZm9yRWFjaChvPT5PYmplY3QuYXNzaWduKGUsby5zYW5pdGl6ZUNvbmZpZykpLGV9fW9wKFtLXSxvdS5wcm90b3R5cGUsInNhbml0aXplQ29uZmlnIiwxKSxvcChbS10sb3UucHJvdG90eXBlLCJiYXNlU2FuaXRpemVDb25maWciLDEpO2NsYXNzIG9ne2NvbnN0cnVjdG9yKGUsbyxpKXt0aGlzLmFwaT1pLHRoaXMuY29uZmlnPWUsdGhpcy5lZGl0b3JDb25maWc9b31nZXQoZSl7bGV0e2NsYXNzOm8saXNJbnRlcm5hbDppPSExLC4uLm59PXRoaXMuY29uZmlnW2VdLHM9dGhpcy5nZXRDb25zdHJ1Y3RvcihvKSxyPW9bdFUuSXNUdW5lXTtyZXR1cm4gbmV3IHMoe25hbWU6ZSxjb25zdHJ1Y3RhYmxlOm8sY29uZmlnOm4sYXBpOnRoaXMuYXBpLmdldE1ldGhvZHNGb3JUb29sKGUsciksaXNEZWZhdWx0OmU9PT10aGlzLmVkaXRvckNvbmZpZy5kZWZhdWx0QmxvY2ssZGVmYXVsdFBsYWNlaG9sZGVyOnRoaXMuZWRpdG9yQ29uZmlnLnBsYWNlaG9sZGVyLGlzSW"
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     "cy5FZGl0b3IuSW5saW5lVG9vbGJhci5jbG9zZSgpLCJ0cnVlIiE9PWkuZGF0YXNldC5pbmxpbmVUb29sYmFyKXx8KHRoaXMuRWRpdG9yLkJsb2NrTWFuYWdlci5jdXJyZW50QmxvY2t8fHRoaXMuRWRpdG9yLkJsb2NrTWFuYWdlci5zZXRDdXJyZW50QmxvY2tCeUNoaWxkTm9kZShpKSx0aGlzLkVkaXRvci5JbmxpbmVUb29sYmFyLnRyeVRvU2hvdyghMCkpfWVuYWJsZUlucHV0c0VtcHR5TWFyaygpe2Z1bmN0aW9uIGUoZSl7WihlLnRhcmdldCl9dGhpcy5yZWFkT25seU11dGFibGVMaXN0ZW5lcnMub24odGhpcy5ub2Rlcy53cmFwcGVyLCJpbnB1dCIsZSksdGhpcy5yZWFkT25seU11dGFibGVMaXN0ZW5lcnMub24odGhpcy5ub2Rlcy53cmFwcGVyLCJmb2N1c2luIixlKSx0aGlzLnJlYWRPbmx5TXV0YWJsZUxpc3RlbmVycy5vbih0aGlzLm5vZGVzLndyYXBwZXIsImZvY3Vzb3V0IixlKX19bGV0IG9FPXtCbG9ja3NBUEk6ZXYsQ2FyZXRBUEk6ZWssRXZlbnRzQVBJOmV4LEkxOG5BUEk6ZXksQVBJOmV3LElubGluZVRvb2xiYXJBUEk6ZUUsTGlzdGVuZXJzQVBJOmVCLE5vdGlmaWVyQVBJOmVJLFJlYWRPbmx5QVBJOmVNLFNhbml0aXplckFQSTplTixTYXZlckFQSTplUCxTZWxlY3Rpb25BUEk6ZUQsVG9vbHNBUEk6ZVIsU3R5bGVzQVBJOmVGLFRvb2xiYXJBUEk6ZUgsVG9vbHRpcEFQSTplVyxVaUFQSTplWCxCbG9ja1NldHRpbmdzOnRFLFRvb2xiYXI6dFAsSW5saW5lVG9vbGJhcjp0JCxCbG9ja0V2ZW50czp0VixCbG9ja01hbmFnZXI6dDAsQmxvY2tTZWxlY3Rpb246dDEsQ2FyZXQ6dDIsQ3Jvc3NCbG9ja1NlbGVjdGlvbjp0NSxEcmFnTkRyb3A6dDQsTW9kaWZpY2F0aW9uc09ic2VydmVyOnQzLFBhc3RlOnQ2LFJlYWRPbmx5OnQ4LFJlY3RhbmdsZVNlbGVjdGlvbjp0NyxSZW5kZXJlcjp0OSxTYXZlcjpvZSxUb29sczpveCxVSTpvd307Y2xhc3Mgb0J7Y29uc3RydWN0b3IoZSl7bGV0IG8saTt0aGlzLm1vZHVsZUluc3RhbmNlcz17fSx0aGlzLmV2ZW50c0Rpc3BhdGNoZXI9bmV3IEosdGhpcy5pc1JlYWR5PW5ldyBQcm9taXNlKChlLG4pPT57bz1lLGk9bn0pLFByb21pc2UucmVzb2x2ZSgpLnRoZW4oYXN5bmMoKT0+e3RoaXMuY29uZmlndXJhdGlvbj1lLHRoaXMudmFsaWRhdGUoKSx0aGlzLmluaXQoKSxhd2FpdCB0aGlzLnN0YXJ0KCksYXdhaXQgdGhpcy5yZW5kZXIoKTtsZXR7QmxvY2tNYW5hZ2VyOmksQ2FyZXQ6bixVSTpzLE1vZGlmaWNhdGlvbnNPYnNlcnZlcjpyfT10aGlzLm1vZHVsZUluc3RhbmNlcztzLmNoZWNrRW1wdGluZXNzKCksci5lbmFibGUoKSx0aGlzLmNvbmZpZ3VyYXRpb24uYXV0b2ZvY3VzJiZuLnNldFRvQmxvY2soaS5ibG9ja3NbMF0sbi5wb3NpdGlvbnMuU1RBUlQpLG8oKX0pLmNhdGNoKGU9PntTKGBFZGl0b3IuanMgaXMgbm90IHJlYWR5IGJlY2F1c2Ugb2YgJHtlfWAsImVycm9yIiksaShlKX0pfXNldCBjb25maWd1cmF0aW9uKGUpe3ZhciBvLGksbjtfKGUpP3RoaXMuY29uZmlnPXsuLi5lfTp0aGlzLmNvbmZpZz17aG9sZGVyOmV9LFkoISF0aGlzLmNvbmZpZy5ob2xkZXJJZCwiY29uZmlnLmhvbGRlcklkIiwiY29uZmlnLmhvbGRlciIpLHRoaXMuY29uZmlnLmhvbGRlcklkJiYhdGhpcy5jb25maWcuaG9sZGVyJiYodGhpcy5jb25maWcuaG9sZGVyPXRoaXMuY29uZmlnLmhvbGRlcklkLHRoaXMuY29uZmlnLmhvbGRlcklkPW51bGwpLG51bGw9PXRoaXMuY29uZmlnLmhvbGRlciYmKHRoaXMuY29uZmlnLmhvbGRlcj0iZWRpdG9yanMiKSx0aGlzLmNvbmZpZy5sb2dMZXZlbHx8KHRoaXMuY29uZmlnLmxvZ0xldmVsPUIuVkVSQk9TRSksbj10aGlzLmNvbmZpZy5sb2dMZXZlbCxULmxvZ0xldmVsPW4sWSghIXRoaXMuY29uZmlnLmluaXRpYWxCbG9jaywiY29uZmlnLmluaXRpYWxCbG9jayIsImNvbmZpZy5kZWZhdWx0QmxvY2siKSx0aGlzLmNvbmZpZy5kZWZhdWx0QmxvY2s9dGhpcy5jb25maWcuZGVmYXVsdEJsb2NrfHx0aGlzLmNvbmZpZy5pbml0aWFsQmxvY2t8fCJwYXJhZ3JhcGgiLHRoaXMuY29uZmlnLm1pbkhlaWdodD12b2lkIDAhPT10aGlzLmNvbmZpZy5taW5IZWlnaHQ/dGhpcy5jb25maWcubWluSGVpZ2h0OjMwMDtsZXQgcz17dHlwZTp0aGlzLmNvbmZpZy5kZWZhdWx0QmxvY2ssZGF0YTp7fX07dGhpcy5jb25maWcucGxhY2Vob2xkZXI9dGhpcy5jb25maWcucGxhY2Vob2xkZXJ8fCExLHRoaXMuY29uZmlnLnNhbml0aXplcj10aGlzLmNvbmZpZy5zYW5pdGl6ZXJ8fHtwOiEwLGI6ITAsYTohMH0sdGhpcy5jb25maWcuaGlkZVRvb2xiYXI9ISF0aGlzLmNvbmZpZy5oaWRlVG9vbGJhciYmdGhpcy5jb25maWcuaGlkZVRvb2xiYXIsdGhpcy5jb25maWcudG9vbHM9dGhpcy5jb25maWcudG9vbHN8fHt9LHRoaXMuY29uZmlnLmkxOG49dGhpcy5jb25maWcuaTE4bnx8e30sdGhpcy5jb25maWcuZGF0YT10aGlzLmNvbmZpZy5kYXRhfHx7YmxvY2tzOltdfSx0aGlzLmNvbmZpZy5vblJlYWR5PXRoaXMuY29uZmlnLm9uUmVhZHl8fCgoKT0+e30pLHRoaXMuY29uZmlnLm9uQ2hhbmdlPXRoaXMuY29uZmlnLm9uQ2hhbmdlfHwoKCk9Pnt9KSx0aGlzLmNvbmZpZy5pbmxpbmVUb29sYmFyPXZvaWQgMD09PXRoaXMuY29uZmlnLmlubGluZVRvb2xiYXJ8fHRoaXMuY29uZmlnLmlubGluZVRvb2xiYXIsKFAodGhpcy5jb25maWcuZGF0YSl8fCF0aGlzLmNvbmZpZy5kYXRhLmJsb2Nrc3x8MD09PXRoaXMuY29uZmlnLmRhdGEuYmxvY2tzLmxlbmd0aCkmJih0aGlzLmNvbmZpZy5kYXRhPXtibG9ja3M6W3NdfSksdGhpcy5jb25maWcucmVhZE9ubHk9dGhpcy5jb25maWcucmVhZE9ubHl8fCExLG51bGwhPShvPXRoaXMuY29uZmlnLmkxOG4pJiZvLm1lc3NhZ2VzJiZHLnNldERpY3Rpb25hcnkodGhpcy5jb25maWcuaTE4bi5tZXNzYWdlcyksdGhpcy5jb25maWcuaTE4bi5kaXJlY3Rpb249KG51bGw9PShpPXRoaXMuY29uZmlnLmkxOG4pP3ZvaWQgMDppLmRpcmVjdGlvbil8fCJsdHIifWdldCBjb25maWd1cmF0aW9uKCl7cmV0dXJuIHRoaXMuY29uZmlnfXZhbGlkYXRlKCl7bGV0e2hvbGRlcklkOmUsaG9sZGVyOm99PXRoaXMuY29uZmlnO2lmKGUmJm8pdGhyb3cgRXJyb3IoIlx4YWJob2xkZXJJZFx4YmIgYW5kIFx4YWJob2xkZXJceGJiIHBhcmFtIGNhbid0IGFzc2lnbiBhdCB0aGUgc2FtZSB0aW1lLiIpO2lmKEwobykmJiFWLmdldChvKSl0aHJvdyBFcnJvcihgZWxlbWVudCB3aXRoIElEIFx4YWIke299XHhiYiBpcyBtaXNzaW5nLiBQYXNzIGNvcnJlY3QgaG9sZGVyJ3MgSUQuYCk7aWYobyYmXyhvKSYmIVYuaXNFbGVtZW50KG8pKXRocm93IEVycm9yKCJceGFiaG9sZGVyXHhiYiB2YWx1ZSBtdXN0IGJlIGFuIEVsZW1lbnQgbm9kZSIpfWluaXQoKXt0aGlzLmNvbnN0cnVjdE1vZHVsZXMoKSx0aGlzLmNvbmZpZ3VyZU1vZHVsZXMoKX1hc3luYyBzdGFydCgpe2F3YWl0IFsiVG9vbHMiLCJVSSIsIkJsb2NrTWFuYWdlciIsIlBhc3RlIiwiQmxvY2tTZWxlY3Rpb24iLCJSZWN0YW5nbGVTZWxlY3Rpb24iLCJDcm9zc0Jsb2NrU2VsZWN0aW9uIiwiUmVhZE9ubHkiXS5yZWR1Y2UoKGUsbyk9PmUudGhlbihhc3luYygpPT57dHJ5e2F3YWl0IHRoaXMubW9kdWxlSW5zdGFuY2VzW29dLnByZXBhcmUoKX1jYXRjaChlKXtpZihlIGluc3RhbmNlb2YgUSl0aHJvdyBFcnJvcihlLm1lc3NhZ2UpO1MoYE1vZHVsZSAke299IHdhcyBza2lwcGVkIGJlY2F1c2Ugb2YgJW9gLCJ3YXJuIixlKX19KSxQcm9taXNlLnJlc29sdmUoKSl9cmVuZGVyKCl7cmV0dXJuIHRoaXMubW9kdWxlSW5zdGFuY2VzLlJlbmRlcmVyLnJlbmRlcih0aGlzLmNvbmZpZy5kYXRhLmJsb2Nrcyl9Y29uc3RydWN0TW9kdWxlcygpe09iamVjdC5lbnRyaWVzKG9FKS5mb3JFYWNoKChbZSxvXSk9Pnt0cnl7dGhpcy5tb2R1bGVJbnN0YW5jZXNbZV09bmV3IG8oe2NvbmZpZzp0aGlzLmNvbmZpZ3VyYXRpb24sZXZlbnRzRGlzcGF0Y2hlcjp0aGlzLmV2ZW50c0Rpc3BhdGNoZXJ9KX1jYXRjaChvKXtTKCJbY29uc3RydWN0TW9kdWxlc10iLGBNb2R1bGUgJHtlfSBza2lwcGVkIGJlY2F1c2VgLCJlcnJvciIsbyl9fSl9Y29uZmlndXJlTW9kdWxlcygpe2ZvcihsZXQgZSBpbiB0aGlzLm1vZHVsZUluc3RhbmNlcylPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodGhpcy5tb2R1bGVJbnN0YW5jZXMsZSkmJih0aGlzLm1vZHVsZUluc3RhbmNlc1tlXS5zdGF0ZT10aGlzLmdldE1vZHVsZXNEaWZmKGUpKX1nZXRNb2R1bGVzRGlmZihlKXtsZXQgbz17fTtmb3IobGV0IGkgaW4gdGhpcy5tb2R1bGVJbnN0YW5jZXMpaSE9PWUmJihvW2ldPXRoaXMubW9kdWxlSW5zdGFuY2VzW2ldKTtyZXR1cm4gb319Y2xhc3Mgb0N7c3RhdGljIGdldCB2ZXJzaW9uKCl7cmV0dXJuIjIuMzAuNyJ9Y29uc3RydWN0b3IoZSl7bGV0IG89KCk9Pnt9O18oZSkmJkEoZS5vblJlYWR5KSYmKG89ZS5vblJlYWR5KTtsZXQgaT1uZXcgb0IoZSk7dGhpcy5pc1JlYWR5PWkuaXNSZWFkeS50aGVuKCgpPT57dGhpcy5leHBvcnRBUEkoaSksbygpfSl9ZXhwb3J0QVBJKGUpe1siY29uZmlndXJhdGlvbiJdLmZvckVhY2gobz0+e3RoaXNbb109ZVtvXX0pLHRoaXMuZGVzdHJveT0oKT0+e2ZvcihsZXQgbyBpbiBPYmplY3QudmFsdWVzKGUubW9kdWxlSW5zdGFuY2VzKS5mb3JFYWNoKGU9PntBKGUuZGVzdHJveSkmJmUuZGVzdHJveSgpLGUubGlzdGVuZXJzLnJlbW92ZUFsbCgpfSksbnVsbD09ZWp8fGVqLmRlc3Ryb3koKSxlaj1udWxsLGU9bnVsbCx0aGlzKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0aGlzLG8pJiZkZWxldGUgdGhpc1tvXTtPYmplY3Quc2V0UHJvdG90eXBlT2YodGhpcyxudWxsKX0sT2JqZWN0LnNldFByb3RvdHlwZU9mKHRoaXMsZS5tb2R1bGVJbnN0YW5jZXMuQVBJLm1ldGhvZHMpLGRlbGV0ZSB0aGlzLmV4cG9ydEFQSSxPYmplY3QuZW50cmllcyh7YmxvY2tzOntjbGVhcjoiY2xlYXIiLHJlbmRlcjoicmVuZGVyIn0sY2FyZXQ6e2ZvY3VzOiJmb2N1cyJ9LGV2ZW50czp7b246Im9uIixvZmY6Im9mZiIsZW1pdDoiZW1pdCJ9LHNhdmVyOntzYXZlOiJzYXZlIn19KS5mb3JFYWNoKChbbyxpXSk9PntPYmplY3QuZW50cmllcyhpKS5mb3JFYWNoKChbaSxuXSk9Pnt0aGlzW25dPWUubW9kdWxlSW5zdGFuY2VzLkFQSS5tZXRob2RzW29dW2ldfSl9KX19fX1dKTs=",    //
     "application/javascript", //
     "/_next/static/chunks/493ab29e.5a13789b21fa6218.js/", //
};
}
