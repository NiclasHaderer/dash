
#pragma once
#include "files.hpp"
namespace duckdb {
const File FILE_NEXT_STATIC_CHUNKS_736_9BCE7FDE2AFCC044_JS = {
     // Content
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     ""
     "dGFuY2UiKTtyZXR1cm4gZX1uLnIodCksbi5kKHQse186ZnVuY3Rpb24oKXtyZXR1cm4gcn0sX2NsYXNzX3ByaXZhdGVfZmllbGRfbG9vc2VfYmFzZTpmdW5jdGlvbigpe3JldHVybiByfX0pfSw0NDk1ODpmdW5jdGlvbihlLHQsbil7InVzZSBzdHJpY3QiO24ucih0KSxuLmQodCx7XzpmdW5jdGlvbigpe3JldHVybiBvfSxfY2xhc3NfcHJpdmF0ZV9maWVsZF9sb29zZV9rZXk6ZnVuY3Rpb24oKXtyZXR1cm4gb319KTt2YXIgcj0wO2Z1bmN0aW9uIG8oZSl7cmV0dXJuIl9fcHJpdmF0ZV8iK3IrKysiXyIrZX19LDMyMjM4OmZ1bmN0aW9uKGUsdCxuKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gcihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19bi5yKHQpLG4uZCh0LHtfOmZ1bmN0aW9uKCl7cmV0dXJuIHJ9LF9pbnRlcm9wX3JlcXVpcmVfZGVmYXVsdDpmdW5jdGlvbigpe3JldHVybiByfX0pfSw3OTU2MzpmdW5jdGlvbihlLHQsbil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIHIoZSl7aWYoImZ1bmN0aW9uIiE9dHlwZW9mIFdlYWtNYXApcmV0dXJuIG51bGw7dmFyIHQ9bmV3IFdlYWtNYXAsbj1uZXcgV2Vha01hcDtyZXR1cm4ocj1mdW5jdGlvbihlKXtyZXR1cm4gZT9uOnR9KShlKX1mdW5jdGlvbiBvKGUsdCl7aWYoIXQmJmUmJmUuX19lc01vZHVsZSlyZXR1cm4gZTtpZihudWxsPT09ZXx8Im9iamVjdCIhPXR5cGVvZiBlJiYiZnVuY3Rpb24iIT10eXBlb2YgZSlyZXR1cm57ZGVmYXVsdDplfTt2YXIgbj1yKHQpO2lmKG4mJm4uaGFzKGUpKXJldHVybiBuLmdldChlKTt2YXIgbz17X19wcm90b19fOm51bGx9LHU9T2JqZWN0LmRlZmluZVByb3BlcnR5JiZPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO2Zvcih2YXIgbCBpbiBlKWlmKCJkZWZhdWx0IiE9PWwmJk9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLGwpKXt2YXIgYT11P09iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoZSxsKTpudWxsO2EmJihhLmdldHx8YS5zZXQpP09iamVjdC5kZWZpbmVQcm9wZXJ0eShvLGwsYSk6b1tsXT1lW2xdfXJldHVybiBvLmRlZmF1bHQ9ZSxuJiZuLnNldChlLG8pLG99bi5yKHQpLG4uZCh0LHtfOmZ1bmN0aW9uKCl7cmV0dXJuIG99LF9pbnRlcm9wX3JlcXVpcmVfd2lsZGNhcmQ6ZnVuY3Rpb24oKXtyZXR1cm4gb319KX19XSk7",    //
     165364, //
     "application/javascript", //
     "/_next/static/chunks/736-9bce7fde2afcc044.js/", //
     
};
}
