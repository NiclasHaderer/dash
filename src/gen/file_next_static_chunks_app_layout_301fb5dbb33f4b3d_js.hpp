
#pragma once
#include "files.hpp"
namespace duckdb {
const File FILE_NEXT_STATIC_CHUNKS_APP_LAYOUT_301FB5DBB33F4B3D_JS = {
     // Content
     "(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[185],{98161:function(e,t,n){Promise.resolve().then(n.bind(n,86239))},86239:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return ec}});var s=n(46499);n(63340);var i=n(10331),c=n(40440),a=n(99185),r=n(28458),o=n(40202);class l{async sendPing(){try{return await this.sendQuery("SELECT 1;"),!0}catch(e){return!1}}async sendQuery(e){let t={"Content-Type":"application/json"};this.config.useToken&&(t["X-API-Key"]=this.config.token);let n=await fetch(this.config.url+"/query",{method:"POST",body:JSON.stringify({query:e,format:"compact_json"}),headers:t});if(!n.ok)throw Error(await n.text());let s=await n.json();return{columns:s.meta.map(e=>({name:e.name,type:(0,o.f)(e.type),id:e.name})),rows:s.data}}async checkConnectionState(){return await this.sendPing()?this.connectionStatus={state:"connected"}:this.connectionStatus={state:"error",message:"Failed to ping ".concat(this.config.url)},this.connectionStatus}initialise(){return this.checkConnectionState()}async updateConfig(e){this.config={...this.config,...e}}constructor(e,t){this.connectionStatus={state:"disconnected",message:"ConnectionState not initialised"},this.executeQuery=e=>this.sendQuery(e),this.id=t,this.config=e,this.type="duckdb-over-http"}}var d=n(22412),u=n(47051);class h{async initialise(){let{db:e,connection:t}=await f();return this.db=e,this.connection=t,this.checkConnectionState()}async executeQuery(e){var t;let n=await (null===(t=this.db)||void 0===t?void 0:t.connect()),s=await n.query(e);return await n.close(),function(e,t,n){let s=n.toArray().map(e=>e.toJSON());if(0===s.length)return{columns:[],rows:[]};let i=Object.keys(s[0]),c=s.map(e=>i.map(t=>e[t]));return{columns:i.map(e=>({id:e,name:e,type:"String"})),rows:c}}(0,this.id,s)}async loadDataSources(){return(0,u.kA)(e=>this.executeQuery(e))}async checkConnectionState(){if(this.db&&this.connection)try{await this.connection.query("SELECT 1;"),this.connectionStatus={state:"connected"}}catch(e){this.connectionStatus={state:"error",message:e.message}}else this.connectionStatus={state:"disconnected",message:"DuckDB WASM not initialised"};return this.connectionStatus}updateConfig(e){this.config={...this.config,...e}}constructor(e,t){this.connectionStatus={state:"disconnected",message:"ConnectionState not initialised"},this.id=t,this.type="duckdb-wasm",this.dataSources=[],this.config=e}}async function f(){let e=d.sq(),t=await d.Dn(e),n=URL.createObjectURL(new Blob(['importScripts("'.concat(t.mainWorker,'");')],{type:"text/javascript"})),s=new Worker(n),i=new d.kw,c=new d.ak(i,s);await c.instantiate(t.mainModule,t.pthreadWorker),URL.revokeObjectURL(n);let a=await c.connect();return{db:c,connection:a}}var m=n(85718);function p(e){switch(e){case"duckdb-over-http":return"DuckDB Over HTTP";case"duckdb-wasm":return"DuckDB WASM";case"duckdb-wasm-motherduck":return"DuckDB WASM (Motherduck)"}}function y(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"duckdb-over-http";switch(e){case"duckdb-over-http":return{type:"duckdb-over-http",config:{name:"DuckDB",url:"http://localhost:4200",authentication:"none",token:"supersecrettoken"}};case"duckdb-wasm":return{type:"duckdb-wasm",config:{name:"DuckDB WASM"}};case"duckdb-wasm-motherduck":return{type:"duckdb-wasm-motherduck",config:{name:"DuckDB WASM (Motherduck)"}}}}function x(e){switch(e.type){case"duckdb-over-http":return new l(e.config,m.SS);case"duckdb-wasm":return new h(e.config,m._X);case"duckdb-wasm-motherduck":throw Error("Not implemented")}}function k(e){switch(e.type){case"duckdb-over-http":return{type:"duckdb-over-http",config:e.config};case"duckdb-wasm":return{type:"duckdb-wasm",config:e.config};case"duckdb-wasm-motherduck":throw Error("Not implemented")}}var g=n(99556),v=n(94192),b=n(23141);async function w(e){let t=function(e){if(!e.has("api")){console.error("No API parameter found");return}let t=e.get("api");if("http"===t){let t,n=e.get("url");if(!n){let e=window.location;console.log("No url parameter found, using current page url:",n="".concat(e.protocol,"//").concat(e.host))}let s="none",i=e.get("k");return i&&(t=function(e,t){let n="";for(let s=0;s<t.length;s++)n+=String.fromCharCode(t.charCodeAt(s)^e.charCodeAt(s%e.length));return n}("DuckDB",i),s="token"),{type:"duckdb-over-http",config:{name:"DuckDB",url:n,useToken:"token"===s,token:t}}}console.error("Unknown API:",t)}(e);if(!t)return;let n=x(t);if("connected"===(await n.checkConnectionState()).state)return n}async function j(e){if(0!==e.length)for(let t=e.length-1;t>=0;t--){let n=x(e[t]);if("connected"===(await n.checkConnectionState()).state)return n}}async function S(e,t){return await w(e)||await j(t)}var C=n(40940),N=n(37852),D=n(62534),T=n(69808),B=n(39890),O=n(68517),A=n(11933),L=n(10296);let R=i.forwardRef((e,t)=>{let{className:n,...i}=e;return(0,s.jsx)(O.fC,{ref:t,className:(0,L.cn)("peer h-4 w-4 shrink-0 rounded-sm border border-primary shadow focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground",n),...i,children:(0,s.jsx)(O.z$,{className:(0,L.cn)("flex items-center justify-center text-current"),children:(0,s.jsx)(A.Z,{className:"h-4 w-4"})})})});R.displayName=O.fC.displayName;var q=n(24975);let E=["description","warning"],_=e=>{let{errors:t,handleChange:n,formData:i,formDefinition:c}=e;return(0,s.jsx)("div",{className:"space-y-4",children:c.fields.map(e=>{var c;if(!(!e.shouldBeVisible||e.shouldBeVisible(i)))return null;let a=e.required?"*":"",r="boolean"===e.type,o=E.includes(e.type)||!e.label?"hidden":"block";return(0,s.jsxs)("div",{className:"".concat(r?"flex items-center space-x-2":""),children:[(0,s.jsx)("label",{className:(0,L.cn)("text-sm font-medium text-gray-700",o),children:e.label+a}),"description"===e.type&&(0,s.jsx)("span",{className:"text-sm text-gray-500",children:e.label}),"warning"===e.type&&(0,s.jsx)("div",{className:"bg-yellow-50 border-l-4 border-yellow-400 p-2 rounded",children:(0,s.jsx)("span",{className:"text-sm text-yellow-700",children:e.label})}),"text"===e.type&&(0,s.jsx)(B.I,{type:"text",value:i[e.key],onChange:t=>n(e.key,t.target.value)}),"number"===e.type&&(0,s.jsx)(B.I,{type:"number",value:i[e.key],onChange:t=>n(e.key,t.target.value)}),"boolean"===e.type&&(0,s.jsx)(R,{checked:i[e.key],onCheckedChange:t=>n(e.key,t)}),"select"===e.type&&(0,s.jsxs)(q.Ph,{onValueChange:t=>n(e.key,t),value:i[e.key],children:[(0,s.jsx)(q.i4,{children:(0,s.jsx)(q.ki,{})}),(0,s.jsx)(q.Bw,{children:null===(c=e.selectOptions)||void 0===c?void 0:c.map(e=>(0,s.jsx)(q.Ql,{value:e.value,children:e.label},e.value))})]}),"password"===e.type&&(0,s.jsx)(I,{value:i[e.key],onChange:t=>n(e.key,t)}),"custom"===e.type&&e.customField&&e.customField.render({formData:i,onChange:t=>n(e.key,t),hasError:!!t[e.key]}),t[e.key]&&(0,s.jsx)("p",{className:"text-sm text-red-600",children:t[e.key]})]},e.key)})})};function M(e){let{formDefinition:t,onSubmit:n,onCancel:c,onUpdate:a,initialFormData:r,buttonBarLeading:o,formWrapper:l,className:d}=e,[u,h]=(0,i.useState)(t.fields.reduce((e,t)=>(e[t.key]=r[t.key]||"",e),{}));(0,i.useEffect)(()=>{h(e=>{let n={...e};return t.fields.forEach(e=>{n[e.key]=r[e.key]||""}),n})},[r]);let[f,m]=(0,i.useState)({}),p=()=>{let e={};return t.fields.forEach(t=>{if(t.shouldBeVisible&&!t.shouldBeVisible(u))return;let n=x(t,u[t.key]);n&&(e[t.key]=n)}),m(e),Object.keys(e).length>0},y=(e,t)=>{h(n=>({...n,[e]:t}));let n=p();a&&a(u,!n)},x=(e,t)=>e.required&&(void 0===t||""===t)?"This field is required":e.validation?e.validation(t):void 0;return(0,s.jsxs)("form",{onSubmit:e=>{e.preventDefault(),p()||n(u)},className:d,autoComplete:"off",children:[l&&t.fields.length?l({children:(0,s.jsx)(_,{formDefinition:t,formData:u,handleChange:y,errors:f})}):(0,s.jsx)(_,{formDefinition:t,formData:u,handleChange:y,errors:f}),(0,s.jsxs)("div",{className:"flex items-center space-x-2 ".concat(c?"justify-between":"justify-end"),children:[(0,s.jsx)("div",{children:o}),(0,s.jsx)("div",{className:"flex-1"}),(0,s.jsxs)("div",{children:[c&&(0,s.jsx)(T.z,{variant:"secondary",onClick:c,children:"Cancel"}),(0,s.jsx)(T.z,{type:"submit",children:"Save"})]})]})]})}function I(e){let{value:t,onChange:n}=e,[c,a]=(0,i.useState)(!1);return(0,s.jsxs)("div",{className:"relative",children:[(0,s.jsx)(B.I,{type:c?"text":"password",value:t,onChange:e=>n(e.target.value),className:"block w-full border-b border-gray-300 focus:border-indigo-500 focus:ring-0 sm:text-sm"}),(0,s.jsx)("button",{type:"button",onClick:()=>{a(e=>!e)},className:"absolute inset-y-0 right-4 pr-0.5 flex items-center text-gray-500 hover:text-gray-700 focus:outline-none",children:c?(0,s.jsx)(N.Z,{size:14}):(0,s.jsx)(D.Z,{size:14})})]})}function P(e){let t,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"port_allowed";if(!e)return"URL cannot be empty";try{t=new URL(e)}catch(e){return"Invalid URL"}return"no_port_allowed"===n&&t.port?"URL must not include a port":"port_required"!==n||t.port?"http:"!==t.protocol&&"https:"!==t.protocol?"URL must have http or https protocol":void 0:"URL must include a port"}var F=n(98042);function U(e){let{displayCode:t,copyCode:n,showCopyButton:i}=e;return(0,s.jsxs)("div",{className:"relative w-full bg-muted rounded-md p-2 overflow-auto",children:[(0,s.jsx)("pre",{children:(0,s.jsx)("code",{className:"language-sql",style:{display:"block",padding:"0",margin:"0",lineHeight:"1.5",fontSize:"0.75rem"},children:t})}),i&&(0,s.jsx)("div",{className:"absolute top-2 right-2",children:(0,s.jsx)(F.q,{textToCopy:n||t})})]})}var z=n(33554);let W={"duckdb-over-http":{fields:[{type:"description",label:"This configuration uses a local DuckDB instance via HTTP, giving you full machine power and unrestricted local file access. You must have DuckDB running locally. You can also connect to MotherDuck.",key:"description"},{type:"text",label:"URL",key:"url",required:!0,validation:e=>P(e,"port_required")},{type:"boolean",label:"Authentication",key:"useToken",required:!1},{type:"password",label:"Token",key:"token",required:!0,shouldBeVisible:e=>!0===e.useToken},{type:"custom",label:"Connection String",key:"connectionString",required:!1,shouldBeVisible:e=>!P(e.url,"port_required"),customField:{render:function(e){let{formData:t,hasError:n}=e,i=e=>{let n,s,i="INSTALL dash FROM community;\n";i+="LOAD dash;";try{let e=new URL(t.url);s=e.port?+e.port:"http:"===e.protocol?80:443}catch(e){return"invalid url"}if(t.useAuthentication){let i=t.token;e&&(i="********"),n="CALL start_dash('127.0.0.1', ".concat(s,", api_key='").concat(i,"');")}else n="CALL start_dash('127.0.0.1', ".concat(s,");");return"".concat(i,"\n").concat(n)};return(0,s.jsx)(U,{displayCode:i(!0),copyCode:i(!1),showCopyButton:!n,showLineNumbers:!1})}}},{type:"custom",key:"connectionCheck",customField:{render:function(e){let{formData:t}=e,[n,c]=(0,i.useState)(null);async function a(){c(null),await new Promise(e=>setTimeout(e,200)),x({type:"duckdb-over-http",config:t}).checkConnectionState().then(e=>{c("connected"===e.state)})}return(0,i.useEffect)(()=>{a()},[t]),(0,s.jsxs)("div",{className:"flex text-sm items-center h-6 group transition-opacity duration-200 gap-2",children:[null===n&&(0,s.jsx)("div",{children:"Testing ... \uD83D\uDD04"}),!0===n&&(0,s.jsx)("div",{children:"Test successful ✅"}),!1===n&&(0,s.jsx)("div",{children:"Test failed ❌ "}),(0,s.jsx)(T.z,{className:"group-hover:opacity-100 opacity-0 transition-opacity duration-200",style:{width:24,height:24},variant:"ghost",size:"icon",onClick:a,children:(0,s.jsx)(z.Z,{size:16})})]})}}}]},"duckdb-wasm":{fields:[{type:"description",label:"This configuration uses a DuckDB WASM instance in the browser, requiring no extra setup. However, it's limited by single-thread performance, a 1GB memory cap, and restricted local file access.",key:"description"},{type:"warning",label:"This configuration is still in development.",key:"warning"}]},"duckdb-wasm-motherduck":{fields:[{type:"description",label:"This configuration uses DuckDB WASM in the browser and allows you to connect to a MotherDuck. You can then effectively query data that is both available in the browser and via MotherDuck. ",key:"description"},{type:"warning",label:"This configuration is still in development.",key:"warning"}]}};function V(e){let{spec:t,onSpecChange:n,onSpecSave:i}=e,c=W[t.type];return(0,s.jsx)("div",{className:"max-w-xl w-full h-full",children:(0,s.jsxs)("div",{className:"flex items-center flex-col justify-between h-full w-full",children:[(0,s.jsx)("div",{className:"min-w-full",children:(0,s.jsxs)(q.Ph,{value:t.type,onValueChange:e=>{n(y(e))},children:[(0,s.jsx)(q.i4,{className:"mb-4",children:(0,s.jsx)(q.ki,{placeholder:"DuckDB instance"})}),(0,s.jsx)(q.Bw,{children:Object.keys(W).map(e=>(0,s.jsx)(q.Ql,{value:e,children:p(e)},e))})]})}),(0,s.jsx)("div",{className:"w-full flex-grow",children:(0,s.jsx)(M,{className:"h-full flex flex-col justify-between",initialFormData:t.config,formDefinition:c,onSubmit:function(e){n({type:t.type,config:e}),i&&i({type:t.type,config:e})},formWrapper:e=>{let{children:t}=e;return(0,s.jsx)("div",{className:"rounded-md border-separate border p-4 mb-4",children:t})}})})]})})}var Q=n(63357),Y=n(91864);let Z=Q.fC,H=i.forwardRef((e,t)=>{let{className:n,...i}=e;return(0,s.jsx)(Q.ck,{ref:t,className:(0,L.cn)("border-b",n),...i})});H.displayName="AccordionItem";let X=i.forwardRef((e,t)=>{let{className:n,children:i,...c}=e;return(0,s.jsx)(Q.h4,{className:"flex",children:(0,s.jsxs)(Q.xz,{ref:t,className:(0,L.cn)("flex flex-1 items-center justify-between py-4 text-sm font-medium transition-all hover:underline text-left [&[data-state=open]>svg]:rotate-180",n),...c,children:[i,(0,s.jsx)(Y.Z,{className:"h-4 w-4 shrink-0 text-muted-foreground transition-transform duration-200"})]})})});X.displayName=Q.xz.displayName;let G=i.forwardRef((e,t)=>{let{className:n,children:i,...c}=e;return(0,s.jsx)(Q.VY,{ref:t,className:"overflow-hidden text-sm data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down",...c,children:(0,s.jsx)("div",{className:(0,L.cn)("pb-4 pt-0",n),children:i})})});function J(e){let[t,n]=(0,i.useState)(!1);return(0,s.jsxs)("div",{className:"flex items-center space-x-1",children:[(0,s.jsx)("div",{className:"flex items-center",children:t?e.value:"********"}),(0,s.jsx)("div",{className:"text-xs text-gray-500 cursor-pointer",onClick:()=>n(!t),children:t?(0,s.jsx)(N.Z,{size:16}):(0,s.jsx)(D.Z,{size:16})})]})}function K(e){let[t,n]=(0,i.useState)(null);return(0,i.useEffect)(()=>{e.connection.checkConnectionState().then(e=>{n("connected"===e.state)})},[e.connection]),(0,s.jsx)("div",{children:(0,s.jsxs)("div",{className:"flex justify-between items-center p-2 cursor-pointer hover:bg-muted",onClick:e.onClick,children:[(0,s.jsxs)("div",{children:[(0,s.jsx)("div",{className:"font-bold",children:p(e.connection.type)}),function(e){if("duckdb-over-http"===e.type){let t=e.config;return(0,s.jsxs)("div",{className:"space-x-1 text-sm flex",children:[(0,s.jsx)("div",{children:t.url}),t.useToken&&(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("span",{children:"Token="}),(0,s.jsx)(J,{value:t.token})]})]})}}(e.connection)]}),(0,s.jsxs)("div",{children:[!0===t&&(0,s.jsx)("div",{children:"✅"}),!1===t&&(0,s.jsx)("div",{children:"❌"})]})]})})}function $(e){let t=(0,r.m)(e=>e.history),n=t.length;return(0,s.jsx)(Z,{type:"single",collapsible:!0,className:"w-full",children:(0,s.jsxs)(H,{value:"item-1",children:[(0,s.jsxs)(X,{children:["Connection History (",n,")"]}),(0,s.jsx)(G,{className:"max-h-32 overflow-auto border-t p-0 m-0",children:(0,s.jsx)("div",{children:t.map((t,n)=>(0,s.jsx)(K,{onClick:()=>e.onSpecSelected(t),connection:x(t)},n))})})]})})}function ee(){return a.I.getInstance().hasDatabaseConnection()?k(a.I.getInstance().getDatabaseConnection()):y()}function et(e){let[t,n]=(0,i.useState)(ee());return(0,i.useEffect)(()=>{n(ee())},[e.open]),(0,s.jsx)(C.Vq,{open:e.open,onOpenChange:function(t){e.forceOpen&&g.Am.error("You have to configure a connection before you can continue"),t||e.forceOpen||e.onOpenChange(t)},children:(0,s.jsxs)(C.cZ,{className:"flex flex-col max-h-[calc(100vh-64px)] overflow-y-auto gap-0",children:[(0,s.jsxs)(C.fK,{children:[(0,s.jsx)(C.$N,{children:"Configure DuckDB Connection"}),(0,s.jsx)(C.Be,{children:"Configure how you would like to use DuckDB."})]}),(0,s.jsxs)("div",{className:"flex flex-col gap-4",children:[(0,s.jsx)($,{onSpecSelected:n}),(0,s.jsx)(V,{spec:t,onSpecChange:n,onSpecSave:e.onSpecSave})]})]})})}function en(e){let{children:t}=e,{setDatabaseConnection:n,history:o}=(0,r.m)(),l=(0,r.X)(e=>e.hydrated),[d,u,h,f]=(0,r.m)(e=>[e.connectionsConfigOpen,e.connectionsConfigForcedOpen,e.setConnectionsConfigOpen,e.setConnectionsConfigForcedOpen]),p=(0,v.useRouter)(),y=(0,v.usePathname)(),w=async e=>{let t=x(e);"connected"===(await t.checkConnectionState()).state?(await n(t),f(!1)):g.Am.error("Failed to connect to database")};async function j(){let e=new URLSearchParams(window.location.search),t=await S(e,o);if(p.replace(y,void 0),!t){g.Am.error("No viable connection found"),f(!0);return}await n(t);let s=function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=e.config;switch(e.type){case"duckdb-over-http":return"Connected to DuckDB via ".concat(n.url," ").concat(t?"(".concat(n.useToken?"Token: "+n.token:"No authentication",")"):"");case"duckdb-wasm":return"DuckDB WASM: ".concat(n.name);case"duckdb-wasm-motherduck":return"DuckDB WASM (Motherduck): ".concat(n.name)}}(k(e),t)}(t,!1);g.Am.success(s),await new Promise(e=>setTimeout(e,1e3)),0===Object.keys(c.Rx.getState().relations).length&&function(e){let t=(0,b.w)();(0,c.Rx.getState().showRelationFromSource)(e,{type:"query",baseQuery:"-- Directly query Parquet file in S3\nSELECT\nstation_name,\ncount(*) AS num_services\nFROM 's3://duckdb-blobs/train_services.parquet'\n-- FROM train_services\nGROUP BY ALL\nORDER BY num_services DESC\nLIMIT 10;",id:t,name:"Train Station Services"},m.zT)}(a.I.getInstance().getDatabaseConnection().id)}return(0,i.useEffect)(()=>{l&&j()},[l]),(0,s.jsxs)(s.Fragment,{children:[t,(0,s.jsx)(et,{open:d,forceOpen:u,onOpenChange:h,onSpecSave:w})]})}G.displayName=Q.VY.displayName;var es=n(31259);function ei(e){let{children:t,...n}=e;return(0,s.jsx)(es.f,{...n,children:t})}function ec(e){let{children:t}=e;return(0,s.jsxs)("html",{lang:"en",suppressHydrationWarning:!0,children:[(0,s.jsxs)("head",{children:[(0,s.jsx)("title",{children:"Dash"}),(0,s.jsx)("meta",{name:"apple-mobile-web-app-title",content:"Dash"})]}),(0,s.jsx)("body",{className:(0,L.cn)("min-h-screen bg-background antialiased"),children:(0,s.jsxs)("main",{children:[(0,s.jsx)("div",{className:"w-screen h-screen",children:(0,s.jsx)(ei,{attribute:"class",defaultTheme:"system",enableSystem:!0,disableTransitionOnChange:!0,children:(0,s.jsx)(en,{children:(0,s.jsx)("div",{className:"flex flex-row h-screen w-screen",children:t})})})}),(0,s.jsx)(g.x7,{})]})})]})}},63340:function(){}},function(e){e.O(0,[354,217,559,764,301,665,736,744],function(){return e(e.s=98161)}),_N_E=e.O()}]);",    //
     "application/javascript", //
     "/_next/static/chunks/app/layout-301fb5dbb33f4b3d.js/", //
};
}
