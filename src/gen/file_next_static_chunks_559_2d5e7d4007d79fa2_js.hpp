
#pragma once
#include "files.hpp"
namespace duckdb {
const File FILE_NEXT_STATIC_CHUNKS_559_2D5E7D4007D79FA2_JS = {
     // Content
     "(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[559],{29443:function(e,t,n){"use strict";n.d(t,{Ry:function(){return d}});var r=new WeakMap,i=new WeakMap,o={},a=0,s=function(e){return e&&(e.host||s(e.parentNode))},l=function(e,t,n,l){var d=(Array.isArray(e)?e:[e]).map(function(e){if(t.contains(e))return e;var n=s(e);return n&&t.contains(n)?n:(console.error("aria-hidden",e,"in not contained inside",t,". Doing nothing"),null)}).filter(function(e){return!!e});o[n]||(o[n]=new WeakMap);var u=o[n],c=[],h=new Set,f=new Set(d),p=function(e){!e||h.has(e)||(h.add(e),p(e.parentNode))};d.forEach(p);var g=function(e){!e||f.has(e)||Array.prototype.forEach.call(e.children,function(e){if(h.has(e))g(e);else try{var t=e.getAttribute(l),o=null!==t&&"false"!==t,a=(r.get(e)||0)+1,s=(u.get(e)||0)+1;r.set(e,a),u.set(e,s),c.push(e),1===a&&o&&i.set(e,!0),1===s&&e.setAttribute(n,"true"),o||e.setAttribute(l,"true")}catch(t){console.error("aria-hidden: cannot operate on ",e,t)}})};return g(t),h.clear(),a++,function(){c.forEach(function(e){var t=r.get(e)-1,o=u.get(e)-1;r.set(e,t),u.set(e,o),t||(i.has(e)||e.removeAttribute(l),i.delete(e)),o||e.removeAttribute(n)}),--a||(r=new WeakMap,r=new WeakMap,i=new WeakMap,o={})}},d=function(e,t,n){void 0===n&&(n="data-aria-hidden");var r=Array.from(Array.isArray(e)?e:[e]),i=t||("undefined"==typeof document?null:(Array.isArray(e)?e[0]:e).ownerDocument.body);return i?(r.push.apply(r,Array.from(i.querySelectorAll("[aria-live]"))),l(r,i,n,"aria-hidden")):function(){return null}}},87785:function(e,t,n){let r;var i=n(55934);t.formatArgs=function(t){if(t[0]=(this.useColors?"%c":"")+this.namespace+(this.useColors?" %c":" ")+t[0]+(this.useColors?"%c ":" ")+"+"+e.exports.humanize(this.diff),!this.useColors)return;let n="color: "+this.color;t.splice(1,0,n,"color: inherit");let r=0,i=0;t[0].replace(/%[a-zA-Z%]/g,e=>{"%%"!==e&&(r++,"%c"===e&&(i=r))}),t.splice(i,0,n)},t.save=function(e){try{e?t.storage.setItem("debug",e):t.storage.removeItem("debug")}catch(e){}},t.load=function(){let e;try{e=t.storage.getItem("debug")}catch(e){}return!e&&void 0!==i&&"env"in i&&(e=i.env.DEBUG),e},t.useColors=function(){let e;return"undefined"!=typeof window&&!!window.process&&("renderer"===window.process.type||!!window.process.__nwjs)||!("undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/))&&("undefined"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||"undefined"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||"undefined"!=typeof navigator&&navigator.userAgent&&(e=navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/))&&parseInt(e[1],10)>=31||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/))},t.storage=function(){try{return localStorage}catch(e){}}(),t.destroy=(r=!1,()=>{r||(r=!0,console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."))}),t.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"],t.log=console.debug||console.log||(()=>{}),e.exports=n(36960)(t);let{formatters:o}=e.exports;o.j=function(e){try{return JSON.stringify(e)}catch(e){return"[UnexpectedJSONParseError]: "+e.message}}},36960:function(e,t,n){e.exports=function(e){function t(e){let n,i,o;let a=null;function s(...e){if(!s.enabled)return;let r=Number(new Date),i=r-(n||r);s.diff=i,s.prev=n,s.curr=r,n=r,e[0]=t.coerce(e[0]),"string"!=typeof e[0]&&e.unshift("%O");let o=0;e[0]=e[0].replace(/%([a-zA-Z%])/g,(n,r)=>{if("%%"===n)return"%";o++;let i=t.formatters[r];if("function"==typeof i){let t=e[o];n=i.call(s,t),e.splice(o,1),o--}return n}),t.formatArgs.call(s,e),(s.log||t.log).apply(s,e)}return s.namespace=e,s.useColors=t.useColors(),s.color=t.selectColor(e),s.extend=r,s.destroy=t.destroy,Object.defineProperty(s,"enabled",{enumerable:!0,configurable:!1,get:()=>null!==a?a:(i!==t.namespaces&&(i=t.namespaces,o=t.enabled(e)),o),set:e=>{a=e}}),"function"==typeof t.init&&t.init(s),s}function r(e,n){let r=t(this.namespace+(void 0===n?":":n)+e);return r.log=this.log,r}function i(e,t){let n=0,r=0,i=-1,o=0;for(;n<e.length;)if(r<t.length&&(t[r]===e[n]||"*"===t[r]))"*"===t[r]?(i=r,o=n):n++,r++;else{if(-1===i)return!1;r=i+1,n=++o}for(;r<t.length&&"*"===t[r];)r++;return r===t.length}return t.debug=t,t.default=t,t.coerce=function(e){return e instanceof Error?e.stack||e.message:e},t.disable=function(){let e=[...t.names,...t.skips.map(e=>"-"+e)].join(",");return t.enable(""),e},t.enable=function(e){for(let n of(t.save(e),t.namespaces=e,t.names=[],t.skips=[],("string"==typeof e?e:"").trim().replace(" ",",").split(",").filter(Boolean)))"-"===n[0]?t.skips.push(n.slice(1)):t.names.push(n)},t.enabled=function(e){for(let n of t.skips)if(i(e,n))return!1;for(let n of t.names)if(i(e,n))return!0;return!1},t.humanize=n(89646),t.destroy=function(){console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.")},Object.keys(e).forEach(n=>{t[n]=e[n]}),t.names=[],t.skips=[],t.formatters={},t.selectColor=function(e){let n=0;for(let t=0;t<e.length;t++)n=(n<<5)-n+e.charCodeAt(t)|0;return t.colors[Math.abs(n)%t.colors.length]},t.enable(t.load()),t}},46777:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Attribute=void 0;class n{constructor(e,t,n,r){this.name=e,this.modelName=t,this.defaultValue=n,this.alwaysWriteJson=r,this.required=!1,this.fixed=!1,this.type="any"}setType(e){return this.type=e,this}setRequired(){return this.required=!0,this}setFixed(){return this.fixed=!0,this}}t.Attribute=n,n.NUMBER="number",n.STRING="string",n.BOOLEAN="boolean"},67449:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.AttributeDefinitions=void 0;let r=n(46777);class i{constructor(){this.attributes=[],this.nameToAttribute={}}addWithAll(e,t,n,i){let o=new r.Attribute(e,t,n,i);return this.attributes.push(o),this.nameToAttribute[e]=o,o}addInherited(e,t){return this.addWithAll(e,t,void 0,!1)}add(e,t,n){return this.addWithAll(e,void 0,t,n)}getAttributes(){return this.attributes}getModelName(e){let t=this.nameToAttribute[e];if(void 0!==t)return t.modelName}toJson(e,t){for(let n of this.attributes){let r=t[n.name];(n.alwaysWriteJson||r!==n.defaultValue)&&(e[n.name]=r)}}fromJson(e,t){for(let n of this.attributes){let r=e[n.name];void 0===r?t[n.name]=n.defaultValue:t[n.name]=r}}update(e,t){for(let n of this.attributes)if(e.hasOwnProperty(n.name)){let r=e[n.name];void 0===r?delete t[n.name]:t[n.name]=r}}setDefaults(e){for(let t of this.attributes)e[t.name]=t.defaultValue}toTypescriptInterface(e,t){let n=[],r=this.attributes.sort((e,t)=>e.name.localeCompare(t.name));n.push("export interface I"+e+"Attributes {");for(let e=0;e<r.length;e++){let i,o;let a=r[e],s=a.type,l=a;void 0!==l.defaultValue?i=l.defaultValue:void 0!==l.modelName&&void 0!==t&&void 0!==t.nameToAttribute[l.modelName]&&(o=l.modelName,i=(l=t.nameToAttribute[l.modelName]).defaultValue,s=l.type);let d=JSON.stringify(i),u=l.required||l.fixed?"":"?";if(a.fixed)n.push("	"+a.name+": "+d+";");else{let e=(void 0!==i?"default: "+d:"")+(void 0!==o?" - inherited from global "+o:"");n.push("	"+a.name+u+": "+s+";"+(e.length>0?" // "+e:""))}}return n.push("}"),n.join("\n")}}t.AttributeDefinitions=i},23722:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.DockLocation=void 0;let r=n(38406),i=n(78845);class o{static getByName(e){return o.values[e]}static getLocation(e,t,n){if(t=(t-e.x)/e.width,n=(n-e.y)/e.height,t>=.25&&t<.75&&n>=.25&&n<.75)return o.CENTER;let r=n>=t,i=n>=1-t;return r?i?o.BOTTOM:o.LEFT:i?o.RIGHT:o.TOP}constructor(e,t,n){this._name=e,this._orientation=t,this._indexPlus=n,o.values[this._name]=this}getName(){return this._name}getOrientation(){return this._orientation}getDockRect(e){return this===o.TOP?new i.Rect(e.x,e.y,e.width,e.height/2):this===o.BOTTOM?new i.Rect(e.x,e.getBottom()-e.height/2,e.width,e.height/2):this===o.LEFT?new i.Rect(e.x,e.y,e.width/2,e.height):this===o.RIGHT?new i.Rect(e.getRight()-e.width/2,e.y,e.width/2,e.height):e.clone()}split(e,t){return this===o.TOP?{start:new i.Rect(e.x,e.y,e.width,t),end:new i.Rect(e.x,e.y+t,e.width,e.height-t)}:this===o.LEFT?{start:new i.Rect(e.x,e.y,t,e.height),end:new i.Rect(e.x+t,e.y,e.width-t,e.height)}:this===o.RIGHT?{start:new i.Rect(e.getRight()-t,e.y,t,e.height),end:new i.Rect(e.x,e.y,e.width-t,e.height)}:{start:new i.Rect(e.x,e.getBottom()-t,e.width,t),end:new i.Rect(e.x,e.y,e.width,e.height-t)}}reflect(){return this===o.TOP?o.BOTTOM:this===o.LEFT?o.RIGHT:this===o.RIGHT?o.LEFT:o.TOP}toString(){return"(DockLocation: name="+this._name+", orientation="+this._orientation+")"}}t.DockLocation=o,o.values={},o.TOP=new o("top",r.Orientation.VERT,0),o.BOTTOM=new o("bottom",r.Orientation.VERT,1),o.LEFT=new o("left",r.Orientation.HORZ,0),o.RIGHT=new o("right",r.Orientation.HORZ,1),o.CENTER=new o("center",r.Orientation.VERT,0)},77930:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.DragDrop=void 0;let r=n(78845),i=!!("undefined"!=typeof window&&window.document&&window.document.createElement);class o{constructor(){this._manualGlassManagement=!1,this._startX=0,this._startY=0,this._dragDepth=0,this._glassShowing=!1,this._dragging=!1,this._active=!1,i&&(this._glass=document.createElement("div"),this._glass.style.zIndex="998",this._glass.style.backgroundColor="transparent",this._glass.style.outline="none"),this._defaultGlassCursor="default",this._onMouseMove=this._onMouseMove.bind(this),this._onMouseUp=this._onMouseUp.bind(this),this._onKeyPress=this._onKeyPress.bind(this),this._onDragCancel=this._onDragCancel.bind(this),this._onDragEnter=this._onDragEnter.bind(this),this._onDragLeave=this._onDragLeave.bind(this),this.resizeGlass=this.resizeGlass.bind(this),this._lastClick=0,this._clickX=0,this._clickY=0}addGlass(e){var t;this._glassShowing?this._manualGlassManagement=!0:(this._document||(this._document=window.document),this._rootElement||(this._rootElement=this._document.body),this.resizeGlass(),null===(t=this._document.defaultView)||void 0===t||t.addEventListener("resize",this.resizeGlass),this._document.body.appendChild(this._glass),this._glass.tabIndex=-1,this._glass.focus(),this._glass.addEventListener("keydown",this._onKeyPress),this._glass.addEventListener("dragenter",this._onDragEnter,{passive:!1}),this._glass.addEventListener("dragover",this._onMouseMove,{passive:!1}),this._glass.addEventListener("dragleave",this._onDragLeave,{passive:!1}),this._glassShowing=!0,this._fDragCancel=e,this._manualGlassManagement=!1)}resizeGlass(){r.Rect.fromElement(this._rootElement).positionElement(this._glass,"fixed")}hideGlass(){var e;this._glassShowing&&(this._document.body.removeChild(this._glass),null===(e=this._document.defaultView)||void 0===e||e.removeEventListener("resize",this.resizeGlass),this._glassShowing=!1,this._document=void 0,this._rootElement=void 0,this.setGlassCursorOverride(void 0))}_updateGlassCursor(){var e;this._glass.style.cursor=null!==(e=this._glassCursorOverride)&&void 0!==e?e:this._defaultGlassCursor}_setDefaultGlassCursor(e){this._defaultGlassCursor=e,this._updateGlassCursor()}setGlassCursorOverride(e){this._glassCursorOverride=e,this._updateGlassCursor()}startDrag(e,t,n,r,i,o,a,s,l){if(e&&this._lastEvent&&this._lastEvent.type.startsWith("touch")&&e.type.startsWith("mouse")&&e.timeStamp-this._lastEvent.timeStamp<500||this._dragging)return;this._lastEvent=e,s?this._document=s:this._document=window.document,l?this._rootElement=l:this._rootElement=this._document.body;let d=this._getLocationEvent(e);this.addGlass(i),e?(this._startX=d.clientX,this._startY=d.clientY,(!window.matchMedia||window.matchMedia("(pointer: fine)").matches)&&this._setDefaultGlassCursor(getComputedStyle(e.target).cursor),this._stopPropagation(e),this._preventDefault(e)):(this._startX=0,this._startY=0,this._setDefaultGlassCursor("default")),this._dragging=!1,this._fDragStart=t,this._fDragMove=n,this._fDragEnd=r,this._fDragCancel=i,this._fClick=o,this._fDblClick=a,this._active=!0,(null==e?void 0:e.type)==="dragenter"?(this._dragDepth=1,this._rootElement.addEventListener("dragenter",this._onDragEnter,{passive:!1}),this._rootElement.addEventListener("dragover",this._onMouseMove,{passive:!1}),this._rootElement.addEventListener("dragleave",this._onDragLeave,{passive:!1}),this._document.addEventListener("dragend",this._onDragCancel,{passive:!1}),this._document.addEventListener("drop",this._onMouseUp,{passive:!1})):(this._document.addEventListener("mouseup",this._onMouseUp,{passive:!1}),this._document.addEventListener("mousemove",this._onMouseMove,{passive:!1}),this._document.addEventListener("touchend",this._onMouseUp,{passive:!1}),this._document.addEventListener("touchmove",this._onMouseMove,{passive:!1}))}isDragging(){return this._dragging}isActive(){return this._active}toString(){return"(DragDrop: startX="+this._startX+", startY="+this._startY+", dragging="+this._dragging+")"}_onKeyPress(e){"Escape"===e.code&&this._onDragCancel()}_onDragCancel(){this._rootElement.removeEventListener("dragenter",this._onDragEnter),this._rootElement.removeEventListener("dragover",this._onMouseMove),this._rootElement.removeEventListener("dragleave",this._onDragLeave),this._document.removeEventListener("dragend",this._onDragCancel),this._document.removeEventListener("drop",this._onMouseUp),this._document.removeEventListener("mousemove",this._onMouseMove),this._document.removeEventListener("mouseup",this._onMouseUp),this._document.removeEventListener("touchend",this._onMouseUp),this._document.removeEventListener("touchmove",this._onMouseMove),this.hideGlass(),void 0!==this._fDragCancel&&this._fDragCancel(this._dragging),this._dragging=!1,this._active=!1}_getLocationEvent(e){let t=e;return e&&e.touches&&(t=e.touches[0]),t}_getLocationEventEnd(e){let t=e;return e.changedTouches&&(t=e.changedTouches[0]),t}_stopPropagation(e){e.stopPropagation&&e.stopPropagation()}_preventDefault(e){return e.preventDefault&&e.cancelable&&e.preventDefault(),e}_onMouseMove(e){this._lastEvent=e;let t=this._getLocationEvent(e);return this._stopPropagation(e),this._preventDefault(e),!this._dragging&&(Math.abs(this._startX-t.clientX)>5||Math.abs(this._startY-t.clientY)>5)&&(this._dragging=!0,this._fDragStart&&(this._setDefaultGlassCursor("move"),this._dragging=this._fDragStart({clientX:this._startX,clientY:this._startY}))),this._dragging&&this._fDragMove&&this._fDragMove(t),!1}_onMouseUp(e){this._lastEvent=e;let t=this._getLocationEventEnd(e);if(this._stopPropagation(e),this._preventDefault(e),this._active=!1,this._rootElement.removeEventListener("dragenter",this._onDragEnter),this._rootElement.removeEventListener("dragover",this._onMouseMove),this._rootElement.removeEventListener("dragleave",this._onDragLeave),this._document.removeEventListener("dragend",this._onDragCancel),this._document.removeEventListener("drop",this._onMouseUp),this._document.removeEventListener("mousemove",this._onMouseMove),this._document.removeEventListener("mouseup",this._onMouseUp),this._document.removeEventListener("touchend",this._onMouseUp),this._document.removeEventListener("touchmove",this._onMouseMove),this._manualGlassManagement||this.hideGlass(),this._dragging)this._dragging=!1,this._fDragEnd&&this._fDragEnd(e);else if(this._fDragCancel&&this._fDragCancel(this._dragging),5>=Math.abs(this._startX-t.clientX)&&5>=Math.abs(this._startY-t.clientY)){let n=!1,r=new Date().getTime();5>=Math.abs(this._clickX-t.clientX)&&5>=Math.abs(this._clickY-t.clientY)&&r-this._lastClick<500&&this._fDblClick&&(this._fDblClick(e),n=!0),!n&&this._fClick&&this._fClick(e),this._lastClick=r,this._clickX=t.clientX,this._clickY=t.clientY}return!1}_onDragEnter(e){return this._preventDefault(e),this._stopPropagation(e),this._dragDepth++,!1}_onDragLeave(e){return this._preventDefault(e),this._stopPropagation(e),this._dragDepth--,this._dragDepth<=0&&this._onDragCancel(),!1}}t.DragDrop=o,o.instance=new o},62348:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.DropInfo=void 0;class n{constructor(e,t,n,r,i){this.node=e,this.rect=t,this.location=n,this.index=r,this.className=i}}t.DropInfo=n},52051:function(e,t){"use strict";var n;Object.defineProperty(t,"__esModule",{value:!0}),t.I18nLabel=void 0,(n=t.I18nLabel||(t.I18nLabel={})).Close_Tab="Close",n.Close_Tabset="Close tabset",n.Move_Tab="Move: ",n.Move_Tabset="Move tabset",n.Maximize="Maximize tabset",n.Restore="Restore tabset",n.Float_Tab="Show selected tab in floating window",n.Overflow_Menu_Tooltip="Hidden tabs",n.Floating_Window_Message="This panel is shown in a floating window",n.Floating_Window_Show_Window="Show window",n.Floating_Window_Dock_Window="Dock window",n.Error_rendering_component="Error rendering component"},38406:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Orientation=void 0;class n{static flip(e){return e===n.HORZ?n.VERT:n.HORZ}constructor(e){this._name=e}getName(){return this._name}toString(){return this._name}}t.Orientation=n,n.HORZ=new n("horz"),n.VERT=new n("vert")},8846:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.showPopup=void 0;let r=n(10331),i=n(77930),o=n(4818),a=n(98644);t.showPopup=function(e,t,n,a,l,d){var u;let c=a.getRootDiv(),h=a.getClassName,f=e.ownerDocument,p=e.getBoundingClientRect(),g=null!==(u=null==c?void 0:c.getBoundingClientRect())&&void 0!==u?u:new DOMRect(0,0,100,100),m=f.createElement("div");m.className=h(o.CLASSES.FLEXLAYOUT__POPUP_MENU_CONTAINER),p.left<g.left+g.width/2?m.style.left=p.left-g.left+"px":m.style.right=g.right-p.right+"px",p.top<g.top+g.height/2?m.style.top=p.top-g.top+"px":m.style.bottom=g.bottom-p.bottom+"px",i.DragDrop.instance.addGlass(()=>v()),i.DragDrop.instance.setGlassCursorOverride("default"),c&&c.appendChild(m);let v=()=>{a.hidePortal(),i.DragDrop.instance.hideGlass(),c&&c.removeChild(m),m.removeEventListener("mousedown",_),f.removeEventListener("mousedown",b)},_=e=>{e.stopPropagation()},b=e=>{v()};m.addEventListener("mousedown",_),f.addEventListener("mousedown",b),a.showPortal(r.createElement(s,{currentDocument:f,onSelect:n,onHide:v,items:t,classNameMapper:h,layout:a,iconFactory:l,titleFactory:d}),m)};let s=e=>{let{items:t,onHide:n,onSelect:i,classNameMapper:s,layout:l,iconFactory:d,titleFactory:u}=e,c=(e,t)=>{i(e),n(),t.stopPropagation()},h=t.map((e,t)=>r.createElement("div",{key:e.index,className:s(o.CLASSES.FLEXLAYOUT__POPUP_MENU_ITEM),"data-layout-path":"/popup-menu/tb"+t,onClick:t=>c(e,t),title:e.node.getHelpText()},e.node.getModel().isLegacyOverflowMenu()?e.node._getNameForOverflowMenu():r.createElement(a.TabButtonStamp,{node:e.node,layout:l,iconFactory:d,titleFactory:u})));return r.createElement("div",{className:s(o.CLASSES.FLEXLAYOUT__POPUP_MENU),"data-layout-path":"/popup-menu"},h)}},78845:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Rect=void 0;let r=n(38406);class i{static empty(){return new i(0,0,0,0)}constructor(e,t,n,r){this.x=e,this.y=t,this.width=n,this.height=r}static fromElement(e){let{x:t,y:n,width:r,height:o}=e.getBoundingClientRect();return new i(t,n,r,o)}clone(){return new i(this.x,this.y,this.width,this.height)}equals(e){return this.x===(null==e?void 0:e.x)&&this.y===(null==e?void 0:e.y)&&this.width===(null==e?void 0:e.width)&&this.height===(null==e?void 0:e.height)}getBottom(){return this.y+this.height}getRight(){return this.x+this.width}getCenter(){return{x:this.x+this.width/2,y:this.y+this.height/2}}positionElement(e,t){this.styleWithPosition(e.style,t)}styleWithPosition(e,t="absolute"){return e.left=this.x+"px",e.top=this.y+"px",e.width=Math.max(0,this.width)+"px",e.height=Math.max(0,this.height)+"px",e.position=t,e}contains(e,t){return!!(this.x<=e&&e<=this.getRight()&&this.y<=t&&t<=this.getBottom())}removeInsets(e){return new i(this.x+e.left,this.y+e.top,Math.max(0,this.width-e.left-e.right),Math.max(0,this.height-e.top-e.bottom))}centerInRect(e){this.x=(e.width-this.width)/2,this.y=(e.height-this.height)/2}_getSize(e){let t=this.width;return e===r.Orientation.VERT&&(t=this.height),t}toString(){return"(Rect: x="+this.x+", y="+this.y+", width="+this.width+", height="+this.height+")"}}t.Rect=i},4818:function(e,t){"use strict";var n;Object.defineProperty(t,"__esModule",{value:!0}),t.CLASSES=void 0,(n=t.CLASSES||(t.CLASSES={})).FLEXLAYOUT__BORDER="flexlayout__border",n.FLEXLAYOUT__BORDER_="flexlayout__border_",n.FLEXLAYOUT__BORDER_BUTTON="flexlayout__border_button",n.FLEXLAYOUT__BORDER_BUTTON_="flexlayout__border_button_",n.FLEXLAYOUT__BORDER_BUTTON_CONTENT="flexlayout__border_button_content",n.FLEXLAYOUT__BORDER_BUTTON_LEADING="flexlayout__border_button_leading",n.FLEXLAYOUT__BORDER_BUTTON_TRAILING="flexlayout__border_button_trailing",n.FLEXLAYOUT__BORDER_BUTTON__SELECTED="flexlayout__border_button--selected",n.FLEXLAYOUT__BORDER_BUTTON__UNSELECTED="flexlayout__border_button--unselected",n.FLEXLAYOUT__BORDER_TOOLBAR_BUTTON_OVERFLOW="flexlayout__border_toolbar_button_overflow",n.FLEXLAYOUT__BORDER_TOOLBAR_BUTTON_OVERFLOW_="flexlayout__border_toolbar_button_overflow_",n.FLEXLAYOUT__BORDER_INNER="flexlayout__border_inner",n.FLEXLAYOUT__BORDER_INNER_="flexlayout__border_inner_",n.FLEXLAYOUT__BORDER_INNER_TAB_CONTAINER="flexlayout__border_inner_tab_container",n.FLEXLAYOUT__BORDER_INNER_TAB_CONTAINER_="flexlayout__border_inner_tab_container_",n.FLEXLAYOUT__BORDER_TAB_DIVIDER="flexlayout__border_tab_divider",n.FLEXLAYOUT__BORDER_SIZER="flexlayout__border_sizer",n.FLEXLAYOUT__BORDER_TOOLBAR="flexlayout__border_toolbar",n.FLEXLAYOUT__BORDER_TOOLBAR_="flexlayout__border_toolbar_",n.FLEXLAYOUT__BORDER_TOOLBAR_BUTTON="flexlayout__border_toolbar_button",n.FLEXLAYOUT__BORDER_TOOLBAR_BUTTON_FLOAT="flexlayout__border_toolbar_button-float",n.FLEXLAYOUT__DRAG_RECT="flexlayout__drag_rect",n.FLEXLAYOUT__EDGE_RECT="flexlayout__edge_rect",n.FLEXLAYOUT__EDGE_RECT_TOP="flexlayout__edge_rect_top",n.FLEXLAYOUT__EDGE_RECT_LEFT="flexlayout__edge_rect_left",n.FLEXLAYOUT__EDGE_RECT_BOTTOM="flexlayout__edge_rect_bottom",n.FLEXLAYOUT__EDGE_RECT_RIGHT="flexlayout__edge_rect_right",n.FLEXLAYOUT__ERROR_BOUNDARY_CONTAINER="flexlayout__error_boundary_container",n.FLEXLAYOUT__ERROR_BOUNDARY_CONTENT="flexlayout__error_boundary_content",n.FLEXLAYOUT__FLOATING_WINDOW_CONTENT="flexlayout__floating_window_content",n.FLEXLAYOUT__FLOATING_WINDOW_TAB="flexlayout__floating_window_tab",n.FLEXLAYOUT__LAYOUT="flexlayout__layout",n.FLEXLAYOUT__OUTLINE_RECT="flexlayout__outline_rect",n.FLEXLAYOUT__OUTLINE_RECT_EDGE="flexlayout__outline_rect_edge",n.FLEXLAYOUT__SPLITTER="flexlayout__splitter",n.FLEXLAYOUT__SPLITTER_EXTRA="flexlayout__splitter_extra",n.FLEXLAYOUT__SPLITTER_="flexlayout__splitter_",n.FLEXLAYOUT__SPLITTER_BORDER="flexlayout__splitter_border",n.FLEXLAYOUT__SPLITTER_DRAG="flexlayout__splitter_drag",n.FLEXLAYOUT__TAB="flexlayout__tab",n.FLEXLAYOUT__TABSET="flexlayout__tabset",n.FLEXLAYOUT__TABSET_HEADER="flexlayout__tabset_header",n.FLEXLAYOUT__TABSET_HEADER_SIZER="flexlayout__tabset_header_sizer",n.FLEXLAYOUT__TABSET_HEADER_CONTENT="flexlayout__tabset_header_content",n.FLEXLAYOUT__TABSET_MAXIMIZED="flexlayout__tabset-maximized",n.FLEXLAYOUT__TABSET_SELECTED="flexlayout__tabset-selected",n.FLEXLAYOUT__TABSET_SIZER="flexlayout__tabset_sizer",n.FLEXLAYOUT__TABSET_TAB_DIVIDER="flexlayout__tabset_tab_divider",n.FLEXLAYOUT__TABSET_CONTENT="flexlayout__tabset_content",n.FLEXLAYOUT__TABSET_TABBAR_INNER="flexlayout__tabset_tabbar_inner",n.FLEXLAYOUT__TABSET_TABBAR_INNER_="flexlayout__tabset_tabbar_inner_",n.FLEXLAYOUT__TABSET_TABBAR_INNER_TAB_CONTAINER="flexlayout__tabset_tabbar_inner_tab_container",n.FLEXLAYOUT__TABSET_TABBAR_INNER_TAB_CONTAINER_="flexlayout__tabset_tabbar_inner_tab_container_",n.FLEXLAYOUT__TABSET_TABBAR_OUTER="flexlayout__tabset_tabbar_outer",n.FLEXLAYOUT__TABSET_TABBAR_OUTER_="flexlayout__tabset_tabbar_outer_",n.FLEXLAYOUT__TAB_BORDER="flexlayout__tab_border",n.FLEXLAYOUT__TAB_BORDER_="flexlayout__tab_border_",n.FLEXLAYOUT__TAB_BUTTON="flexlayout__tab_button",n.FLEXLAYOUT__TAB_BUTTON_STRETCH="flexlayout__tab_button_stretch",n.FLEXLAYOUT__TAB_BUTTON_CONTENT="flexlayout__tab_button_content",n.FLEXLAYOUT__TAB_BUTTON_LEADING="flexlayout__tab_button_leading",n.FLEXLAYOUT__TAB_BUTTON_OVERFLOW="flexlayout__tab_button_overflow",n.FLEXLAYOUT__TAB_BUTTON_OVERFLOW_COUNT="flexlayout__tab_button_overflow_count",n.FLEXLAYOUT__TAB_BUTTON_TEXTBOX="flexlayout__tab_button_textbox",n.FLEXLAYOUT__TAB_BUTTON_TRAILING="flexlayout__tab_button_trailing",n.FLEXLAYOUT__TAB_BUTTON_STAMP="flexlayout__tab_button_stamp",n.FLEXLAYOUT__TAB_FLOATING="flexlayout__tab_floating",n.FLEXLAYOUT__TAB_FLOATING_INNER="flexlayout__tab_floating_inner",n.FLEXLAYOUT__TAB_TOOLBAR="flexlayout__tab_toolbar",n.FLEXLAYOUT__TAB_TOOLBAR_BUTTON="flexlayout__tab_toolbar_button",n.FLEXLAYOUT__TAB_TOOLBAR_BUTTON_="flexlayout__tab_toolbar_button-",n.FLEXLAYOUT__TAB_TOOLBAR_BUTTON_FLOAT="flexlayout__tab_toolbar_button-float",n.FLEXLAYOUT__TAB_TOOLBAR_STICKY_BUTTONS_CONTAINER="flexlayout__tab_toolbar_sticky_buttons_container",n.FLEXLAYOUT__TAB_TOOLBAR_BUTTON_CLOSE="flexlayout__tab_toolbar_button-close",n.FLEXLAYOUT__POPUP_MENU_CONTAINER="flexlayout__popup_menu_container",n.FLEXLAYOUT__POPUP_MENU_ITEM="flexlayout__popup_menu_item",n.FLEXLAYOUT__POPUP_MENU="flexlayout__popup_menu"},53314:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var i=Object.getOwnPropertyDescriptor(t,n);(!i||("get"in i?!t.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,i)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),i=this&&this.__exportStar||function(e,t){for(var n in e)"default"===n||Object.prototype.hasOwnProperty.call(t,n)||r(t,e,n)};Object.defineProperty(t,"__esModule",{value:!0}),i(n(61345),t),i(n(65734),t),i(n(99430),t),i(n(94718),t),i(n(35983),t),i(n(64262),t),i(n(7603),t),i(n(91725),t),i(n(9840),t),i(n(94423),t),i(n(27525),t),i(n(55194),t),i(n(2591),t),i(n(88624),t),i(n(20839),t),i(n(23722),t),i(n(77930),t),i(n(62348),t),i(n(52051),t),i(n(38406),t),i(n(78845),t),i(n(4818),t)},65734:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Action=void 0;class n{constructor(e,t){this.type=e,this.data=t}}t.Action=n},99430:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Actions=void 0;let r=n(65734);class i{static addNode(e,t,n,o,a){return new r.Action(i.ADD_NODE,{json:e,toNode:t,location:n.getName(),index:o,select:a})}static moveNode(e,t,n,o,a){return new r.Action(i.MOVE_NODE,{fromNode:e,toNode:t,location:n.getName(),index:o,select:a})}static deleteTab(e){return new r.Action(i.DELETE_TAB,{node:e})}static deleteTabset(e){return new r.Action(i.DELETE_TABSET,{node:e})}static renameTab(e,t){return new r.Action(i.RENAME_TAB,{node:e,text:t})}static selectTab(e){return new r.Action(i.SELECT_TAB,{tabNode:e})}static setActiveTabset(e){return new r.Action(i.SET_ACTIVE_TABSET,{tabsetNode:e})}static adjustSplit(e){let t=e.node1Id,n=e.node2Id;return new r.Action(i.ADJUST_SPLIT,{node1:t,weight1:e.weight1,pixelWidth1:e.pixelWidth1,node2:n,weight2:e.weight2,pixelWidth2:e.pixelWidth2})}static adjustBorderSplit(e,t){return new r.Action(i.ADJUST_BORDER_SPLIT,{node:e,pos:t})}static maximizeToggle(e){return new r.Action(i.MAXIMIZE_TOGGLE,{node:e})}static updateModelAttributes(e){return new r.Action(i.UPDATE_MODEL_ATTRIBUTES,{json:e})}static updateNodeAttributes(e,t){return new r.Action(i.UPDATE_NODE_ATTRIBUTES,{node:e,json:t})}static floatTab(e){return new r.Action(i.FLOAT_TAB,{node:e})}static unFloatTab(e){return new r.Action(i.UNFLOAT_TAB,{node:e})}}t.Actions=i,i.ADD_NODE="FlexLayout_AddNode",i.MOVE_NODE="FlexLayout_MoveNode",i.DELETE_TAB="FlexLayout_DeleteTab",i.DELETE_TABSET="FlexLayout_DeleteTabset",i.RENAME_TAB="FlexLayout_RenameTab",i.SELECT_TAB="FlexLayout_SelectTab",i.SET_ACTIVE_TABSET="FlexLayout_SetActiveTabset",i.ADJUST_SPLIT="FlexLayout_AdjustSplit",i.ADJUST_BORDER_SPLIT="FlexLayout_AdjustBorderSplit",i.MAXIMIZE_TOGGLE="FlexLayout_MaximizeToggle",i.UPDATE_MODEL_ATTRIBUTES="FlexLayout_UpdateModelAttributes",i.UPDATE_NODE_ATTRIBUTES="FlexLayout_UpdateNodeAttributes",i.FLOAT_TAB="FlexLayout_FloatTab",i.UNFLOAT_TAB="FlexLayout_UnFloatTab"},94718:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.BorderNode=void 0;let r=n(46777),i=n(67449),o=n(23722),a=n(62348),s=n(38406),l=n(78845),d=n(4818),u=n(27525),c=n(2591),h=n(88624),f=n(96271);class p extends u.Node{static _fromJson(e,t){let n=new p(o.DockLocation.getByName(e.location),e,t);return e.children&&(n._children=e.children.map(e=>{let r=h.TabNode._fromJson(e,t);return r._setParent(n),r})),n}static _createAttributeDefinitions(){let e=new i.AttributeDefinitions;return e.add("type",p.TYPE,!0).setType(r.Attribute.STRING).setFixed(),e.add("selected",-1).setType(r.Attribute.NUMBER),e.add("show",!0).setType(r.Attribute.BOOLEAN),e.add("config",void 0).setType("any"),e.addInherited("barSize","borderBarSize").setType(r.Attribute.NUMBER),e.addInherited("enableDrop","borderEnableDrop").setType(r.Attribute.BOOLEAN),e.addInherited("className","borderClassName").setType(r.Attribute.STRING),e.addInherited("autoSelectTabWhenOpen","borderAutoSelectTabWhenOpen").setType(r.Attribute.BOOLEAN),e.addInherited("autoSelectTabWhenClosed","borderAutoSelectTabWhenClosed").setType(r.Attribute.BOOLEAN),e.addInherited("size","borderSize").setType(r.Attribute.NUMBER),e.addInherited("minSize","borderMinSize").setType(r.Attribute.NUMBER),e.addInherited("enableAutoHide","borderEnableAutoHide").setType(r.Attribute.BOOLEAN),e}constructor(e,t,n){super(n),this._adjustedSize=0,this._calculatedBorderBarSize=0,this._location=e,this._drawChildren=[],this._attributes.id=`border_${e.getName()}`,p._attributeDefinitions.fromJson(t,this._attributes),n._addNode(this)}getLocation(){return this._location}getTabHeaderRect(){return this._tabHeaderRect}getRect(){return this._tabHeaderRect}getContentRect(){return this._contentRect}isEnableDrop(){return this._getAttr("enableDrop")}isAutoSelectTab(e){return(null==e&&(e=-1!==this.getSelected()),e)?this._getAttr("autoSelectTabWhenOpen"):this._getAttr("autoSelectTabWhenClosed")}getClassName(){return this._getAttr("className")}calcBorderBarSize(e){let t=this._getAttr("barSize");0!==t?this._calculatedBorderBarSize=t:this._calculatedBorderBarSize=e.borderBarSize}getBorderBarSize(){return this._calculatedBorderBarSize}getSize(){let e=this._getAttr("size"),t=this.getSelected();if(-1===t)return e;{let n=this._children[t],r=this._location._orientation===s.Orientation.HORZ?n._getAttr("borderWidth"):n._getAttr("borderHeight");return -1===r?e:r}}getMinSize(){return this._getAttr("minSize")}getSelected(){return this._attributes.selected}getSelectedNode(){if(-1!==this.getSelected())return this._children[this.getSelected()]}getOrientation(){return this._location.getOrientation()}getConfig(){return this._attributes.config}isMaximized(){return!1}isShowing(){return!!this._attributes.show&&(!(this._model._getShowHiddenBorder()!==this._location&&this.isAutoHide())||0!==this._children.length)}isAutoHide(){return this._getAttr("enableAutoHide")}_setSelected(e){this._attributes.selected=e}_setSize(e){let t=this.getSelected();if(-1===t)this._attributes.size=e;else{let n=this._children[t];-1===(this._location._orientation===s.Orientation.HORZ?n._getAttr("borderWidth"):n._getAttr("borderHeight"))?this._attributes.size=e:this._location._orientation===s.Orientation.HORZ?n._setBorderWidth(e):n._setBorderHeight(e)}}_updateAttrs(e){p._attributeDefinitions.update(e,this._attributes)}_getDrawChildren(){return this._drawChildren}_setAdjustedSize(e){this._adjustedSize=e}_getAdjustedSize(){return this._adjustedSize}_layoutBorderOuter(e,t){this.calcBorderBarSize(t);let n=this._location.split(e,this.getBorderBarSize());return this._tabHeaderRect=n.start,n.end}_layoutBorderInner(e,t){this._drawChildren=[];let n=this._location,r=n.split(e,this._adjustedSize+this._model.getSplitterSize()),i=n.reflect().split(r.start,this._model.getSplitterSize());this._contentRect=i.end;for(let e=0;e<this._children.length;e++){let n=this._children[e];n._layout(this._contentRect,t),n._setVisible(e===this.getSelected()),this._drawChildren.push(n)}if(-1===this.getSelected())return e;{let e=new c.SplitterNode(this._model);return e._setParent(this),e._setRect(i.start),this._drawChildren.push(e),r.end}}_remove(e){let t=this._removeChild(e);-1!==this.getSelected()&&(0,f.adjustSelectedIndex)(this,t)}canDrop(e,t,n){let r;if(e.getType()!==h.TabNode.TYPE)return;let i=o.DockLocation.CENTER;if(this._tabHeaderRect.contains(t,n)){if(this._location._orientation===s.Orientation.VERT){if(this._children.length>0){let e=this._children[0],n=e.getTabRect(),o=n.y,s=n.height,u=this._tabHeaderRect.x,c=0;for(let h=0;h<this._children.length;h++){if(c=(n=(e=this._children[h]).getTabRect()).x+n.width/2,t>=u&&t<c){let e=new l.Rect(n.x-2,o,3,s);r=new a.DropInfo(this,e,i,h,d.CLASSES.FLEXLAYOUT__OUTLINE_RECT);break}u=c}if(null==r){let e=new l.Rect(n.getRight()-2,o,3,s);r=new a.DropInfo(this,e,i,this._children.length,d.CLASSES.FLEXLAYOUT__OUTLINE_RECT)}}else{let e=new l.Rect(this._tabHeaderRect.x+1,this._tabHeaderRect.y+2,3,18);r=new a.DropInfo(this,e,i,0,d.CLASSES.FLEXLAYOUT__OUTLINE_RECT)}}else if(this._children.length>0){let e=this._children[0],t=e.getTabRect(),o=t.x,s=t.width,u=this._tabHeaderRect.y,c=0;for(let h=0;h<this._children.length;h++){if(c=(t=(e=this._children[h]).getTabRect()).y+t.height/2,n>=u&&n<c){let e=new l.Rect(o,t.y-2,s,3);r=new a.DropInfo(this,e,i,h,d.CLASSES.FLEXLAYOUT__OUTLINE_RECT);break}u=c}if(null==r){let e=new l.Rect(o,t.getBottom()-2,s,3);r=new a.DropInfo(this,e,i,this._children.length,d.CLASSES.FLEXLAYOUT__OUTLINE_RECT)}}else{let e=new l.Rect(this._tabHeaderRect.x+2,this._tabHeaderRect.y+1,18,3);r=new a.DropInfo(this,e,i,0,d.CLASSES.FLEXLAYOUT__OUTLINE_RECT)}if(!e._canDockInto(e,r))return}else if(-1!==this.getSelected()&&this._contentRect.contains(t,n)){let t=this._contentRect;if(r=new a.DropInfo(this,t,i,-1,d.CLASSES.FLEXLAYOUT__OUTLINE_RECT),!e._canDockInto(e,r))return}return r}drop(e,t,n,r){let i=0,o=e.getParent();void 0!==o&&(i=o._removeChild(e),o!==this&&o instanceof p&&o.getSelected()===i?o._setSelected(-1):(0,f.adjustSelectedIndex)(o,i)),e.getType()===h.TabNode.TYPE&&o===this&&i<n&&n>0&&n--;let a=n;-1===a&&(a=this._children.length),e.getType()===h.TabNode.TYPE&&this._addChild(e,a),(r||!1!==r&&this.isAutoSelectTab())&&this._setSelected(a),this._model._tidy()}toJson(){let e={};return p._attributeDefinitions.toJson(e,this._attributes),e.location=this._location.getName(),e.children=this._children.map(e=>e.toJson()),e}_getSplitterBounds(e,t=!1){let n=[0,0],r=t?this.getMinSize():0,i=this._model._getOuterInnerRects().outer,a=this._model._getOuterInnerRects().inner,s=this._model.getRoot();return this._location===o.DockLocation.TOP?(n[0]=i.y+r,n[1]=Math.max(n[0],a.getBottom()-e.getHeight()-s.getMinHeight())):this._location===o.DockLocation.LEFT?(n[0]=i.x+r,n[1]=Math.max(n[0],a.getRight()-e.getWidth()-s.getMinWidth())):this._location===o.DockLocation.BOTTOM?(n[1]=i.getBottom()-e.getHeight()-r,n[0]=Math.min(n[1],a.y+s.getMinHeight())):this._location===o.DockLocation.RIGHT&&(n[1]=i.getRight()-e.getWidth()-r,n[0]=Math.min(n[1],a.x+s.getMinWidth())),n}_calculateSplit(e,t){let n=this._getSplitterBounds(e);return this._location===o.DockLocation.BOTTOM||this._location===o.DockLocation.RIGHT?Math.max(0,n[1]-t):Math.max(0,t-n[0])}_getAttributeDefinitions(){return p._attributeDefinitions}static getAttributeDefinitions(){return p._attributeDefinitions}}t.BorderNode=p,p.TYPE="border",p._attributeDefinitions=p._createAttributeDefinitions()},35983:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.BorderSet=void 0;let r=n(38406),i=n(94718);class o{static _fromJson(e,t){let n=new o(t);return n._borders=e.map(e=>i.BorderNode._fromJson(e,t)),n}constructor(e){this._model=e,this._borders=[]}getBorders(){return this._borders}_forEachNode(e){for(let t of this._borders)for(let n of(e(t,0),t.getChildren()))n._forEachNode(e,1)}_toJson(){return this._borders.map(e=>e.toJson())}_layoutBorder(e,t){let n=e.outer,i=this._model.getRoot(),o=Math.max(0,n.height-i.getMinHeight()),a=Math.max(0,n.width-i.getMinWidth()),s=0,l=0,d=0,u=0,c=this._borders.filter(e=>e.isShowing());for(let e of c){e._setAdjustedSize(e.getSize());let t=-1!==e.getSelected();e.getLocation().getOrientation()===r.Orientation.HORZ?(l+=e.getBorderBarSize(),t&&(a-=this._model.getSplitterSize(),l+=e.getSize(),u+=e.getSize())):(s+=e.getBorderBarSize(),t&&(o-=this._model.getSplitterSize(),s+=e.getSize(),d+=e.getSize()))}let h=0,f=!1;for(;l>a&&u>0||s>o&&d>0;){let e=c[h];if(-1!==e.getSelected()){let t=e._getAdjustedSize();l>a&&u>0&&e.getLocation().getOrientation()===r.Orientation.HORZ&&t>0&&t>e.getMinSize()?(e._setAdjustedSize(t-1),l--,u--,f=!0):s>o&&d>0&&e.getLocation().getOrientation()===r.Orientation.VERT&&t>0&&t>e.getMinSize()&&(e._setAdjustedSize(t-1),s--,d--,f=!0)}if(0==(h=(h+1)%c.length)){if(f)f=!1;else break}}for(let n of c)e.outer=n._layoutBorderOuter(e.outer,t);for(let n of(e.inner=e.outer,c))e.inner=n._layoutBorderInner(e.inner,t);return e}_findDropTargetNode(e,t,n){for(let r of this._borders)if(r.isShowing()){let i=r.canDrop(e,t,n);if(void 0!==i)return i}}}t.BorderSet=o},64262:function(e,t){"use strict";var n;Object.defineProperty(t,"__esModule",{value:!0}),t.ICloseType=void 0,(n=t.ICloseType||(t.ICloseType={}))[n.Visible=1]="Visible",n[n.Always=2]="Always",n[n.Selected=3]="Selected"},7603:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0})},91725:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0})},9840:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0})},94423:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Model=void 0;let r=n(46777),i=n(67449),o=n(23722),a=n(38406),s=n(78845),l=n(99430),d=n(94718),u=n(35983),c=n(55194),h=n(88624),f=n(20839),p=n(96271);class g{static fromJson(e){let t=new g;return g._attributeDefinitions.fromJson(e.global,t._attributes),e.borders&&(t._borders=u.BorderSet._fromJson(e.borders,t)),t._root=c.RowNode._fromJson(e.layout,t),t._tidy(),t}static _createAttributeDefinitions(){let e=new i.AttributeDefinitions;return e.add("legacyOverflowMenu",!1).setType(r.Attribute.BOOLEAN),e.add("enableEdgeDock",!0).setType(r.Attribute.BOOLEAN),e.add("rootOrientationVertical",!1).setType(r.Attribute.BOOLEAN),e.add("marginInsets",{top:0,right:0,bottom:0,left:0}).setType("IInsets"),e.add("enableUseVisibility",!1).setType(r.Attribute.BOOLEAN),e.add("enableRotateBorderIcons",!0).setType(r.Attribute.BOOLEAN),e.add("splitterSize",-1).setType(r.Attribute.NUMBER),e.add("splitterExtra",0).setType(r.Attribute.NUMBER),e.add("tabEnableClose",!0).setType(r.Attribute.BOOLEAN),e.add("tabCloseType",1).setType("ICloseType"),e.add("tabEnableFloat",!1).setType(r.Attribute.BOOLEAN),e.add("tabEnableDrag",!0).setType(r.Attribute.BOOLEAN),e.add("tabEnableRename",!0).setType(r.Attribute.BOOLEAN),e.add("tabContentClassName",void 0).setType(r.Attribute.STRING),e.add("tabClassName",void 0).setType(r.Attribute.STRING),e.add("tabIcon",void 0).setType(r.Attribute.STRING),e.add("tabEnableRenderOnDemand",!0).setType(r.Attribute.BOOLEAN),e.add("tabDragSpeed",.3).setType(r.Attribute.NUMBER),e.add("tabBorderWidth",-1).setType(r.Attribute.NUMBER),e.add("tabBorderHeight",-1).setType(r.Attribute.NUMBER),e.add("tabSetEnableDeleteWhenEmpty",!0).setType(r.Attribute.BOOLEAN),e.add("tabSetEnableDrop",!0).setType(r.Attribute.BOOLEAN),e.add("tabSetEnableDrag",!0).setType(r.Attribute.BOOLEAN),e.add("tabSetEnableDivide",!0).setType(r.Attribute.BOOLEAN),e.add("tabSetEnableMaximize",!0).setType(r.Attribute.BOOLEAN),e.add("tabSetEnableClose",!1).setType(r.Attribute.BOOLEAN),e.add("tabSetEnableSingleTabStretch",!1).setType(r.Attribute.BOOLEAN),e.add("tabSetAutoSelectTab",!0).setType(r.Attribute.BOOLEAN),e.add("tabSetClassNameTabStrip",void 0).setType(r.Attribute.STRING),e.add("tabSetClassNameHeader",void 0).setType(r.Attribute.STRING),e.add("tabSetEnableTabStrip",!0).setType(r.Attribute.BOOLEAN),e.add("tabSetHeaderHeight",0).setType(r.Attribute.NUMBER),e.add("tabSetTabStripHeight",0).setType(r.Attribute.NUMBER),e.add("tabSetMarginInsets",{top:0,right:0,bottom:0,left:0}).setType("IInsets"),e.add("tabSetBorderInsets",{top:0,right:0,bottom:0,left:0}).setType("IInsets"),e.add("tabSetTabLocation","top").setType("ITabLocation"),e.add("tabSetMinWidth",0).setType(r.Attribute.NUMBER),e.add("tabSetMinHeight",0).setType(r.Attribute.NUMBER),e.add("borderSize",200).setType(r.Attribute.NUMBER),e.add("borderMinSize",0).setType(r.Attribute.NUMBER),e.add("borderBarSize",0).setType(r.Attribute.NUMBER),e.add("borderEnableDrop",!0).setType(r.Attribute.BOOLEAN),e.add("borderAutoSelectTabWhenOpen",!0).setType(r.Attribute.BOOLEAN),e.add("borderAutoSelectTabWhenClosed",!1).setType(r.Attribute.BOOLEAN),e.add("borderClassName",void 0).setType(r.Attribute.STRING),e.add("borderEnableAutoHide",!1).setType(r.Attribute.BOOLEAN),e}constructor(){this._borderRects={inner:s.Rect.empty(),outer:s.Rect.empty()},this._attributes={},this._idMap={},this._borders=new u.BorderSet(this),this._pointerFine=!0,this._showHiddenBorder=o.DockLocation.CENTER}_setChangeListener(e){this._changeListener=e}getActiveTabset(){return this._activeTabSet&&this.getNodeById(this._activeTabSet.getId())?this._activeTabSet:void 0}_getShowHiddenBorder(){return this._showHiddenBorder}_setShowHiddenBorder(e){this._showHiddenBorder=e}_setActiveTabset(e){this._activeTabSet=e}getMaximizedTabset(){return this._maximizedTabSet}_setMaximizedTabset(e){this._maximizedTabSet=e}getRoot(){return this._root}isRootOrientationVertical(){return this._attributes.rootOrientationVertical}isUseVisibility(){return this._attributes.enableUseVisibility}isEnableRotateBorderIcons(){return this._attributes.enableRotateBorderIcons}getBorderSet(){return this._borders}_getOuterInnerRects(){return this._borderRects}_getPointerFine(){return this._pointerFine}_setPointerFine(e){this._pointerFine=e}visitNodes(e){this._borders._forEachNode(e),this._root._forEachNode(e,0)}getNodeById(e){return this._idMap[e]}getFirstTabSet(e=this._root){let t=e.getChildren()[0];return t instanceof f.TabSetNode?t:this.getFirstTabSet(t)}doAction(e){let t;switch(e.type){case l.Actions.ADD_NODE:{let n=new h.TabNode(this,e.data.json,!0),r=this._idMap[e.data.toNode];(r instanceof f.TabSetNode||r instanceof d.BorderNode||r instanceof c.RowNode)&&(r.drop(n,o.DockLocation.getByName(e.data.location),e.data.index,e.data.select),t=n);break}case l.Actions.MOVE_NODE:{let t=this._idMap[e.data.fromNode];if(t instanceof h.TabNode||t instanceof f.TabSetNode){let n=this._idMap[e.data.toNode];(n instanceof f.TabSetNode||n instanceof d.BorderNode||n instanceof c.RowNode)&&n.drop(t,o.DockLocation.getByName(e.data.location),e.data.index,e.data.select)}break}case l.Actions.DELETE_TAB:{let t=this._idMap[e.data.node];t instanceof h.TabNode&&t._delete();break}case l.Actions.DELETE_TABSET:{let t=this._idMap[e.data.node];if(t instanceof f.TabSetNode){let e=[...t.getChildren()];for(let t=0;t<e.length;t++){let n=e[t];n.isEnableClose()&&n._delete()}0===t.getChildren().length&&t._delete(),this._tidy()}break}case l.Actions.FLOAT_TAB:{let t=this._idMap[e.data.node];t instanceof h.TabNode&&(t._setFloating(!0),(0,p.adjustSelectedIndexAfterFloat)(t));break}case l.Actions.UNFLOAT_TAB:{let t=this._idMap[e.data.node];t instanceof h.TabNode&&(t._setFloating(!1),(0,p.adjustSelectedIndexAfterDock)(t));break}case l.Actions.RENAME_TAB:{let t=this._idMap[e.data.node];t instanceof h.TabNode&&t._setName(e.data.text);break}case l.Actions.SELECT_TAB:{let t=this._idMap[e.data.tabNode];if(t instanceof h.TabNode){let e=t.getParent(),n=e.getChildren().indexOf(t);e instanceof d.BorderNode?e.getSelected()===n?e._setSelected(-1):e._setSelected(n):e instanceof f.TabSetNode&&(e.getSelected()!==n&&e._setSelected(n),this._activeTabSet=e)}break}case l.Actions.SET_ACTIVE_TABSET:if(void 0===e.data.tabsetNode)this._activeTabSet=void 0;else{let t=this._idMap[e.data.tabsetNode];t instanceof f.TabSetNode&&(this._activeTabSet=t)}break;case l.Actions.ADJUST_SPLIT:{let t=this._idMap[e.data.node1],n=this._idMap[e.data.node2];(t instanceof f.TabSetNode||t instanceof c.RowNode)&&(n instanceof f.TabSetNode||n instanceof c.RowNode)&&(this._adjustSplitSide(t,e.data.weight1,e.data.pixelWidth1),this._adjustSplitSide(n,e.data.weight2,e.data.pixelWidth2));break}case l.Actions.ADJUST_BORDER_SPLIT:{let t=this._idMap[e.data.node];t instanceof d.BorderNode&&t._setSize(e.data.pos);break}case l.Actions.MAXIMIZE_TOGGLE:{let t=this._idMap[e.data.node];t instanceof f.TabSetNode&&(t===this._maximizedTabSet?this._maximizedTabSet=void 0:(this._maximizedTabSet=t,this._activeTabSet=t));break}case l.Actions.UPDATE_MODEL_ATTRIBUTES:this._updateAttrs(e.data.json);break;case l.Actions.UPDATE_NODE_ATTRIBUTES:this._idMap[e.data.node]._updateAttrs(e.data.json)}return this._updateIdMap(),void 0!==this._changeListener&&this._changeListener(e),t}_updateIdMap(){this._idMap={},this.visitNodes(e=>this._idMap[e.getId()]=e)}_adjustSplitSide(e,t,n){e._setWeight(t),null!=e.getWidth()&&e.getOrientation()===a.Orientation.VERT?e._updateAttrs({width:n}):null!=e.getHeight()&&e.getOrientation()===a.Orientation.HORZ&&e._updateAttrs({height:n})}toJson(){let e={};return g._attributeDefinitions.toJson(e,this._attributes),this.visitNodes(e=>{e._fireEvent("save",void 0)}),{global:e,borders:this._borders._toJson(),layout:this._root.toJson()}}getSplitterSize(){let e=this._attributes.splitterSize;return -1===e&&(e=this._pointerFine?8:12),e}isLegacyOverflowMenu(){return this._attributes.legacyOverflowMenu}getSplitterExtra(){return this._attributes.splitterExtra}isEnableEdgeDock(){return this._attributes.enableEdgeDock}_addNode(e){let t=e.getId();if(void 0!==this._idMap[t])throw Error(`Error: each node must have a unique id, duplicate id:${e.getId()}`);"splitter"!==e.getType()&&(this._idMap[t]=e)}_layout(e,t){var n;return this._borderRects=this._borders._layoutBorder({outer:e,inner:e},t),e=this._borderRects.inner.removeInsets(this._getAttribute("marginInsets")),null===(n=this._root)||void 0===n||n.calcMinSize(),this._root._layout(e,t),e}_findDropTargetNode(e,t,n){let r=this._root._findDropTargetNode(e,t,n);return void 0===r&&(r=this._borders._findDropTargetNode(e,t,n)),r}_tidy(){this._root._tidy()}_updateAttrs(e){g._attributeDefinitions.update(e,this._attributes)}_nextUniqueId(){return"#"+(0,p.randomUUID)()}_getAttribute(e){return this._attributes[e]}setOnAllowDrop(e){this._onAllowDrop=e}_getOnAllowDrop(){return this._onAllowDrop}setOnCreateTabSet(e){this._onCreateTabSet=e}_getOnCreateTabSet(){return this._onCreateTabSet}static toTypescriptInterfaces(){console.log(g._attributeDefinitions.toTypescriptInterface("Global",void 0)),console.log(c.RowNode.getAttributeDefinitions().toTypescriptInterface("Row",g._attributeDefinitions)),console.log(f.TabSetNode.getAttributeDefinitions().toTypescriptInterface("TabSet",g._attributeDefinitions)),console.log(h.TabNode.getAttributeDefinitions().toTypescriptInterface("Tab",g._attributeDefinitions)),console.log(d.BorderNode.getAttributeDefinitions().toTypescriptInterface("Border",g._attributeDefinitions))}toString(){return JSON.stringify(this.toJson())}}t.Model=g,g._attributeDefinitions=g._createAttributeDefinitions()},27525:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Node=void 0;let r=n(23722),i=n(38406),o=n(78845);class a{constructor(e){this._dirty=!1,this._tempSize=0,this._model=e,this._attributes={},this._children=[],this._fixed=!1,this._rect=o.Rect.empty(),this._visible=!1,this._listeners={}}getId(){let e=this._attributes.id;return void 0!==e||(e=this._model._nextUniqueId(),this._setId(e)),e}getModel(){return this._model}getType(){return this._attributes.type}getParent(){return this._parent}getChildren(){return this._children}getRect(){return this._rect}isVisible(){return this._visible}getOrientation(){return void 0===this._parent?this._model.isRootOrientationVertical()?i.Orientation.VERT:i.Orientation.HORZ:i.Orientation.flip(this._parent.getOrientation())}setEventListener(e,t){this._listeners[e]=t}removeEventListener(e){delete this._listeners[e]}_setId(e){this._attributes.id=e}_fireEvent(e,t){void 0!==this._listeners[e]&&this._listeners[e](t)}_getAttr(e){let t=this._attributes[e];if(void 0===t){let n=this._getAttributeDefinitions().getModelName(e);void 0!==n&&(t=this._model._getAttribute(n))}return t}_forEachNode(e,t){for(let n of(e(this,t),t++,this._children))n._forEachNode(e,t)}_setVisible(e){e!==this._visible&&(this._fireEvent("visibility",{visible:e}),this._visible=e)}_getDrawChildren(){return this._children}_setParent(e){this._parent=e}_setRect(e){this._rect=e}_setWeight(e){this._attributes.weight=e}_setSelected(e){this._attributes.selected=e}_isFixed(){return this._fixed}_layout(e,t){this._rect=e}_findDropTargetNode(e,t,n){let r;if(this._rect.contains(t,n)){if(void 0!==this._model.getMaximizedTabset())r=this._model.getMaximizedTabset().canDrop(e,t,n);else if(void 0===(r=this.canDrop(e,t,n))&&0!==this._children.length){for(let i of this._children)if(void 0!==(r=i._findDropTargetNode(e,t,n)))break}}return r}canDrop(e,t,n){}_canDockInto(e,t){if(null!=t){if(t.location===r.DockLocation.CENTER&&!1===t.node.isEnableDrop()||t.location===r.DockLocation.CENTER&&"tabset"===e.getType()&&void 0!==e.getName()||t.location!==r.DockLocation.CENTER&&!1===t.node.isEnableDivide())return!1;if(this._model._getOnAllowDrop())return this._model._getOnAllowDrop()(e,t)}return!0}_removeChild(e){let t=this._children.indexOf(e);return -1!==t&&this._children.splice(t,1),this._dirty=!0,t}_addChild(e,t){return null!=t?this._children.splice(t,0,e):(this._children.push(e),t=this._children.length-1),e._parent=this,this._dirty=!0,t}_removeAll(){this._children=[],this._dirty=!0}_styleWithPosition(e){return null==e&&(e={}),this._rect.styleWithPosition(e)}_getTempSize(){return this._tempSize}_setTempSize(e){this._tempSize=e}isEnableDivide(){return!0}_toAttributeString(){return JSON.stringify(this._attributes,void 0,"	")}}t.Node=a},55194:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.RowNode=void 0;let r=n(46777),i=n(67449),o=n(23722),a=n(62348),s=n(38406),l=n(78845),d=n(4818),u=n(94718),c=n(27525),h=n(2591),f=n(20839);class p extends c.Node{static _fromJson(e,t){let n=new p(t,e);if(null!=e.children)for(let r of e.children)if(r.type===f.TabSetNode.TYPE){let e=f.TabSetNode._fromJson(r,t);n._addChild(e)}else{let e=p._fromJson(r,t);n._addChild(e)}return n}static _createAttributeDefinitions(){let e=new i.AttributeDefinitions;return e.add("type",p.TYPE,!0).setType(r.Attribute.STRING).setFixed(),e.add("id",void 0).setType(r.Attribute.STRING),e.add("weight",100).setType(r.Attribute.NUMBER),e.add("width",void 0).setType(r.Attribute.NUMBER),e.add("height",void 0).setType(r.Attribute.NUMBER),e}constructor(e,t){super(e),this._dirty=!0,this._drawChildren=[],this._minHeight=0,this._minWidth=0,p._attributeDefinitions.fromJson(t,this._attributes),e._addNode(this)}getWeight(){return this._attributes.weight}getWidth(){return this._getAttr("width")}getHeight(){return this._getAttr("height")}_setWeight(e){this._attributes.weight=e}_layout(e,t){super._layout(e,t);let n=this._rect._getSize(this.getOrientation()),r=0,i=0,o=0,a=0,d=this._getDrawChildren();for(let e of d){let t=e._getPrefSize(this.getOrientation());e._isFixed()?void 0!==t&&(i+=t):void 0===t?r+=e.getWeight():(o+=t,a+=e.getWeight())}let u=!1,c=n-i-o;c<0&&(c=n-i,u=!0,r+=a);let f=0,p=0;for(let e of d){let t=e._getPrefSize(this.getOrientation());if(e._isFixed())void 0!==t&&e._setTempSize(t);else if(null==t||u){if(0===r)e._setTempSize(0);else{let t=e.getMinSize(this.getOrientation()),n=Math.floor(e.getWeight()/r*c);e._setTempSize(Math.max(t,n))}p+=e._getTempSize()}else e._setTempSize(t);f+=e._getTempSize()}if(p>0){for(;f<n;)for(let e of d)if(!(e instanceof h.SplitterNode)){let t=e._getPrefSize(this.getOrientation());!e._isFixed()&&(void 0===t||u)&&f<n&&(e._setTempSize(e._getTempSize()+1),f++)}for(;f>n;){let e=!1;for(let t of d)if(!(t instanceof h.SplitterNode)){let r=t.getMinSize(this.getOrientation());t._getTempSize()>r&&f>n&&(t._setTempSize(t._getTempSize()-1),f--,e=!0)}if(!e)break}for(;f>n;){let e=!1;for(let t of d)!(t instanceof h.SplitterNode)&&t._getTempSize()>0&&f>n&&(t._setTempSize(t._getTempSize()-1),f--,e=!0);if(!e)break}}let g=0;for(let e of d)this.getOrientation()===s.Orientation.HORZ?e._layout(new l.Rect(this._rect.x+g,this._rect.y,e._getTempSize(),this._rect.height),t):e._layout(new l.Rect(this._rect.x,this._rect.y+g,this._rect.width,e._getTempSize()),t),g+=e._getTempSize();return!0}_getSplitterBounds(e,t=!1){let n=[0,0],r=this._getDrawChildren(),i=r.indexOf(e),o=r[i-1],a=r[i+1];if(this.getOrientation()===s.Orientation.HORZ){let r=t?o.getMinWidth():0,i=t?a.getMinWidth():0;n[0]=o.getRect().x+r,n[1]=a.getRect().getRight()-e.getWidth()-i}else{let r=t?o.getMinHeight():0,i=t?a.getMinHeight():0;n[0]=o.getRect().y+r,n[1]=a.getRect().getBottom()-e.getHeight()-i}return n}_calculateSplit(e,t){let n;let r=this._getDrawChildren(),i=r.indexOf(e),o=this._getSplitterBounds(e),a=r[i-1].getWeight()+r[i+1].getWeight(),s=Math.max(0,t-o[0]),l=Math.max(0,o[1]-t);return s+l>0&&(n={node1Id:r[i-1].getId(),weight1:s*a/(s+l),pixelWidth1:s,node2Id:r[i+1].getId(),weight2:l*a/(s+l),pixelWidth2:l}),n}_getDrawChildren(){if(this._dirty){this._drawChildren=[];for(let e=0;e<this._children.length;e++){let t=this._children[e];if(0!==e){let e=new h.SplitterNode(this._model);e._setParent(this),this._drawChildren.push(e)}this._drawChildren.push(t)}this._dirty=!1}return this._drawChildren}getMinSize(e){return e===s.Orientation.HORZ?this.getMinWidth():this.getMinHeight()}getMinWidth(){return this._minWidth}getMinHeight(){return this._minHeight}calcMinSize(){this._minHeight=0,this._minWidth=0;let e=!0;for(let t of this._children)t instanceof p&&t.calcMinSize(),this.getOrientation()===s.Orientation.VERT?(this._minHeight+=t.getMinHeight(),e||(this._minHeight+=this._model.getSplitterSize()),this._minWidth=Math.max(this._minWidth,t.getMinWidth())):(this._minWidth+=t.getMinWidth(),e||(this._minWidth+=this._model.getSplitterSize()),this._minHeight=Math.max(this._minHeight,t.getMinHeight())),e=!1}_tidy(){let e=0;for(;e<this._children.length;){let t=this._children[e];if(t instanceof p){t._tidy();let n=t.getChildren();if(0===n.length)this._removeChild(t);else if(1===n.length){let r=n[0];if(this._removeChild(t),r instanceof p){let n=0,i=r.getChildren();for(let e of i)n+=e.getWeight();for(let r=0;r<i.length;r++){let o=i[r];o._setWeight(t.getWeight()*o.getWeight()/n),this._addChild(o,e+r)}}else r._setWeight(t.getWeight()),this._addChild(r,e)}else e++}else t instanceof f.TabSetNode&&0===t.getChildren().length&&t.isEnableDeleteWhenEmpty()?(this._removeChild(t),t===this._model.getMaximizedTabset()&&this._model._setMaximizedTabset(void 0)):e++}if(this===this._model.getRoot()&&0===this._children.length){let e=this._model._getOnCreateTabSet(),t=e?e():{};t=Object.assign(Object.assign({},t),{selected:-1});let n=new f.TabSetNode(this._model,t);this._model._setActiveTabset(n),this._addChild(n)}}canDrop(e,t,n){let r;let i=n-this._rect.y,s=t-this._rect.x,l=this._rect.width,u=this._rect.height;if(this._model.isEnableEdgeDock()&&void 0===this._parent){if(t<this._rect.x+10&&i>u/2-50&&i<u/2+50){let e=o.DockLocation.LEFT,t=e.getDockRect(this._rect);t.width=t.width/2,r=new a.DropInfo(this,t,e,-1,d.CLASSES.FLEXLAYOUT__OUTLINE_RECT_EDGE)}else if(t>this._rect.getRight()-10&&i>u/2-50&&i<u/2+50){let e=o.DockLocation.RIGHT,t=e.getDockRect(this._rect);t.width=t.width/2,t.x+=t.width,r=new a.DropInfo(this,t,e,-1,d.CLASSES.FLEXLAYOUT__OUTLINE_RECT_EDGE)}else if(n<this._rect.y+10&&s>l/2-50&&s<l/2+50){let e=o.DockLocation.TOP,t=e.getDockRect(this._rect);t.height=t.height/2,r=new a.DropInfo(this,t,e,-1,d.CLASSES.FLEXLAYOUT__OUTLINE_RECT_EDGE)}else if(n>this._rect.getBottom()-10&&s>l/2-50&&s<l/2+50){let e=o.DockLocation.BOTTOM,t=e.getDockRect(this._rect);t.height=t.height/2,t.y+=t.height,r=new a.DropInfo(this,t,e,-1,d.CLASSES.FLEXLAYOUT__OUTLINE_RECT_EDGE)}if(void 0!==r&&!e._canDockInto(e,r))return}return r}drop(e,t,n){let r;let i=e.getParent();if(i&&i._removeChild(e),void 0!==i&&i.getType()===f.TabSetNode.TYPE&&i._setSelected(0),void 0!==i&&i.getType()===u.BorderNode.TYPE&&i._setSelected(-1),e instanceof f.TabSetNode)r=e;else{let t=this._model._getOnCreateTabSet();(r=new f.TabSetNode(this._model,t?t(e):{}))._addChild(e)}let a=this._children.reduce((e,t)=>e+t.getWeight(),0);0===a&&(a=100),r._setWeight(a/3);let s=!this._model.isRootOrientationVertical();if(s&&t===o.DockLocation.LEFT||!s&&t===o.DockLocation.TOP)this._addChild(r,0);else if(s&&t===o.DockLocation.RIGHT||!s&&t===o.DockLocation.BOTTOM)this._addChild(r);else if(s&&t===o.DockLocation.TOP||!s&&t===o.DockLocation.LEFT){let e=new p(this._model,{}),t=new p(this._model,{});for(let e of(t._setWeight(75),r._setWeight(25),this._children))t._addChild(e);this._removeAll(),e._addChild(r),e._addChild(t),this._addChild(e)}else if(s&&t===o.DockLocation.BOTTOM||!s&&t===o.DockLocation.RIGHT){let e=new p(this._model,{}),t=new p(this._model,{});for(let e of(t._setWeight(75),r._setWeight(25),this._children))t._addChild(e);this._removeAll(),e._addChild(t),e._addChild(r),this._addChild(e)}this._model._setActiveTabset(r),this._model._tidy()}toJson(){let e={};for(let t of(p._attributeDefinitions.toJson(e,this._attributes),e.children=[],this._children))e.children.push(t.toJson());return e}isEnableDrop(){return!0}_getPrefSize(e){let t=this.getWidth();return e===s.Orientation.VERT&&(t=this.getHeight()),t}_getAttributeDefinitions(){return p._attributeDefinitions}_updateAttrs(e){p._attributeDefinitions.update(e,this._attributes)}static getAttributeDefinitions(){return p._attributeDefinitions}}t.RowNode=p,p.TYPE="row",p._attributeDefinitions=p._createAttributeDefinitions()},2591:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.SplitterNode=void 0;let r=n(67449),i=n(38406),o=n(27525);class a extends o.Node{constructor(e){super(e),this._fixed=!0,this._attributes.type=a.TYPE,e._addNode(this)}getWidth(){return this._model.getSplitterSize()}getMinWidth(){return this.getOrientation()===i.Orientation.VERT?this._model.getSplitterSize():0}getHeight(){return this._model.getSplitterSize()}getMinHeight(){return this.getOrientation()===i.Orientation.HORZ?this._model.getSplitterSize():0}getMinSize(e){return e===i.Orientation.HORZ?this.getMinWidth():this.getMinHeight()}getWeight(){return 0}_setWeight(e){}_getPrefSize(e){return this._model.getSplitterSize()}_updateAttrs(e){}_getAttributeDefinitions(){return new r.AttributeDefinitions}toJson(){}}t.SplitterNode=a,a.TYPE="splitter"},88624:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.TabNode=void 0;let r=n(46777),i=n(67449),o=n(27525);class a extends o.Node{static _fromJson(e,t,n=!0){return new a(t,e,n)}static _createAttributeDefinitions(){let e=new i.AttributeDefinitions;return e.add("type",a.TYPE,!0).setType(r.Attribute.STRING),e.add("id",void 0).setType(r.Attribute.STRING),e.add("name","[Unnamed Tab]").setType(r.Attribute.STRING),e.add("altName",void 0).setType(r.Attribute.STRING),e.add("helpText",void 0).setType(r.Attribute.STRING),e.add("component",void 0).setType(r.Attribute.STRING),e.add("config",void 0).setType("any"),e.add("floating",!1).setType(r.Attribute.BOOLEAN),e.add("tabsetClassName",void 0).setType(r.Attribute.STRING),e.addInherited("enableClose","tabEnableClose").setType(r.Attribute.BOOLEAN),e.addInherited("closeType","tabCloseType").setType("ICloseType"),e.addInherited("enableDrag","tabEnableDrag").setType(r.Attribute.BOOLEAN),e.addInherited("enableRename","tabEnableRename").setType(r.Attribute.BOOLEAN),e.addInherited("className","tabClassName").setType(r.Attribute.STRING),e.addInherited("contentClassName","tabContentClassName").setType(r.Attribute.STRING),e.addInherited("icon","tabIcon").setType(r.Attribute.STRING),e.addInherited("enableRenderOnDemand","tabEnableRenderOnDemand").setType(r.Attribute.BOOLEAN),e.addInherited("enableFloat","tabEnableFloat").setType(r.Attribute.BOOLEAN),e.addInherited("borderWidth","tabBorderWidth").setType(r.Attribute.NUMBER),e.addInherited("borderHeight","tabBorderHeight").setType(r.Attribute.NUMBER),e}constructor(e,t,n=!0){super(e),this._extra={},a._attributeDefinitions.fromJson(t,this._attributes),!0===n&&e._addNode(this)}getWindow(){return this._window}getTabRect(){return this._tabRect}_setTabRect(e){this._tabRect=e}_setRenderedName(e){this._renderedName=e}_getNameForOverflowMenu(){let e=this._getAttr("altName");return void 0!==e?e:this._renderedName}getName(){return this._getAttr("name")}getHelpText(){return this._getAttr("helpText")}getComponent(){return this._getAttr("component")}getConfig(){return this._attributes.config}getExtraData(){return this._extra}isFloating(){return this._getAttr("floating")}getIcon(){return this._getAttr("icon")}isEnableClose(){return this._getAttr("enableClose")}getCloseType(){return this._getAttr("closeType")}isEnableFloat(){return this._getAttr("enableFloat")}isEnableDrag(){return this._getAttr("enableDrag")}isEnableRename(){return this._getAttr("enableRename")}getClassName(){return this._getAttr("className")}getContentClassName(){return this._getAttr("contentClassName")}getTabSetClassName(){return this._getAttr("tabsetClassName")}isEnableRenderOnDemand(){return this._getAttr("enableRenderOnDemand")}_setName(e){this._attributes.name=e,this._window&&this._window.document&&(this._window.document.title=e)}_setFloating(e){this._attributes.floating=e}_layout(e,t){e.equals(this._rect)||this._fireEvent("resize",{rect:e}),this._rect=e}_delete(){this._parent._remove(this),this._fireEvent("close",{})}toJson(){let e={};return a._attributeDefinitions.toJson(e,this._attributes),e}_updateAttrs(e){a._attributeDefinitions.update(e,this._attributes)}_getAttributeDefinitions(){return a._attributeDefinitions}_setWindow(e){this._window=e}_setBorderWidth(e){this._attributes.borderWidth=e}_setBorderHeight(e){this._attributes.borderHeight=e}static getAttributeDefinitions(){return a._attributeDefinitions}}t.TabNode=a,a.TYPE="tab",a._attributeDefinitions=a._createAttributeDefinitions()},20839:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.TabSetNode=void 0;let r=n(46777),i=n(67449),o=n(23722),a=n(62348),s=n(38406),l=n(78845),d=n(4818),u=n(94718),c=n(27525),h=n(55194),f=n(88624),p=n(96271);class g extends c.Node{static _fromJson(e,t){let n=new g(t,e);if(null!=e.children)for(let r of e.children){let e=f.TabNode._fromJson(r,t);n._addChild(e)}return 0===n._children.length&&n._setSelected(-1),e.maximized&&!0===e.maximized&&t._setMaximizedTabset(n),e.active&&!0===e.active&&t._setActiveTabset(n),n}static _createAttributeDefinitions(){let e=new i.AttributeDefinitions;return e.add("type",g.TYPE,!0).setType(r.Attribute.STRING).setFixed(),e.add("id",void 0).setType(r.Attribute.STRING),e.add("weight",100).setType(r.Attribute.NUMBER),e.add("width",void 0).setType(r.Attribute.NUMBER),e.add("height",void 0).setType(r.Attribute.NUMBER),e.add("selected",0).setType(r.Attribute.NUMBER),e.add("name",void 0).setType(r.Attribute.STRING),e.add("config",void 0).setType("any"),e.addInherited("enableDeleteWhenEmpty","tabSetEnableDeleteWhenEmpty"),e.addInherited("enableDrop","tabSetEnableDrop"),e.addInherited("enableDrag","tabSetEnableDrag"),e.addInherited("enableDivide","tabSetEnableDivide"),e.addInherited("enableMaximize","tabSetEnableMaximize"),e.addInherited("enableClose","tabSetEnableClose"),e.addInherited("enableSingleTabStretch","tabSetEnableSingleTabStretch"),e.addInherited("classNameTabStrip","tabSetClassNameTabStrip"),e.addInherited("classNameHeader","tabSetClassNameHeader"),e.addInherited("enableTabStrip","tabSetEnableTabStrip"),e.addInherited("borderInsets","tabSetBorderInsets"),e.addInherited("marginInsets","tabSetMarginInsets"),e.addInherited("minWidth","tabSetMinWidth"),e.addInherited("minHeight","tabSetMinHeight"),e.addInherited("headerHeight","tabSetHeaderHeight"),e.addInherited("tabStripHeight","tabSetTabStripHeight"),e.addInherited("tabLocation","tabSetTabLocation"),e.addInherited("autoSelectTab","tabSetAutoSelectTab").setType(r.Attribute.BOOLEAN),e}constructor(e,t){super(e),g._attributeDefinitions.fromJson(t,this._attributes),e._addNode(this),this._calculatedTabBarHeight=0,this._calculatedHeaderBarHeight=0}getName(){return this._getAttr("name")}getSelected(){let e=this._attributes.selected;return void 0!==e?e:-1}getSelectedNode(){let e=this.getSelected();if(-1!==e)return this._children[e]}getWeight(){return this._getAttr("weight")}getWidth(){return this._getAttr("width")}getMinWidth(){return this._getAttr("minWidth")}getHeight(){return this._getAttr("height")}getMinHeight(){return this._getAttr("minHeight")}getMinSize(e){return e===s.Orientation.HORZ?this.getMinWidth():this.getMinHeight()}getConfig(){return this._attributes.config}isMaximized(){return this._model.getMaximizedTabset()===this}isActive(){return this._model.getActiveTabset()===this}isEnableDeleteWhenEmpty(){return this._getAttr("enableDeleteWhenEmpty")}isEnableDrop(){return this._getAttr("enableDrop")}isEnableDrag(){return this._getAttr("enableDrag")}isEnableDivide(){return this._getAttr("enableDivide")}isEnableMaximize(){return this._getAttr("enableMaximize")}isEnableClose(){return this._getAttr("enableClose")}isEnableSingleTabStretch(){return this._getAttr("enableSingleTabStretch")}canMaximize(){return!!this.isEnableMaximize()&&(this.getModel().getMaximizedTabset()===this||this.getParent()!==this.getModel().getRoot()||1!==this.getModel().getRoot().getChildren().length)}isEnableTabStrip(){return this._getAttr("enableTabStrip")}isAutoSelectTab(){return this._getAttr("autoSelectTab")}getClassNameTabStrip(){return this._getAttr("classNameTabStrip")}getClassNameHeader(){return this._getAttr("classNameHeader")}calculateHeaderBarHeight(e){let t=this._getAttr("headerHeight");0!==t?this._calculatedHeaderBarHeight=t:this._calculatedHeaderBarHeight=e.headerBarSize}calculateTabBarHeight(e){let t=this._getAttr("tabStripHeight");0!==t?this._calculatedTabBarHeight=t:this._calculatedTabBarHeight=e.tabBarSize}getHeaderHeight(){return this._calculatedHeaderBarHeight}getTabStripHeight(){return this._calculatedTabBarHeight}getTabLocation(){return this._getAttr("tabLocation")}_setWeight(e){this._attributes.weight=e}_setSelected(e){this._attributes.selected=e}canDrop(e,t,n){let r;if(e===this){let e=o.DockLocation.CENTER,t=this._tabHeaderRect;r=new a.DropInfo(this,t,e,-1,d.CLASSES.FLEXLAYOUT__OUTLINE_RECT)}else if(this._contentRect.contains(t,n)){let e=o.DockLocation.CENTER;void 0===this._model.getMaximizedTabset()&&(e=o.DockLocation.getLocation(this._contentRect,t,n));let i=e.getDockRect(this._rect);r=new a.DropInfo(this,i,e,-1,d.CLASSES.FLEXLAYOUT__OUTLINE_RECT)}else if(null!=this._tabHeaderRect&&this._tabHeaderRect.contains(t,n)){let e,n,i;if(0===this._children.length)n=(e=this._tabHeaderRect.clone()).y+3,i=e.height-4,e.width=2;else{let s=this._children[0];n=(e=s.getTabRect()).y,i=e.height;let u=this._tabHeaderRect.x,c=0;for(let h=0;h<this._children.length;h++){if(c=(e=(s=this._children[h]).getTabRect()).x+e.width/2,t>=u&&t<c){let t=o.DockLocation.CENTER,s=new l.Rect(e.x-2,n,3,i);r=new a.DropInfo(this,s,t,h,d.CLASSES.FLEXLAYOUT__OUTLINE_RECT);break}u=c}}if(null==r){let t=o.DockLocation.CENTER,s=new l.Rect(e.getRight()-2,n,3,i);r=new a.DropInfo(this,s,t,this._children.length,d.CLASSES.FLEXLAYOUT__OUTLINE_RECT)}}if(e._canDockInto(e,r))return r}_layout(e,t){this.calculateHeaderBarHeight(t),this.calculateTabBarHeight(t),this.isMaximized()&&(e=this._model.getRoot().getRect()),e=e.removeInsets(this._getAttr("marginInsets")),this._rect=e,e=e.removeInsets(this._getAttr("borderInsets"));let n=void 0!==this.getName(),r=0,i=0;n&&(r+=this._calculatedHeaderBarHeight,i+=this._calculatedHeaderBarHeight),this.isEnableTabStrip()&&("top"===this.getTabLocation()?this._tabHeaderRect=new l.Rect(e.x,e.y+r,e.width,this._calculatedTabBarHeight):this._tabHeaderRect=new l.Rect(e.x,e.y+e.height-this._calculatedTabBarHeight,e.width,this._calculatedTabBarHeight),i+=this._calculatedTabBarHeight,"top"===this.getTabLocation()&&(r+=this._calculatedTabBarHeight)),this._contentRect=new l.Rect(e.x,e.y+r,e.width,e.height-i);for(let e=0;e<this._children.length;e++){let n=this._children[e];n._layout(this._contentRect,t),n._setVisible(e===this.getSelected())}}_delete(){this._parent._removeChild(this)}_remove(e){let t=this._removeChild(e);this._model._tidy(),(0,p.adjustSelectedIndex)(this,t)}drop(e,t,n,r){if(this===e)return;let i=e.getParent(),a=0;if(void 0!==i&&(a=i._removeChild(e),i instanceof u.BorderNode&&i.getSelected()===a?i._setSelected(-1):(0,p.adjustSelectedIndex)(i,a)),e.getType()===f.TabNode.TYPE&&i===this&&a<n&&n>0&&n--,t===o.DockLocation.CENTER){let t=n;if(-1===t&&(t=this._children.length),e.getType()===f.TabNode.TYPE)this._addChild(e,t),(r||!1!==r&&this.isAutoSelectTab())&&this._setSelected(t);else{for(let n=0;n<e.getChildren().length;n++){let r=e.getChildren()[n];this._addChild(r,t),t++}-1===this.getSelected()&&this._children.length>0&&this._setSelected(0)}this._model._setActiveTabset(this)}else{let n;if(e instanceof f.TabNode){let t=this._model._getOnCreateTabSet();(n=new g(this._model,t?t(e):{}))._addChild(e),i=n}else n=e;let r=this._parent,o=r.getChildren().indexOf(this);if(r.getOrientation()===t._orientation)n._setWeight(this.getWeight()/2),this._setWeight(this.getWeight()/2),r._addChild(n,o+t._indexPlus);else{let e=new h.RowNode(this._model,{});e._setWeight(this.getWeight()),e._addChild(this),this._setWeight(50),n._setWeight(50),e._addChild(n,t._indexPlus),r._removeChild(this),r._addChild(e,o)}this._model._setActiveTabset(n)}this._model._tidy()}toJson(){let e={};return g._attributeDefinitions.toJson(e,this._attributes),e.children=this._children.map(e=>e.toJson()),this.isActive()&&(e.active=!0),this.isMaximized()&&(e.maximized=!0),e}_updateAttrs(e){g._attributeDefinitions.update(e,this._attributes)}_getAttributeDefinitions(){return g._attributeDefinitions}_getPrefSize(e){let t=this.getWidth();return e===s.Orientation.VERT&&(t=this.getHeight()),t}static getAttributeDefinitions(){return g._attributeDefinitions}}t.TabSetNode=g,g.TYPE="tabset",g._attributeDefinitions=g._createAttributeDefinitions()},96271:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.randomUUID=t.adjustSelectedIndex=t.adjustSelectedIndexAfterDock=t.adjustSelectedIndexAfterFloat=void 0;let r=n(20839),i=n(94718);t.adjustSelectedIndexAfterFloat=function(e){let t=e.getParent();if(null!==t){if(t instanceof r.TabSetNode){let n=!1,r=0,i=t.getChildren();for(let t=0;t<i.length;t++){let o=i[t];if(o===e)n=!0;else if(!o.isFloating()&&(r=t,n))break}t._setSelected(r)}else t instanceof i.BorderNode&&t._setSelected(-1)}},t.adjustSelectedIndexAfterDock=function(e){let t=e.getParent();if(null!==t&&(t instanceof r.TabSetNode||t instanceof i.BorderNode)){let n=t.getChildren();for(let r=0;r<n.length;r++)if(n[r]===e){t._setSelected(r);return}}},t.adjustSelectedIndex=function(e,t){if(void 0!==e&&(e.getType()===r.TabSetNode.TYPE||e.getType()===i.BorderNode.TYPE)){let n=e.getSelected();-1!==n&&(t===n&&e.getChildren().length>0?t>=e.getChildren().length&&e._setSelected(e.getChildren().length-1):t<n?e._setSelected(n-1):t>n||e._setSelected(-1))}},t.randomUUID=function(){return"10000000-1000-4000-8000-100000000000".replace(/[018]/g,e=>(e^crypto.getRandomValues(new Uint8Array(1))[0]&15>>e/4).toString(16))}},53383:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.BorderButton=void 0;let r=n(10331),i=n(52051),o=n(99430),a=n(78845),s=n(64262),l=n(4818),d=n(10684);t.BorderButton=e=>{let{layout:t,node:n,selected:u,border:c,iconFactory:h,titleFactory:f,icons:p,path:g}=e,m=r.useRef(null),v=r.useRef(null),_=e=>{(0,d.isAuxMouseEvent)(e)||t.getEditingTab()||t.dragStart(e,void 0,n,n.isEnableDrag(),y,T)},b=e=>{(0,d.isAuxMouseEvent)(e)&&t.auxMouseClick(n,e)},y=()=>{t.doAction(o.Actions.selectTab(n.getId()))},T=e=>{},E=e=>{e.target!==v.current&&(t.getCurrentDocument().body.removeEventListener("mousedown",E),t.getCurrentDocument().body.removeEventListener("touchstart",E),t.setEditingTab(void 0))},w=()=>{let e=n.getCloseType();return!!u||e===s.ICloseType.Always||e===s.ICloseType.Visible&&!!window.matchMedia&&!!window.matchMedia("(hover: hover) and (pointer: fine)").matches},S=e=>{e.stopPropagation()};r.useLayoutEffect(()=>{A(),t.getEditingTab()===n&&v.current.select()});let A=()=>{var e;let r=t.getDomRect(),i=null===(e=m.current)||void 0===e?void 0:e.getBoundingClientRect();i&&r&&n._setTabRect(new a.Rect(i.left-r.left,i.top-r.top,i.width,i.height))},x=e=>{e.stopPropagation()},C=t.getClassName,R=C(l.CLASSES.FLEXLAYOUT__BORDER_BUTTON)+" "+C(l.CLASSES.FLEXLAYOUT__BORDER_BUTTON_+c);u?R+=" "+C(l.CLASSES.FLEXLAYOUT__BORDER_BUTTON__SELECTED):R+=" "+C(l.CLASSES.FLEXLAYOUT__BORDER_BUTTON__UNSELECTED),void 0!==n.getClassName()&&(R+=" "+n.getClassName());let L=0;!1===n.getModel().isEnableRotateBorderIcons()&&("left"===c?L=90:"right"===c&&(L=-90));let O=(0,d.getRenderStateEx)(t,n,h,f,L),N=O.content?r.createElement("div",{className:C(l.CLASSES.FLEXLAYOUT__BORDER_BUTTON_CONTENT)},O.content):null,D=O.leading?r.createElement("div",{className:C(l.CLASSES.FLEXLAYOUT__BORDER_BUTTON_LEADING)},O.leading):null;if(t.getEditingTab()===n&&(N=r.createElement("input",{ref:v,className:C(l.CLASSES.FLEXLAYOUT__TAB_BUTTON_TEXTBOX),"data-layout-path":g+"/textbox",type:"text",autoFocus:!0,defaultValue:n.getName(),onKeyDown:e=>{"Escape"===e.code?t.setEditingTab(void 0):"Enter"===e.code&&(t.setEditingTab(void 0),t.doAction(o.Actions.renameTab(n.getId(),e.target.value)))},onMouseDown:x,onTouchStart:x})),n.isEnableClose()){let e=t.i18nName(i.I18nLabel.Close_Tab);O.buttons.push(r.createElement("div",{key:"close","data-layout-path":g+"/button/close",title:e,className:C(l.CLASSES.FLEXLAYOUT__BORDER_BUTTON_TRAILING),onMouseDown:S,onClick:e=>{w()?t.doAction(o.Actions.deleteTab(n.getId())):y()},onTouchStart:S},"function"==typeof p.close?p.close(n):p.close))}return r.createElement("div",{ref:m,"data-layout-path":g,className:R,onMouseDown:_,onClick:b,onAuxClick:b,onContextMenu:e=>{t.showContextMenu(n,e)},onTouchStart:_,title:n.getHelpText()},D,N,O.buttons)}},78662:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.BorderTabSet=void 0;let r=n(10331),i=n(23722),o=n(53383),a=n(8846),s=n(99430),l=n(52051),d=n(25013),u=n(38406),c=n(4818),h=n(10684);t.BorderTabSet=e=>{let{border:t,layout:n,iconFactory:f,titleFactory:p,icons:g,path:m}=e,v=r.useRef(null),_=r.useRef(null),b=r.useRef(null),{selfRef:y,position:T,userControlledLeft:E,hiddenTabs:w,onMouseWheel:S,tabsTruncated:A}=(0,d.useTabOverflow)(t,u.Orientation.flip(t.getOrientation()),v,b),x=e=>{(0,h.isAuxMouseEvent)(e)&&n.auxMouseClick(t,e)},C=e=>{e.stopPropagation()},R=e=>{n.doAction(s.Actions.selectTab(e.node.getId())),E.current=!1},L=n.getClassName,O=t.getTabHeaderRect().styleWithPosition({}),N=[],D=e=>{let i=t.getSelected()===e,a=t.getChildren()[e];N.push(r.createElement(o.BorderButton,{layout:n,border:t.getLocation().getName(),node:a,path:m+"/tb"+e,key:a.getId(),selected:i,iconFactory:f,titleFactory:p,icons:g})),e<t.getChildren().length-1&&N.push(r.createElement("div",{key:"divider"+e,className:L(c.CLASSES.FLEXLAYOUT__BORDER_TAB_DIVIDER)}))};for(let e=0;e<t.getChildren().length;e++)D(e);let M=L(c.CLASSES.FLEXLAYOUT__BORDER)+" "+L(c.CLASSES.FLEXLAYOUT__BORDER_+t.getLocation().getName());void 0!==t.getClassName()&&(M+=" "+t.getClassName());let B=[],I=[],F={headerContent:void 0,buttons:B,stickyButtons:I,headerButtons:[],overflowPosition:void 0};if(n.customizeTabSet(t,F),B=F.buttons,void 0===F.overflowPosition&&(F.overflowPosition=I.length),I.length>0&&(A?B=[...I,...B]:N.push(r.createElement("div",{ref:b,key:"sticky_buttons_container",onMouseDown:C,onTouchStart:C,onDragStart:e=>{e.preventDefault()},className:L(c.CLASSES.FLEXLAYOUT__TAB_TOOLBAR_STICKY_BUTTONS_CONTAINER)},I))),w.length>0){let e;let i=n.i18nName(l.I18nLabel.Overflow_Menu_Tooltip);e="function"==typeof g.more?g.more(t,w):r.createElement(r.Fragment,null,g.more,r.createElement("div",{className:L(c.CLASSES.FLEXLAYOUT__TAB_BUTTON_OVERFLOW_COUNT)},w.length)),B.splice(Math.min(F.overflowPosition,B.length),0,r.createElement("button",{key:"overflowbutton",ref:_,className:L(c.CLASSES.FLEXLAYOUT__BORDER_TOOLBAR_BUTTON)+" "+L(c.CLASSES.FLEXLAYOUT__BORDER_TOOLBAR_BUTTON_OVERFLOW)+" "+L(c.CLASSES.FLEXLAYOUT__BORDER_TOOLBAR_BUTTON_OVERFLOW_+t.getLocation().getName()),title:i,onClick:e=>{let r=n.getShowOverflowMenu();if(void 0!==r)r(t,e,w,R);else{let e=_.current;(0,a.showPopup)(e,w,R,n,f,p)}e.stopPropagation()},onMouseDown:C,onTouchStart:C},e))}let k=t.getSelected();if(-1!==k){let e=t.getChildren()[k];if(void 0!==e&&n.isSupportsPopout()&&e.isEnableFloat()&&!e.isFloating()){let i=n.i18nName(l.I18nLabel.Float_Tab);B.push(r.createElement("button",{key:"float",title:i,className:L(c.CLASSES.FLEXLAYOUT__BORDER_TOOLBAR_BUTTON)+" "+L(c.CLASSES.FLEXLAYOUT__BORDER_TOOLBAR_BUTTON_FLOAT),onClick:e=>{let r=t.getChildren()[t.getSelected()];void 0!==r&&n.doAction(s.Actions.floatTab(r.getId())),e.stopPropagation()},onMouseDown:C,onTouchStart:C},"function"==typeof g.popout?g.popout(e):g.popout))}}let P=r.createElement("div",{key:"toolbar",ref:v,className:L(c.CLASSES.FLEXLAYOUT__BORDER_TOOLBAR)+" "+L(c.CLASSES.FLEXLAYOUT__BORDER_TOOLBAR_+t.getLocation().getName())},B);O=n.styleFont(O);let U={},z=t.getBorderBarSize()-1;return U=t.getLocation()===i.DockLocation.LEFT?{right:z,height:z,top:T}:t.getLocation()===i.DockLocation.RIGHT?{left:z,height:z,top:T}:{height:z,left:T},r.createElement("div",{ref:y,dir:"ltr",style:O,className:M,"data-layout-path":m,onClick:x,onAuxClick:x,onContextMenu:e=>{n.showContextMenu(t,e)},onWheel:S},r.createElement("div",{style:{height:z},className:L(c.CLASSES.FLEXLAYOUT__BORDER_INNER)+" "+L(c.CLASSES.FLEXLAYOUT__BORDER_INNER_+t.getLocation().getName())},r.createElement("div",{style:U,className:L(c.CLASSES.FLEXLAYOUT__BORDER_INNER_TAB_CONTAINER)+" "+L(c.CLASSES.FLEXLAYOUT__BORDER_INNER_TAB_CONTAINER_+t.getLocation().getName())},N)),P)}},35066:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ErrorBoundary=void 0;let r=n(10331),i=n(4818);class o extends r.Component{constructor(e){super(e),this.state={hasError:!1}}static getDerivedStateFromError(e){return{hasError:!0}}componentDidCatch(e,t){console.debug(e),console.debug(t)}render(){return this.state.hasError?r.createElement("div",{className:i.CLASSES.FLEXLAYOUT__ERROR_BOUNDARY_CONTAINER},r.createElement("div",{className:i.CLASSES.FLEXLAYOUT__ERROR_BOUNDARY_CONTENT},this.props.message)):this.props.children}}t.ErrorBoundary=o},6356:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.FloatingWindow=void 0;let r=n(10331),i=n(59261),o=n(78845),a=n(4818);t.FloatingWindow=e=>{let{title:t,id:n,url:s,rect:l,onCloseWindow:d,onSetWindow:u,children:c}=e,h=r.useRef(null),f=r.useRef(null),[p,g]=r.useState(void 0);return(r.useLayoutEffect(()=>{f.current&&clearTimeout(f.current);let e=!0,r=l||new o.Rect(0,0,100,100),i=Array.from(window.document.styleSheets).reduce((e,t)=>{let n;try{n=t.cssRules}catch(e){}try{return[...e,{href:t.href,type:t.type,rules:n?Array.from(n).map(e=>e.cssText):null}]}catch(t){return e}},[]);return h.current=window.open(s,n,`left=${r.x},top=${r.y},width=${r.width},height=${r.height}`),null!==h.current?(u(n,h.current),window.addEventListener("beforeunload",()=>{h.current&&(h.current.close(),h.current=null)}),h.current.addEventListener("load",()=>{if(e){let e=h.current.document;e.title=t;let r=e.createElement("div");r.className=a.CLASSES.FLEXLAYOUT__FLOATING_WINDOW_CONTENT,e.body.appendChild(r),(function(e,t){let n=e.head,r=[];for(let i of t)if(i.href){let t=e.createElement("link");t.type=i.type,t.rel="stylesheet",t.href=i.href,n.appendChild(t),r.push(new Promise(e=>{t.onload=()=>e(!0)}))}else if(i.rules){let t=e.createElement("style");for(let n of i.rules)t.appendChild(e.createTextNode(n));n.appendChild(t)}return Promise.all(r)})(e,i).then(()=>{g(r)}),h.current.addEventListener("beforeunload",()=>{d(n)})}})):(console.warn(`Unable to open window ${s}`),d(n)),()=>{e=!1,f.current=setTimeout(()=>{h.current&&(h.current.close(),h.current=null)},0)}},[]),void 0!==p)?(0,i.createPortal)(c,p):null}},45160:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.FloatingWindowTab=void 0;let r=n(10331),i=n(35066),o=n(52051),a=n(10331),s=n(4818);t.FloatingWindowTab=e=>{let{layout:t,node:n,factory:l}=e,d=t.getClassName,u=l(n);return r.createElement("div",{className:d(s.CLASSES.FLEXLAYOUT__FLOATING_WINDOW_TAB)},r.createElement(i.ErrorBoundary,{message:e.layout.i18nName(o.I18nLabel.Error_rendering_component)},r.createElement(a.Fragment,null,u)))}},89662:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.RestoreIcon=t.PopoutIcon=t.EdgeIcon=t.OverflowIcon=t.MaximizeIcon=t.CloseIcon=void 0;let r=n(10331),i={width:"1em",height:"1em",display:"flex",alignItems:"center"};t.CloseIcon=()=>r.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",style:i,viewBox:"0 0 24 24"},r.createElement("path",{fill:"none",d:"M0 0h24v24H0z"}),r.createElement("path",{stroke:"var(--color-icon)",fill:"var(--color-icon)",d:"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"})),t.MaximizeIcon=()=>r.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",style:i,viewBox:"0 0 24 24",fill:"var(--color-icon)"},r.createElement("path",{d:"M0 0h24v24H0z",fill:"none"}),r.createElement("path",{stroke:"var(--color-icon)",d:"M7 14H5v5h5v-2H7v-3zm-2-4h2V7h3V5H5v5zm12 7h-3v2h5v-5h-2v3zM14 5v2h3v3h2V5h-5z"})),t.OverflowIcon=()=>r.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",style:i,viewBox:"0 0 24 24",fill:"var(--color-icon)"},r.createElement("path",{d:"M0 0h24v24H0z",fill:"none"}),r.createElement("path",{stroke:"var(--color-icon)",d:"M7 10l5 5 5-5z"})),t.EdgeIcon=()=>r.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",style:{display:"block",width:10,height:10},preserveAspectRatio:"none",viewBox:"0 0 100 100"},r.createElement("path",{fill:"var(--color-edge-icon)",stroke:"var(--color-edge-icon)",d:"M10 30 L90 30 l-40 40 Z"})),t.PopoutIcon=()=>r.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",style:i,viewBox:"0 0 20 20",fill:"var(--color-icon)"},r.createElement("path",{d:"M11 3a1 1 0 100 2h2.586l-6.293 6.293a1 1 0 101.414 1.414L15 6.414V9a1 1 0 102 0V4a1 1 0 00-1-1h-5z"}),r.createElement("path",{d:"M5 5a2 2 0 00-2 2v8a2 2 0 002 2h8a2 2 0 002-2v-3a1 1 0 10-2 0v3H5V7h3a1 1 0 000-2H5z"})),t.RestoreIcon=()=>r.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",style:i,viewBox:"0 0 24 24",fill:"var(--color-icon)"},r.createElement("path",{d:"M0 0h24v24H0z",fill:"none"}),r.createElement("path",{stroke:"var(--color-icon)",d:"M5 16h3v3h2v-5H5v2zm3-8H5v2h5V5H8v3zm6 11h2v-3h3v-2h-5v5zm2-11V5h-2v5h5V8h-3z"}))},61345:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Layout=void 0;let r=n(10331),i=n(59261),o=n(23722),a=n(77930),s=n(99430),l=n(94718),d=n(2591),u=n(88624),c=n(20839),h=n(78845),f=n(4818),p=n(78662),g=n(99304),m=n(84791),v=n(70206),_=n(6356),b=n(45160),y=n(63202),T=n(38406),E=n(89662),w=n(98644),S={close:r.createElement(E.CloseIcon,null),closeTabset:r.createElement(E.CloseIcon,null),popout:r.createElement(E.PopoutIcon,null),maximize:r.createElement(E.MaximizeIcon,null),restore:r.createElement(E.RestoreIcon,null),more:r.createElement(E.OverflowIcon,null),edgeArrow:r.createElement(E.EdgeIcon,null)},A="undefined"!=typeof window&&(window.document.documentMode||/Edge\//.test(window.navigator.userAgent)),x="undefined"!=typeof window&&window.matchMedia&&window.matchMedia("(hover: hover) and (pointer: fine)").matches&&!A;class C extends r.Component{constructor(e){super(e),this.firstMove=!1,this.dragRectRendered=!0,this.dragDivText=void 0,this.edgeRectLength=100,this.edgeRectWidth=10,this.onModelChange=e=>{this.forceUpdate(),this.props.onModelChange&&this.props.onModelChange(this.props.model,e)},this.updateRect=e=>{if(e||(e=this.getDomRect()),!e)return;let t=new h.Rect(0,0,e.width,e.height);t.equals(this.state.rect)||0===t.width||0===t.height||this.setState({rect:t})},this.updateLayoutMetrics=()=>{if(this.findHeaderBarSizeRef.current){let e=this.findHeaderBarSizeRef.current.getBoundingClientRect().height;e!==this.state.calculatedHeaderBarSize&&this.setState({calculatedHeaderBarSize:e})}if(this.findTabBarSizeRef.current){let e=this.findTabBarSizeRef.current.getBoundingClientRect().height;e!==this.state.calculatedTabBarSize&&this.setState({calculatedTabBarSize:e})}if(this.findBorderBarSizeRef.current){let e=this.findBorderBarSizeRef.current.getBoundingClientRect().height;e!==this.state.calculatedBorderBarSize&&this.setState({calculatedBorderBarSize:e})}},this.getClassName=e=>void 0===this.props.classNameMapper?e:this.props.classNameMapper(e),this.onCloseWindow=e=>{this.doAction(s.Actions.unFloatTab(e));try{this.props.model.getNodeById(e)._setWindow(void 0)}catch(e){}},this.onSetWindow=(e,t)=>{this.props.model.getNodeById(e)._setWindow(t)},this.onCancelAdd=()=>{var e,t;let n=this.selfRef.current;n&&this.dragDiv&&n.removeChild(this.dragDiv),this.dragDiv=void 0,this.hidePortal(),null!=this.fnNewNodeDropped&&(this.fnNewNodeDropped(),this.fnNewNodeDropped=void 0);try{null===(t=null===(e=this.customDrop)||void 0===e?void 0:e.invalidated)||void 0===t||t.call(e)}catch(e){console.error(e)}a.DragDrop.instance.hideGlass(),this.newTabJson=void 0,this.customDrop=void 0},this.onCancelDrag=e=>{var t,n;if(e){let e=this.selfRef.current,r=this.outlineDiv;if(e&&r)try{e.removeChild(r)}catch(e){}let i=this.dragDiv;if(e&&i)try{e.removeChild(i)}catch(e){}this.dragDiv=void 0,this.hidePortal(),this.setState({showEdges:!1}),null!=this.fnNewNodeDropped&&(this.fnNewNodeDropped(),this.fnNewNodeDropped=void 0);try{null===(n=null===(t=this.customDrop)||void 0===t?void 0:t.invalidated)||void 0===n||n.call(t)}catch(e){console.error(e)}a.DragDrop.instance.hideGlass(),this.newTabJson=void 0,this.customDrop=void 0}this.setState({showHiddenBorder:o.DockLocation.CENTER})},this.onDragDivMouseDown=e=>{e.preventDefault(),this.dragStart(e,this.dragDivText,u.TabNode._fromJson(this.newTabJson,this.props.model,!1),!0,void 0,void 0)},this.dragStart=(e,t,n,r,i,o)=>{var s,l;r?(this.dragNode=n,this.dragDivText=t,a.DragDrop.instance.startDrag(e,this.onDragStart,this.onDragMove,this.onDragEnd,this.onCancelDrag,i,o,this.currentDocument,null!==(l=this.selfRef.current)&&void 0!==l?l:void 0)):a.DragDrop.instance.startDrag(e,void 0,void 0,void 0,void 0,i,o,this.currentDocument,null!==(s=this.selfRef.current)&&void 0!==s?s:void 0)},this.dragRectRender=(e,t,n,i)=>{let o;if(void 0!==e?o=r.createElement("div",{style:{whiteSpace:"pre"}},e.replace("<br>","\n")):t&&t instanceof u.TabNode&&(o=r.createElement(w.TabButtonStamp,{node:t,layout:this,iconFactory:this.props.iconFactory,titleFactory:this.props.titleFactory})),void 0!==this.props.onRenderDragRect){let e=this.props.onRenderDragRect(o,t,n);void 0!==e&&(o=e)}this.dragRectRendered=!1;let a=this.dragDiv;a&&(a.style.visibility="hidden",this.showPortal(r.createElement(R,{onRendered:()=>{this.dragRectRendered=!0,null==i||i()}},o),a))},this.showPortal=(e,t)=>{let n=(0,i.createPortal)(e,t);this.setState({portal:n})},this.hidePortal=()=>{this.setState({portal:void 0})},this.onDragStart=()=>{var e;this.dropInfo=void 0,this.customDrop=void 0;let t=this.selfRef.current;return this.outlineDiv=this.currentDocument.createElement("div"),this.outlineDiv.className=this.getClassName(f.CLASSES.FLEXLAYOUT__OUTLINE_RECT),this.outlineDiv.style.visibility="hidden",t&&t.appendChild(this.outlineDiv),null==this.dragDiv&&(this.dragDiv=this.currentDocument.createElement("div"),this.dragDiv.className=this.getClassName(f.CLASSES.FLEXLAYOUT__DRAG_RECT),this.dragDiv.setAttribute("data-layout-path","/drag-rectangle"),this.dragRectRender(this.dragDivText,this.dragNode,this.newTabJson),t&&t.appendChild(this.dragDiv)),void 0===this.props.model.getMaximizedTabset()&&this.setState({showEdges:this.props.model.isEnableEdgeDock()}),this.dragNode&&this.outlineDiv&&this.dragNode instanceof u.TabNode&&void 0!==this.dragNode.getTabRect()&&(null===(e=this.dragNode.getTabRect())||void 0===e||e.positionElement(this.outlineDiv)),this.firstMove=!0,!0},this.onDragMove=e=>{var t,n,r,i,o,a,s;if(!1===this.firstMove){let e=this.props.model._getAttribute("tabDragSpeed");this.outlineDiv&&(this.outlineDiv.style.transition=`top ${e}s, left ${e}s, width ${e}s, height ${e}s`)}this.firstMove=!1;let l=null===(t=this.selfRef.current)||void 0===t?void 0:t.getBoundingClientRect(),d={x:e.clientX-(null!==(n=null==l?void 0:l.left)&&void 0!==n?n:0),y:e.clientY-(null!==(r=null==l?void 0:l.top)&&void 0!==r?r:0)};this.checkForBorderToShow(d.x,d.y);let u=null!==(o=null===(i=this.dragDiv)||void 0===i?void 0:i.getBoundingClientRect())&&void 0!==o?o:new DOMRect(0,0,100,100),c=d.x-u.width/2;c+u.width>(null!==(a=null==l?void 0:l.width)&&void 0!==a?a:0)&&(c=(null!==(s=null==l?void 0:l.width)&&void 0!==s?s:0)-u.width),c=Math.max(0,c),this.dragDiv&&(this.dragDiv.style.left=c+"px",this.dragDiv.style.top=d.y+5+"px",this.dragRectRendered&&"hidden"===this.dragDiv.style.visibility&&(this.dragDiv.style.visibility="visible"));let h=this.props.model._findDropTargetNode(this.dragNode,d.x,d.y);h&&(this.props.onTabDrag?this.handleCustomTabDrag(h,d,e):(this.dropInfo=h,this.outlineDiv&&(this.outlineDiv.className=this.getClassName(h.className),h.rect.positionElement(this.outlineDiv),this.outlineDiv.style.visibility="visible")))},this.onDragEnd=e=>{let t=this.selfRef.current;if(t&&(this.outlineDiv&&t.removeChild(this.outlineDiv),this.dragDiv&&t.removeChild(this.dragDiv)),this.dragDiv=void 0,this.hidePortal(),this.setState({showEdges:!1}),a.DragDrop.instance.hideGlass(),this.dropInfo){if(this.customDrop){this.newTabJson=void 0;try{let{callback:e,dragging:t,over:n,x:r,y:i,location:o}=this.customDrop;e(t,n,r,i,o),null!=this.fnNewNodeDropped&&(this.fnNewNodeDropped(),this.fnNewNodeDropped=void 0)}catch(e){console.error(e)}}else if(void 0!==this.newTabJson){let t=this.doAction(s.Actions.addNode(this.newTabJson,this.dropInfo.node.getId(),this.dropInfo.location,this.dropInfo.index));null!=this.fnNewNodeDropped&&(this.fnNewNodeDropped(t,e),this.fnNewNodeDropped=void 0),this.newTabJson=void 0}else void 0!==this.dragNode&&this.doAction(s.Actions.moveNode(this.dragNode.getId(),this.dropInfo.node.getId(),this.dropInfo.location,this.dropInfo.index))}this.setState({showHiddenBorder:o.DockLocation.CENTER})},this.props.model._setChangeListener(this.onModelChange),this.tabIds=[],this.selfRef=r.createRef(),this.findHeaderBarSizeRef=r.createRef(),this.findTabBarSizeRef=r.createRef(),this.findBorderBarSizeRef=r.createRef(),this.supportsPopout=void 0!==e.supportsPopout?e.supportsPopout:x,this.popoutURL=e.popoutURL?e.popoutURL:"popout.html",this.icons=Object.assign(Object.assign({},S),e.icons),this.state={rect:new h.Rect(0,0,0,0),calculatedHeaderBarSize:25,calculatedTabBarSize:26,calculatedBorderBarSize:30,editingTab:void 0,showHiddenBorder:o.DockLocation.CENTER,showEdges:!1},this.onDragEnter=this.onDragEnter.bind(this)}styleFont(e){return this.props.font&&(this.selfRef.current&&(this.props.font.size&&this.selfRef.current.style.setProperty("--font-size",this.props.font.size),this.props.font.family&&this.selfRef.current.style.setProperty("--font-family",this.props.font.family)),this.props.font.style&&(e.fontStyle=this.props.font.style),this.props.font.weight&&(e.fontWeight=this.props.font.weight)),e}doAction(e){if(void 0===this.props.onAction)return this.props.model.doAction(e);{let t=this.props.onAction(e);return void 0!==t?this.props.model.doAction(t):void 0}}componentDidMount(){this.updateRect(),this.updateLayoutMetrics(),this.currentDocument=this.selfRef.current.ownerDocument,this.currentWindow=this.currentDocument.defaultView,this.resizeObserver=new ResizeObserver(e=>{this.updateRect(e[0].contentRect)});let e=this.selfRef.current;e&&this.resizeObserver.observe(e)}componentDidUpdate(){this.updateLayoutMetrics(),this.props.model!==this.previousModel&&(void 0!==this.previousModel&&this.previousModel._setChangeListener(void 0),this.props.model._setChangeListener(this.onModelChange),this.previousModel=this.props.model)}getCurrentDocument(){return this.currentDocument}getDomRect(){var e;return null===(e=this.selfRef.current)||void 0===e?void 0:e.getBoundingClientRect()}getRootDiv(){return this.selfRef.current}isSupportsPopout(){return this.supportsPopout}isRealtimeResize(){var e;return null!==(e=this.props.realtimeResize)&&void 0!==e&&e}onTabDrag(...e){var t,n;return null===(n=(t=this.props).onTabDrag)||void 0===n?void 0:n.call(t,...e)}getPopoutURL(){return this.popoutURL}componentWillUnmount(){var e;let t=this.selfRef.current;t&&(null===(e=this.resizeObserver)||void 0===e||e.unobserve(t))}setEditingTab(e){this.setState({editingTab:e})}getEditingTab(){return this.state.editingTab}render(){if(!this.selfRef.current)return r.createElement("div",{ref:this.selfRef,className:this.getClassName(f.CLASSES.FLEXLAYOUT__LAYOUT)},this.metricsElements());this.props.model._setPointerFine(window&&window.matchMedia&&window.matchMedia("(pointer: fine)").matches);let e=[],t=[],n=[],i={},o=[],a={headerBarSize:this.state.calculatedHeaderBarSize,tabBarSize:this.state.calculatedTabBarSize,borderBarSize:this.state.calculatedBorderBarSize};this.props.model._setShowHiddenBorder(this.state.showHiddenBorder),this.centerRect=this.props.model._layout(this.state.rect,a),this.renderBorder(this.props.model.getBorderSet(),e,i,n,o),this.renderChildren("",this.props.model.getRoot(),t,i,n,o);let s=[],l={};for(let e of this.tabIds)i[e]&&(s.push(e),l[e]=e);for(let e of(this.tabIds=s,Object.keys(i)))l[e]||this.tabIds.push(e);let d=[],u=this.icons.edgeArrow;if(this.state.showEdges){let e=this.centerRect,t=this.edgeRectLength,n=this.edgeRectWidth,i=this.edgeRectLength/2,o=this.getClassName(f.CLASSES.FLEXLAYOUT__EDGE_RECT);d.push(r.createElement("div",{key:"North",style:{top:e.y,left:e.x+e.width/2-i,width:t,height:n,borderBottomLeftRadius:50,borderBottomRightRadius:50},className:o+" "+this.getClassName(f.CLASSES.FLEXLAYOUT__EDGE_RECT_TOP)},r.createElement("div",{style:{transform:"rotate(180deg)"}},u))),d.push(r.createElement("div",{key:"West",style:{top:e.y+e.height/2-i,left:e.x,width:n,height:t,borderTopRightRadius:50,borderBottomRightRadius:50},className:o+" "+this.getClassName(f.CLASSES.FLEXLAYOUT__EDGE_RECT_LEFT)},r.createElement("div",{style:{transform:"rotate(90deg)"}},u))),d.push(r.createElement("div",{key:"South",style:{top:e.y+e.height-n,left:e.x+e.width/2-i,width:t,height:n,borderTopLeftRadius:50,borderTopRightRadius:50},className:o+" "+this.getClassName(f.CLASSES.FLEXLAYOUT__EDGE_RECT_BOTTOM)},r.createElement("div",null,u))),d.push(r.createElement("div",{key:"East",style:{top:e.y+e.height/2-i,left:e.x+e.width-n,width:n,height:t,borderTopLeftRadius:50,borderBottomLeftRadius:50},className:o+" "+this.getClassName(f.CLASSES.FLEXLAYOUT__EDGE_RECT_RIGHT)},r.createElement("div",{style:{transform:"rotate(-90deg)"}},u)))}return r.createElement("div",{ref:this.selfRef,className:this.getClassName(f.CLASSES.FLEXLAYOUT__LAYOUT),onDragEnter:this.props.onExternalDrag?this.onDragEnter:void 0},t,this.tabIds.map(e=>i[e]),e,o,d,n,this.metricsElements(),this.state.portal)}metricsElements(){let e=this.styleFont({visibility:"hidden"});return r.createElement(r.Fragment,null,r.createElement("div",{key:"findHeaderBarSize",ref:this.findHeaderBarSizeRef,style:e,className:this.getClassName(f.CLASSES.FLEXLAYOUT__TABSET_HEADER_SIZER)},"FindHeaderBarSize"),r.createElement("div",{key:"findTabBarSize",ref:this.findTabBarSizeRef,style:e,className:this.getClassName(f.CLASSES.FLEXLAYOUT__TABSET_SIZER)},"FindTabBarSize"),r.createElement("div",{key:"findBorderBarSize",ref:this.findBorderBarSizeRef,style:e,className:this.getClassName(f.CLASSES.FLEXLAYOUT__BORDER_SIZER)},"FindBorderBarSize"))}renderBorder(e,t,n,i,o){for(let a of e.getBorders()){let e=`/border/${a.getLocation().getName()}`;if(a.isShowing()){t.push(r.createElement(p.BorderTabSet,{key:`border_${a.getLocation().getName()}`,path:e,border:a,layout:this,iconFactory:this.props.iconFactory,titleFactory:this.props.titleFactory,icons:this.icons}));let s=a._getDrawChildren(),l=0,c=0;for(let t of s){if(t instanceof d.SplitterNode){let n=e+"/s";o.push(r.createElement(g.Splitter,{key:t.getId(),layout:this,node:t,path:n}))}else if(t instanceof u.TabNode){let o=e+"/t"+c++;if(this.supportsPopout&&t.isFloating()){let e=this._getScreenRect(t),s=t._getAttr("borderWidth"),d=t._getAttr("borderHeight");e&&(-1!==s&&a.getLocation().getOrientation()===T.Orientation.HORZ?e.width=s:-1!==d&&a.getLocation().getOrientation()===T.Orientation.VERT&&(e.height=d)),i.push(r.createElement(_.FloatingWindow,{key:t.getId(),url:this.popoutURL,rect:e,title:t.getName(),id:t.getId(),onSetWindow:this.onSetWindow,onCloseWindow:this.onCloseWindow},r.createElement(b.FloatingWindowTab,{layout:this,node:t,factory:this.props.factory}))),n[t.getId()]=r.createElement(y.TabFloating,{key:t.getId(),layout:this,path:o,node:t,selected:l===a.getSelected()})}else n[t.getId()]=r.createElement(m.Tab,{key:t.getId(),layout:this,path:o,node:t,selected:l===a.getSelected(),factory:this.props.factory})}l++}}}}renderChildren(e,t,n,i,o,a){let s=t._getDrawChildren(),l=0,h=0,f=0;for(let t of s)if(t instanceof d.SplitterNode){let n=e+"/s"+l++;a.push(r.createElement(g.Splitter,{key:t.getId(),layout:this,path:n,node:t}))}else if(t instanceof c.TabSetNode){let s=e+"/ts"+f++;n.push(r.createElement(v.TabSet,{key:t.getId(),layout:this,path:s,node:t,iconFactory:this.props.iconFactory,titleFactory:this.props.titleFactory,icons:this.icons})),this.renderChildren(s,t,n,i,o,a)}else if(t instanceof u.TabNode){let n=e+"/t"+h++,a=t.getParent().getChildren()[t.getParent().getSelected()];if(void 0===a&&console.warn("undefined selectedTab should not happen"),this.supportsPopout&&t.isFloating()){let e=this._getScreenRect(t);o.push(r.createElement(_.FloatingWindow,{key:t.getId(),url:this.popoutURL,rect:e,title:t.getName(),id:t.getId(),onSetWindow:this.onSetWindow,onCloseWindow:this.onCloseWindow},r.createElement(b.FloatingWindowTab,{layout:this,node:t,factory:this.props.factory}))),i[t.getId()]=r.createElement(y.TabFloating,{key:t.getId(),layout:this,path:n,node:t,selected:t===a})}else i[t.getId()]=r.createElement(m.Tab,{key:t.getId(),layout:this,path:n,node:t,selected:t===a,factory:this.props.factory})}else{let r=e+(t.getOrientation()===T.Orientation.HORZ?"/r":"/c")+f++;this.renderChildren(r,t,n,i,o,a)}}_getScreenRect(e){var t;let n=e.getRect().clone(),r=null===(t=this.selfRef.current)||void 0===t?void 0:t.getBoundingClientRect();if(!r)return null;let i=Math.min(80,this.currentWindow.outerHeight-this.currentWindow.innerHeight),o=Math.min(80,this.currentWindow.outerWidth-this.currentWindow.innerWidth);return n.x=n.x+r.x+this.currentWindow.screenX+o,n.y=n.y+r.y+this.currentWindow.screenY+i,n}addTabToTabSet(e,t){if(void 0!==this.props.model.getNodeById(e))return this.doAction(s.Actions.addNode(t,e,o.DockLocation.CENTER,-1))}addTabToActiveTabSet(e){let t=this.props.model.getActiveTabset();if(void 0!==t)return this.doAction(s.Actions.addNode(e,t.getId(),o.DockLocation.CENTER,-1))}addTabWithDragAndDrop(e,t,n){this.fnNewNodeDropped=n,this.newTabJson=t,this.dragStart(void 0,e,u.TabNode._fromJson(t,this.props.model,!1),!0,void 0,void 0)}moveTabWithDragAndDrop(e,t){this.dragStart(void 0,t,e,!0,void 0,void 0)}addTabWithDragAndDropIndirect(e,t,n){this.fnNewNodeDropped=n,this.newTabJson=t,a.DragDrop.instance.addGlass(this.onCancelAdd),this.dragDivText=e,this.dragDiv=this.currentDocument.createElement("div"),this.dragDiv.className=this.getClassName(f.CLASSES.FLEXLAYOUT__DRAG_RECT),this.dragDiv.addEventListener("mousedown",this.onDragDivMouseDown),this.dragDiv.addEventListener("touchstart",this.onDragDivMouseDown,{passive:!1}),this.dragRectRender(this.dragDivText,void 0,this.newTabJson,()=>{if(this.dragDiv){this.dragDiv.style.visibility="visible";let e=this.dragDiv.getBoundingClientRect(),t=new h.Rect(0,0,null==e?void 0:e.width,null==e?void 0:e.height);t.centerInRect(this.state.rect),this.dragDiv.setAttribute("data-layout-path","/drag-rectangle"),this.dragDiv.style.left=t.x+"px",this.dragDiv.style.top=t.y+"px"}}),this.selfRef.current.appendChild(this.dragDiv)}handleCustomTabDrag(e,t,n){var r,i,o;let s=null===(r=this.customDrop)||void 0===r?void 0:r.invalidated,d=null===(i=this.customDrop)||void 0===i?void 0:i.callback;this.customDrop=void 0;let p=this.newTabJson||(this.dragNode instanceof u.TabNode?this.dragNode:void 0);if(p&&(e.node instanceof c.TabSetNode||e.node instanceof l.BorderNode)&&-1===e.index){let r=e.node.getSelectedNode(),i=null==r?void 0:r.getRect();if(r&&(null==i?void 0:i.contains(t.x,t.y))){let o;try{let a=this.onTabDrag(p,r,t.x-i.x,t.y-i.y,e.location,()=>this.onDragMove(n));a&&(o={rect:new h.Rect(a.x+i.x,a.y+i.y,a.width,a.height),callback:a.callback,invalidated:a.invalidated,dragging:p,over:r,x:t.x-i.x,y:t.y-i.y,location:e.location,cursor:a.cursor})}catch(e){console.error(e)}(null==o?void 0:o.callback)===d&&(s=void 0),this.customDrop=o}}this.dropInfo=e,this.outlineDiv&&(this.outlineDiv.className=this.getClassName(this.customDrop?f.CLASSES.FLEXLAYOUT__OUTLINE_RECT:e.className),this.customDrop?this.customDrop.rect.positionElement(this.outlineDiv):e.rect.positionElement(this.outlineDiv)),a.DragDrop.instance.setGlassCursorOverride(null===(o=this.customDrop)||void 0===o?void 0:o.cursor),this.outlineDiv&&(this.outlineDiv.style.visibility="visible");try{null==s||s()}catch(e){console.error(e)}}onDragEnter(e){if(a.DragDrop.instance.isDragging())return;let t=this.props.onExternalDrag(e);t&&(this.fnNewNodeDropped=t.onDrop,this.newTabJson=t.json,this.dragStart(e,t.dragText,u.TabNode._fromJson(t.json,this.props.model,!1),!0,void 0,void 0))}checkForBorderToShow(e,t){let n=this.props.model._getOuterInnerRects().outer,r=n.getCenter(),i=this.edgeRectWidth,a=this.edgeRectLength/2,s=!1;this.props.model.isEnableEdgeDock()&&this.state.showHiddenBorder===o.DockLocation.CENTER&&(t>r.y-a&&t<r.y+a||e>r.x-a&&e<r.x+a)&&(s=!0);let l=o.DockLocation.CENTER;!s&&(e<=n.x+i?l=o.DockLocation.LEFT:e>=n.getRight()-i?l=o.DockLocation.RIGHT:t<=n.y+i?l=o.DockLocation.TOP:t>=n.getBottom()-i&&(l=o.DockLocation.BOTTOM)),l!==this.state.showHiddenBorder&&this.setState({showHiddenBorder:l})}maximize(e){this.doAction(s.Actions.maximizeToggle(e.getId()))}customizeTab(e,t){this.props.onRenderTab&&this.props.onRenderTab(e,t)}customizeTabSet(e,t){this.props.onRenderTabSet&&this.props.onRenderTabSet(e,t)}i18nName(e,t){let n;return this.props.i18nMapper&&(n=this.props.i18nMapper(e,t)),void 0===n&&(n=e+(void 0===t?"":t)),n}getOnRenderFloatingTabPlaceholder(){return this.props.onRenderFloatingTabPlaceholder}getShowOverflowMenu(){return this.props.onShowOverflowMenu}getTabSetPlaceHolderCallback(){return this.props.onTabSetPlaceHolder}showContextMenu(e,t){this.props.onContextMenu&&this.props.onContextMenu(e,t)}auxMouseClick(e,t){this.props.onAuxMouseClick&&this.props.onAuxMouseClick(e,t)}}t.Layout=C;let R=e=>(r.useEffect(()=>{var t;null===(t=e.onRendered)||void 0===t||t.call(e)},[e]),r.createElement(r.Fragment,null,e.children))},99304:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Splitter=void 0;let r=n(10331),i=n(77930),o=n(99430),a=n(94718),s=n(38406),l=n(4818);t.Splitter=e=>{let{layout:t,node:n,path:d}=e,u=r.useRef([]),c=r.useRef(void 0),h=n.getParent(),f=e=>{var r;i.DragDrop.instance.setGlassCursorOverride(n.getOrientation()===s.Orientation.HORZ?"ns-resize":"ew-resize"),i.DragDrop.instance.startDrag(e,g,m,_,p,void 0,void 0,t.getCurrentDocument(),null!==(r=t.getRootDiv())&&void 0!==r?r:void 0),u.current=h._getSplitterBounds(n,!0);let o=t.getRootDiv();c.current=t.getCurrentDocument().createElement("div"),c.current.style.position="absolute",c.current.className=t.getClassName(l.CLASSES.FLEXLAYOUT__SPLITTER_DRAG),c.current.style.cursor=n.getOrientation()===s.Orientation.HORZ?"ns-resize":"ew-resize";let a=n.getRect();n.getOrientation()===s.Orientation.VERT&&a.width<2?a.width=2:n.getOrientation()===s.Orientation.HORZ&&a.height<2&&(a.height=2),a.positionElement(c.current),o&&o.appendChild(c.current)},p=e=>{let n=t.getRootDiv();n&&n.removeChild(c.current)},g=()=>!0,m=e=>{let r=t.getDomRect();if(!r)return;let i={x:e.clientX-r.left,y:e.clientY-r.top};c&&(n.getOrientation()===s.Orientation.HORZ?c.current.style.top=b(i.y-4)+"px":c.current.style.left=b(i.x-4)+"px"),t.isRealtimeResize()&&v()},v=()=>{let e=0;if(c&&(e=n.getOrientation()===s.Orientation.HORZ?c.current.offsetTop:c.current.offsetLeft),h instanceof a.BorderNode){let r=h._calculateSplit(n,e);t.doAction(o.Actions.adjustBorderSplit(n.getParent().getId(),r))}else{let r=h._calculateSplit(n,e);void 0!==r&&t.doAction(o.Actions.adjustSplit(r))}},_=()=>{v();let e=t.getRootDiv();e&&e.removeChild(c.current)},b=e=>{let t=u.current,n=e;return e<t[0]&&(n=t[0]),e>t[1]&&(n=t[1]),n},y=t.getClassName,T=n.getRect(),E=T.styleWithPosition({cursor:n.getOrientation()===s.Orientation.HORZ?"ns-resize":"ew-resize"}),w=y(l.CLASSES.FLEXLAYOUT__SPLITTER)+" "+y(l.CLASSES.FLEXLAYOUT__SPLITTER_+n.getOrientation().getName());h instanceof a.BorderNode?w+=" "+y(l.CLASSES.FLEXLAYOUT__SPLITTER_BORDER):void 0!==n.getModel().getMaximizedTabset()&&(E.display="none");let S=n.getModel().getSplitterExtra();if(0===S)return r.createElement("div",{style:E,"data-layout-path":d,className:w,onTouchStart:f,onMouseDown:f});{let e=T.clone();e.x=0,e.y=0,n.getOrientation()===s.Orientation.VERT?e.width+=S:e.height+=S;let t=e.styleWithPosition({cursor:n.getOrientation()===s.Orientation.HORZ?"ns-resize":"ew-resize"}),i=y(l.CLASSES.FLEXLAYOUT__SPLITTER_EXTRA);return r.createElement("div",{style:E,"data-layout-path":d,className:w},r.createElement("div",{style:t,className:i,onTouchStart:f,onMouseDown:f}))}}},84791:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Tab=void 0;let r=n(10331),i=n(10331),o=n(99430),a=n(20839),s=n(4818),l=n(35066),d=n(52051),u=n(94718),c=n(10684);t.Tab=e=>{let t;let{layout:n,selected:h,node:f,factory:p,path:g}=e,[m,v]=r.useState(!e.node.isEnableRenderOnDemand()||e.selected);r.useLayoutEffect(()=>{!m&&h&&v(!0)});let _=()=>{let e=f.getParent();e.getType()!==a.TabSetNode.TYPE||e.isActive()||n.doAction(o.Actions.setActiveTabset(e.getId()))},b=n.getClassName,y=f.getModel().isUseVisibility(),T=f.getParent(),E=f._styleWithPosition();h||(0,c.hideElement)(E,y),T instanceof a.TabSetNode&&void 0!==f.getModel().getMaximizedTabset()&&!T.isMaximized()&&(0,c.hideElement)(E,y),m&&(t=p(f));let w=b(s.CLASSES.FLEXLAYOUT__TAB);return T instanceof u.BorderNode&&(w+=" "+b(s.CLASSES.FLEXLAYOUT__TAB_BORDER)+" "+b(s.CLASSES.FLEXLAYOUT__TAB_BORDER_+T.getLocation().getName())),void 0!==f.getContentClassName()&&(w+=" "+f.getContentClassName()),r.createElement("div",{className:w,"data-layout-path":g,onMouseDown:_,onTouchStart:_,style:E},r.createElement(l.ErrorBoundary,{message:e.layout.i18nName(d.I18nLabel.Error_rendering_component)},r.createElement(i.Fragment,null,t)))}},98444:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.TabButton=void 0;let r=n(10331),i=n(52051),o=n(99430),a=n(78845),s=n(64262),l=n(4818),d=n(10684);t.TabButton=e=>{let{layout:t,node:n,selected:u,iconFactory:c,titleFactory:h,icons:f,path:p}=e,g=r.useRef(null),m=r.useRef(null),v=e=>{(0,d.isAuxMouseEvent)(e)||t.getEditingTab()||t.dragStart(e,void 0,n,n.isEnableDrag(),b,y)},_=e=>{(0,d.isAuxMouseEvent)(e)&&t.auxMouseClick(n,e)},b=()=>{t.doAction(o.Actions.selectTab(n.getId()))},y=e=>{n.isEnableRename()&&T()},T=()=>{t.setEditingTab(n),t.getCurrentDocument().body.addEventListener("mousedown",E),t.getCurrentDocument().body.addEventListener("touchstart",E)},E=e=>{e.target!==m.current&&(t.getCurrentDocument().body.removeEventListener("mousedown",E),t.getCurrentDocument().body.removeEventListener("touchstart",E),t.setEditingTab(void 0))},w=()=>{let e=n.getCloseType();return!!u||e===s.ICloseType.Always||e===s.ICloseType.Visible&&!!window.matchMedia&&!!window.matchMedia("(hover: hover) and (pointer: fine)").matches},S=e=>{e.stopPropagation()};r.useLayoutEffect(()=>{A(),t.getEditingTab()===n&&m.current.select()});let A=()=>{var e;let r=t.getDomRect(),i=null===(e=g.current)||void 0===e?void 0:e.getBoundingClientRect();i&&r&&n._setTabRect(new a.Rect(i.left-r.left,i.top-r.top,i.width,i.height))},x=e=>{e.stopPropagation()},C=t.getClassName,R=n.getParent(),L=R.isEnableSingleTabStretch()&&1===R.getChildren().length,O=L?l.CLASSES.FLEXLAYOUT__TAB_BUTTON_STRETCH:l.CLASSES.FLEXLAYOUT__TAB_BUTTON,N=C(O);N+=" "+C(O+"_"+R.getTabLocation()),L||(u?N+=" "+C(O+"--selected"):N+=" "+C(O+"--unselected")),void 0!==n.getClassName()&&(N+=" "+n.getClassName());let D=(0,d.getRenderStateEx)(t,n,c,h),M=D.content?r.createElement("div",{className:C(l.CLASSES.FLEXLAYOUT__TAB_BUTTON_CONTENT)},D.content):null,B=D.leading?r.createElement("div",{className:C(l.CLASSES.FLEXLAYOUT__TAB_BUTTON_LEADING)},D.leading):null;if(t.getEditingTab()===n&&(M=r.createElement("input",{ref:m,className:C(l.CLASSES.FLEXLAYOUT__TAB_BUTTON_TEXTBOX),"data-layout-path":p+"/textbox",type:"text",autoFocus:!0,defaultValue:n.getName(),onKeyDown:e=>{"Escape"===e.code?t.setEditingTab(void 0):"Enter"===e.code&&(t.setEditingTab(void 0),t.doAction(o.Actions.renameTab(n.getId(),e.target.value)))},onMouseDown:x,onTouchStart:x})),n.isEnableClose()&&!L){let e=t.i18nName(i.I18nLabel.Close_Tab);D.buttons.push(r.createElement("div",{key:"close","data-layout-path":p+"/button/close",title:e,className:C(l.CLASSES.FLEXLAYOUT__TAB_BUTTON_TRAILING),onMouseDown:S,onClick:e=>{w()?t.doAction(o.Actions.deleteTab(n.getId())):b()},onTouchStart:S},"function"==typeof f.close?f.close(n):f.close))}return r.createElement("div",{ref:g,"data-layout-path":p,className:N,onMouseDown:v,onClick:_,onAuxClick:_,onContextMenu:e=>{t.showContextMenu(n,e)},onTouchStart:v,title:n.getHelpText()},B,M,D.buttons)}},98644:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.TabButtonStamp=void 0;let r=n(10331),i=n(4818),o=n(10684);t.TabButtonStamp=e=>{let{layout:t,node:n,iconFactory:a,titleFactory:s}=e,l=r.useRef(null),d=t.getClassName,u=d(i.CLASSES.FLEXLAYOUT__TAB_BUTTON_STAMP),c=(0,o.getRenderStateEx)(t,n,a,s),h=c.content?r.createElement("div",{className:d(i.CLASSES.FLEXLAYOUT__TAB_BUTTON_CONTENT)},c.content):n._getNameForOverflowMenu(),f=c.leading?r.createElement("div",{className:d(i.CLASSES.FLEXLAYOUT__TAB_BUTTON_LEADING)},c.leading):null;return r.createElement("div",{ref:l,className:u,title:n.getHelpText()},f,h)}},63202:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.TabFloating=void 0;let r=n(10331),i=n(99430),o=n(20839),a=n(4818),s=n(52051),l=n(10684);t.TabFloating=e=>{let{layout:t,selected:n,node:d,path:u}=e,c=()=>{d.getWindow()&&d.getWindow().focus()},h=()=>{t.doAction(i.Actions.unFloatTab(d.getId()))},f=()=>{let e=d.getParent();e.getType()!==o.TabSetNode.TYPE||e.isActive()||t.doAction(i.Actions.setActiveTabset(e.getId()))},p=t.getClassName,g=d.getParent(),m=d._styleWithPosition();n||(0,l.hideElement)(m,d.getModel().isUseVisibility()),g instanceof o.TabSetNode&&void 0!==d.getModel().getMaximizedTabset()&&!g.isMaximized()&&(0,l.hideElement)(m,d.getModel().isUseVisibility());let v=t.i18nName(s.I18nLabel.Floating_Window_Message),_=t.i18nName(s.I18nLabel.Floating_Window_Show_Window),b=t.i18nName(s.I18nLabel.Floating_Window_Dock_Window),y=t.getOnRenderFloatingTabPlaceholder();return y?r.createElement("div",{className:p(a.CLASSES.FLEXLAYOUT__TAB_FLOATING),onMouseDown:f,onTouchStart:f,style:m},y(h,c)):r.createElement("div",{className:p(a.CLASSES.FLEXLAYOUT__TAB_FLOATING),"data-layout-path":u,onMouseDown:f,onTouchStart:f,style:m},r.createElement("div",{className:p(a.CLASSES.FLEXLAYOUT__TAB_FLOATING_INNER)},r.createElement("div",null,v),r.createElement("div",null,r.createElement("a",{href:"#",onClick:e=>{e.preventDefault(),c()}},_)),r.createElement("div",null,r.createElement("a",{href:"#",onClick:e=>{e.preventDefault(),h()}},b))))}},25013:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.useTabOverflow=void 0;let r=n(10331),i=n(78845),o=n(20839),a=n(38406);t.useTabOverflow=(e,t,n,s)=>{let l=r.useRef(!0),d=r.useRef(!1),u=r.useRef(new i.Rect(0,0,0,0)),c=r.useRef(null),[h,f]=r.useState(0),p=r.useRef(!1),[g,m]=r.useState([]),v=r.useRef(0);r.useLayoutEffect(()=>{p.current=!1},[e.getSelectedNode(),e.getRect().width,e.getRect().height]),r.useLayoutEffect(()=>{w()});let _=c.current;r.useEffect(()=>{if(_)return _.addEventListener("wheel",b,{passive:!1}),()=>{_.removeEventListener("wheel",b)}},[_]);let b=e=>{e.preventDefault()},y=e=>t===a.Orientation.HORZ?e.x:e.y,T=e=>t===a.Orientation.HORZ?e.getRight():e.getBottom(),E=e=>t===a.Orientation.HORZ?e.width:e.height,w=()=>{!0===l.current&&(d.current=!1);let t=e instanceof o.TabSetNode?e.getRect():e.getTabHeaderRect(),r=e.getChildren()[e.getChildren().length-1],i=null===s.current?0:E(s.current.getBoundingClientRect());if(!0===l.current||0===v.current&&0!==g.length||t.width!==u.current.width||t.height!==u.current.height){v.current=g.length,u.current=t;let a=!(e instanceof o.TabSetNode)||!0===e.isEnableTabStrip(),s=T(t)-i;if(null!==n.current&&(s-=E(n.current.getBoundingClientRect())),a&&e.getChildren().length>0){if(0===g.length&&0===h&&T(r.getTabRect())+2<s)return;let n=0,i=e.getSelectedNode();if(i&&!p.current){let e=i.getTabRect(),r=y(e)-2,o=T(e)+2;E(e)+4>=s-y(t)?n=y(t)-r:(o>s||r<y(t))&&(r<y(t)&&(n=y(t)-r),o+n>s&&(n=s-o))}let o=Math.max(0,s-(T(r.getTabRect())+2+n)),a=Math.min(0,h+n+o),u=a-h,c=[];for(let n=0;n<e.getChildren().length;n++){let r=e.getChildren()[n];(y(r.getTabRect())+u<y(t)||T(r.getTabRect())+u>s)&&c.push({node:r,index:n})}c.length>0&&(d.current=!0),l.current=!1,m(c),f(a)}}else l.current=!0};return{selfRef:c,position:h,userControlledLeft:p,hiddenTabs:g,onMouseWheel:e=>{let t=0;t=Math.abs(e.deltaX)>Math.abs(e.deltaY)?-e.deltaX:-e.deltaY,1===e.deltaMode&&(t*=40),f(h+t),p.current=!0,e.stopPropagation()},tabsTruncated:d.current}}},70206:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.TabSet=void 0;let r=n(10331),i=n(52051),o=n(99430),a=n(8846),s=n(98444),l=n(25013),d=n(38406),u=n(4818),c=n(10684);t.TabSet=e=>{let t,n;let{node:h,layout:f,iconFactory:p,titleFactory:g,icons:m,path:v}=e,_=r.useRef(null),b=r.useRef(null),y=r.useRef(null),T=r.useRef(null),{selfRef:E,position:w,userControlledLeft:S,hiddenTabs:A,onMouseWheel:x,tabsTruncated:C}=(0,l.useTabOverflow)(h,d.Orientation.HORZ,_,T),R=e=>{f.doAction(o.Actions.selectTab(e.node.getId())),S.current=!1},L=e=>{if(!(0,c.isAuxMouseEvent)(e)){let t=h.getName();if(t=void 0===t?"":": "+t,f.doAction(o.Actions.setActiveTabset(h.getId())),!f.getEditingTab()){let n=f.i18nName(i.I18nLabel.Move_Tabset,t);void 0!==h.getModel().getMaximizedTabset()?f.dragStart(e,n,h,!1,e=>void 0,M):f.dragStart(e,n,h,h.isEnableDrag(),e=>void 0,M)}}},O=e=>{(0,c.isAuxMouseEvent)(e)&&f.auxMouseClick(h,e)},N=e=>{f.showContextMenu(h,e)},D=e=>{e.stopPropagation()},M=e=>{h.canMaximize()&&f.maximize(h)},B=f.getClassName;null!==y.current&&0!==y.current.scrollLeft&&(y.current.scrollLeft=0);let I=h.getSelectedNode(),F=h._styleWithPosition();void 0===h.getModel().getMaximizedTabset()||h.isMaximized()||(0,c.hideElement)(F,h.getModel().isUseVisibility());let k=[];if(h.isEnableTabStrip())for(let e=0;e<h.getChildren().length;e++){let t=h.getChildren()[e],n=h.getSelected()===e;k.push(r.createElement(s.TabButton,{layout:f,node:t,path:v+"/tb"+e,key:t.getId(),selected:n,iconFactory:p,titleFactory:g,icons:m})),e<h.getChildren().length-1&&k.push(r.createElement("div",{key:"divider"+e,className:B(u.CLASSES.FLEXLAYOUT__TABSET_TAB_DIVIDER)}))}let P=void 0!==h.getName(),U=[],z=[],j=[],W={headerContent:h.getName(),stickyButtons:U,buttons:z,headerButtons:j,overflowPosition:void 0};f.customizeTabSet(h,W);let H=W.headerContent;U=W.stickyButtons,z=W.buttons,j=W.headerButtons;let Y=h.isEnableSingleTabStretch()&&1===h.getChildren().length,X=Y&&h.getChildren()[0].isEnableClose()||h.isEnableClose();if(void 0===W.overflowPosition&&(W.overflowPosition=U.length),U.length>0&&(C||Y?z=[...U,...z]:k.push(r.createElement("div",{ref:T,key:"sticky_buttons_container",onMouseDown:D,onTouchStart:D,onDragStart:e=>{e.preventDefault()},className:B(u.CLASSES.FLEXLAYOUT__TAB_TOOLBAR_STICKY_BUTTONS_CONTAINER)},U))),A.length>0){let e;let t=f.i18nName(i.I18nLabel.Overflow_Menu_Tooltip);e="function"==typeof m.more?m.more(h,A):r.createElement(r.Fragment,null,m.more,r.createElement("div",{className:B(u.CLASSES.FLEXLAYOUT__TAB_BUTTON_OVERFLOW_COUNT)},A.length)),z.splice(Math.min(W.overflowPosition,z.length),0,r.createElement("button",{key:"overflowbutton","data-layout-path":v+"/button/overflow",ref:b,className:B(u.CLASSES.FLEXLAYOUT__TAB_TOOLBAR_BUTTON)+" "+B(u.CLASSES.FLEXLAYOUT__TAB_BUTTON_OVERFLOW),title:t,onClick:e=>{let t=f.getShowOverflowMenu();if(void 0!==t)t(h,e,A,R);else{let e=b.current;(0,a.showPopup)(e,A,R,f,p,g)}e.stopPropagation()},onMouseDown:D,onTouchStart:D},e))}if(void 0!==I&&f.isSupportsPopout()&&I.isEnableFloat()&&!I.isFloating()){let e=f.i18nName(i.I18nLabel.Float_Tab);z.push(r.createElement("button",{key:"float","data-layout-path":v+"/button/float",title:e,className:B(u.CLASSES.FLEXLAYOUT__TAB_TOOLBAR_BUTTON)+" "+B(u.CLASSES.FLEXLAYOUT__TAB_TOOLBAR_BUTTON_FLOAT),onClick:e=>{void 0!==I&&f.doAction(o.Actions.floatTab(I.getId())),e.stopPropagation()},onMouseDown:D,onTouchStart:D},"function"==typeof m.popout?m.popout(I):m.popout))}if(h.canMaximize()){let e=f.i18nName(i.I18nLabel.Restore),t=f.i18nName(i.I18nLabel.Maximize);(P?j:z).push(r.createElement("button",{key:"max","data-layout-path":v+"/button/max",title:h.isMaximized()?e:t,className:B(u.CLASSES.FLEXLAYOUT__TAB_TOOLBAR_BUTTON)+" "+B(u.CLASSES.FLEXLAYOUT__TAB_TOOLBAR_BUTTON_+(h.isMaximized()?"max":"min")),onClick:e=>{h.canMaximize()&&f.maximize(h),e.stopPropagation()},onMouseDown:D,onTouchStart:D},h.isMaximized()?"function"==typeof m.restore?m.restore(h):m.restore:"function"==typeof m.maximize?m.maximize(h):m.maximize))}if(!h.isMaximized()&&X){let e=Y?f.i18nName(i.I18nLabel.Close_Tab):f.i18nName(i.I18nLabel.Close_Tabset);(P?j:z).push(r.createElement("button",{key:"close","data-layout-path":v+"/button/close",title:e,className:B(u.CLASSES.FLEXLAYOUT__TAB_TOOLBAR_BUTTON)+" "+B(u.CLASSES.FLEXLAYOUT__TAB_TOOLBAR_BUTTON_CLOSE),onClick:Y?e=>{f.doAction(o.Actions.deleteTab(h.getChildren()[0].getId())),e.stopPropagation()}:e=>{f.doAction(o.Actions.deleteTabset(h.getId())),e.stopPropagation()},onMouseDown:D,onTouchStart:D},"function"==typeof m.closeTabset?m.closeTabset(h):m.closeTabset))}let V=r.createElement("div",{key:"toolbar",ref:_,className:B(u.CLASSES.FLEXLAYOUT__TAB_TOOLBAR),onMouseDown:D,onTouchStart:D,onDragStart:e=>{e.preventDefault()}},z),G=B(u.CLASSES.FLEXLAYOUT__TABSET_TABBAR_OUTER);if(void 0!==h.getClassNameTabStrip()&&(G+=" "+h.getClassNameTabStrip()),G+=" "+u.CLASSES.FLEXLAYOUT__TABSET_TABBAR_OUTER_+h.getTabLocation(),h.isActive()&&!P&&(G+=" "+B(u.CLASSES.FLEXLAYOUT__TABSET_SELECTED)),h.isMaximized()&&!P&&(G+=" "+B(u.CLASSES.FLEXLAYOUT__TABSET_MAXIMIZED)),Y){let e=h.getChildren()[0];void 0!==e.getTabSetClassName()&&(G+=" "+e.getTabSetClassName())}if(P){let e=r.createElement("div",{key:"toolbar",ref:_,className:B(u.CLASSES.FLEXLAYOUT__TAB_TOOLBAR),onMouseDown:D,onTouchStart:D,onDragStart:e=>{e.preventDefault()}},j),n=B(u.CLASSES.FLEXLAYOUT__TABSET_HEADER);h.isActive()&&(n+=" "+B(u.CLASSES.FLEXLAYOUT__TABSET_SELECTED)),h.isMaximized()&&(n+=" "+B(u.CLASSES.FLEXLAYOUT__TABSET_MAXIMIZED)),void 0!==h.getClassNameHeader()&&(n+=" "+h.getClassNameHeader()),t=r.createElement("div",{className:n,style:{height:h.getHeaderHeight()+"px"},"data-layout-path":v+"/header",onMouseDown:L,onContextMenu:N,onClick:O,onAuxClick:O,onTouchStart:L},r.createElement("div",{className:B(u.CLASSES.FLEXLAYOUT__TABSET_HEADER_CONTENT)},H),e)}let Z={height:h.getTabStripHeight()+"px"};n=r.createElement("div",{className:G,style:Z,"data-layout-path":v+"/tabstrip",onMouseDown:L,onContextMenu:N,onClick:O,onAuxClick:O,onTouchStart:L},r.createElement("div",{ref:y,className:B(u.CLASSES.FLEXLAYOUT__TABSET_TABBAR_INNER)+" "+B(u.CLASSES.FLEXLAYOUT__TABSET_TABBAR_INNER_+h.getTabLocation())},r.createElement("div",{style:{left:w,width:Y?"100%":"10000px"},className:B(u.CLASSES.FLEXLAYOUT__TABSET_TABBAR_INNER_TAB_CONTAINER)+" "+B(u.CLASSES.FLEXLAYOUT__TABSET_TABBAR_INNER_TAB_CONTAINER_+h.getTabLocation())},k)),V),F=f.styleFont(F);var J,K=void 0;if(0===h.getChildren().length){let e=f.getTabSetPlaceHolderCallback();e&&(K=e(h))}let $=r.createElement("div",{className:B(u.CLASSES.FLEXLAYOUT__TABSET_CONTENT)},K);return J="top"===h.getTabLocation()?r.createElement(r.Fragment,null,t,n,$):r.createElement(r.Fragment,null,t,$,n),r.createElement("div",{ref:E,dir:"ltr","data-layout-path":v,style:F,className:B(u.CLASSES.FLEXLAYOUT__TABSET),onWheel:x},J)}},10684:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isAuxMouseEvent=t.hideElement=t.getRenderStateEx=void 0;let r=n(10331);t.getRenderStateEx=function(e,t,n,i,o){let a=n?n(t):void 0,s=t.getName(),l=t.getName();if(void 0===o&&(o=0),void 0!==i){let e=i(t);void 0!==e&&("string"==typeof e?(s=e,l=e):void 0!==e.titleContent?(s=e.titleContent,l=e.name):s=e)}void 0===a&&void 0!==t.getIcon()&&(a=0!==o?r.createElement("img",{style:{width:"1em",height:"1em",transform:"rotate("+o+"deg)"},src:t.getIcon(),alt:"leadingContent"}):r.createElement("img",{style:{width:"1em",height:"1em"},src:t.getIcon(),alt:"leadingContent"}));let d={leading:a,content:s,name:l,buttons:[]};return e.customizeTab(t,d),t._setRenderedName(d.name),d},t.hideElement=function(e,t){t?e.visibility="hidden":e.display="none"},t.isAuxMouseEvent=function(e){let t=!1;return e.nativeEvent instanceof MouseEvent&&(0!==e.nativeEvent.button||e.ctrlKey||e.altKey||e.metaKey||e.shiftKey)&&(t=!0),t}},43563:function(e,t,n){"use strict";n.d(t,{Z:function(){return l}});var r=n(10331);let i=e=>e.replace(/([a-z0-9])([A-Z])/g,"$1-$2").toLowerCase(),o=function(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.filter((e,t,n)=>!!e&&n.indexOf(e)===t).join(" ")};var a={xmlns:"http://www.w3.org/2000/svg",width:24,height:24,viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:2,strokeLinecap:"round",strokeLinejoin:"round"};let s=(0,r.forwardRef)((e,t)=>{let{color:n="currentColor",size:i=24,strokeWidth:s=2,absoluteStrokeWidth:l,className:d="",children:u,iconNode:c,...h}=e;return(0,r.createElement)("svg",{ref:t,...a,width:i,height:i,stroke:n,strokeWidth:l?24*Number(s)/Number(i):s,className:o("lucide",d),...h},[...c.map(e=>{let[t,n]=e;return(0,r.createElement)(t,n)}),...Array.isArray(u)?u:[u]])}),l=(e,t)=>{let n=(0,r.forwardRef)((n,a)=>{let{className:l,...d}=n;return(0,r.createElement)(s,{ref:a,iconNode:t,className:o("lucide-".concat(i(e)),l),...d})});return n.displayName="".concat(e),n}},11933:function(e,t,n){"use strict";n.d(t,{Z:function(){return r}});let r=(0,n(43563).Z)("Check",[["path",{d:"M20 6 9 17l-5-5",key:"1gmf2c"}]])},91864:function(e,t,n){"use strict";n.d(t,{Z:function(){return r}});let r=(0,n(43563).Z)("ChevronDown",[["path",{d:"m6 9 6 6 6-6",key:"qrunsl"}]])},44058:function(e,t,n){"use strict";n.d(t,{Z:function(){return r}});let r=(0,n(43563).Z)("ChevronRight",[["path",{d:"m9 18 6-6-6-6",key:"mthhwq"}]])},87609:function(e,t,n){"use strict";n.d(t,{Z:function(){return r}});let r=(0,n(43563).Z)("ChevronUp",[["path",{d:"m18 15-6-6-6 6",key:"153udz"}]])},69209:function(e,t,n){"use strict";n.d(t,{Z:function(){return r}});let r=(0,n(43563).Z)("Circle",[["circle",{cx:"12",cy:"12",r:"10",key:"1mglay"}]])},4908:function(e,t,n){"use strict";n.d(t,{Z:function(){return r}});let r=(0,n(43563).Z)("Copy",[["rect",{width:"14",height:"14",x:"8",y:"8",rx:"2",ry:"2",key:"17jyea"}],["path",{d:"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2",key:"zix9uf"}]])},37852:function(e,t,n){"use strict";n.d(t,{Z:function(){return r}});let r=(0,n(43563).Z)("EyeOff",[["path",{d:"M10.733 5.076a10.744 10.744 0 0 1 11.205 6.575 1 1 0 0 1 0 .696 10.747 10.747 0 0 1-1.444 2.49",key:"ct8e1f"}],["path",{d:"M14.084 14.158a3 3 0 0 1-4.242-4.242",key:"151rxh"}],["path",{d:"M17.479 17.499a10.75 10.75 0 0 1-15.417-5.151 1 1 0 0 1 0-.696 10.75 10.75 0 0 1 4.446-5.143",key:"13bj9a"}],["path",{d:"m2 2 20 20",key:"1ooewy"}]])},62534:function(e,t,n){"use strict";n.d(t,{Z:function(){return r}});let r=(0,n(43563).Z)("Eye",[["path",{d:"M2.062 12.348a1 1 0 0 1 0-.696 10.75 10.75 0 0 1 19.876 0 1 1 0 0 1 0 .696 10.75 10.75 0 0 1-19.876 0",key:"1nclc0"}],["circle",{cx:"12",cy:"12",r:"3",key:"1v7zrd"}]])},58371:function(e,t,n){"use strict";n.d(t,{Z:function(){return r}});let r=(0,n(43563).Z)("X",[["path",{d:"M18 6 6 18",key:"1bl5f8"}],["path",{d:"m6 6 12 12",key:"d8bk6v"}]])},89646:function(e){function t(e,t,n,r){return Math.round(e/n)+" "+r+(t>=1.5*n?"s":"")}e.exports=function(e,n){n=n||{};var r,i,o=typeof e;if("string"===o&&e.length>0)return function(e){if(!((e=String(e)).length>100)){var t=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(e);if(t){var n=parseFloat(t[1]);switch((t[2]||"ms").toLowerCase()){case"years":case"year":case"yrs":case"yr":case"y":return 315576e5*n;case"weeks":case"week":case"w":return 6048e5*n;case"days":case"day":case"d":return 864e5*n;case"hours":case"hour":case"hrs":case"hr":case"h":return 36e5*n;case"minutes":case"minute":case"mins":case"min":case"m":return 6e4*n;case"seconds":case"second":case"secs":case"sec":case"s":return 1e3*n;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return n;default:return}}}}(e);if("number"===o&&isFinite(e))return n.long?(r=Math.abs(e))>=864e5?t(e,r,864e5,"day"):r>=36e5?t(e,r,36e5,"hour"):r>=6e4?t(e,r,6e4,"minute"):r>=1e3?t(e,r,1e3,"second"):e+" ms":(i=Math.abs(e))>=864e5?Math.round(e/864e5)+"d":i>=36e5?Math.round(e/36e5)+"h":i>=6e4?Math.round(e/6e4)+"m":i>=1e3?Math.round(e/1e3)+"s":e+"ms";throw Error("val is not a non-empty string or a valid number. val="+JSON.stringify(e))}},55934:function(e,t,n){"use strict";var r,i;e.exports=(null==(r=n.g.process)?void 0:r.env)&&"object"==typeof(null==(i=n.g.process)?void 0:i.env)?n.g.process:n(58736)},78347:function(e){!function(){"use strict";var t={114:function(e){function t(e){if("string"!=typeof e)throw TypeError("Path must be a string. Received "+JSON.stringify(e))}function n(e,t){for(var n,r="",i=0,o=-1,a=0,s=0;s<=e.length;++s){if(s<e.length)n=e.charCodeAt(s);else if(47===n)break;else n=47;if(47===n){if(o===s-1||1===a);else if(o!==s-1&&2===a){if(r.length<2||2!==i||46!==r.charCodeAt(r.length-1)||46!==r.charCodeAt(r.length-2)){if(r.length>2){var l=r.lastIndexOf("/");if(l!==r.length-1){-1===l?(r="",i=0):i=(r=r.slice(0,l)).length-1-r.lastIndexOf("/"),o=s,a=0;continue}}else if(2===r.length||1===r.length){r="",i=0,o=s,a=0;continue}}t&&(r.length>0?r+="/..":r="..",i=2)}else r.length>0?r+="/"+e.slice(o+1,s):r=e.slice(o+1,s),i=s-o-1;o=s,a=0}else 46===n&&-1!==a?++a:a=-1}return r}var r={resolve:function(){for(var e,r,i="",o=!1,a=arguments.length-1;a>=-1&&!o;a--)a>=0?r=arguments[a]:(void 0===e&&(e=""),r=e),t(r),0!==r.length&&(i=r+"/"+i,o=47===r.charCodeAt(0));return(i=n(i,!o),o)?i.length>0?"/"+i:"/":i.length>0?i:"."},normalize:function(e){if(t(e),0===e.length)return".";var r=47===e.charCodeAt(0),i=47===e.charCodeAt(e.length-1);return(0!==(e=n(e,!r)).length||r||(e="."),e.length>0&&i&&(e+="/"),r)?"/"+e:e},isAbsolute:function(e){return t(e),e.length>0&&47===e.charCodeAt(0)},join:function(){if(0==arguments.length)return".";for(var e,n=0;n<arguments.length;++n){var i=arguments[n];t(i),i.length>0&&(void 0===e?e=i:e+="/"+i)}return void 0===e?".":r.normalize(e)},relative:function(e,n){if(t(e),t(n),e===n||(e=r.resolve(e))===(n=r.resolve(n)))return"";for(var i=1;i<e.length&&47===e.charCodeAt(i);++i);for(var o=e.length,a=o-i,s=1;s<n.length&&47===n.charCodeAt(s);++s);for(var l=n.length-s,d=a<l?a:l,u=-1,c=0;c<=d;++c){if(c===d){if(l>d){if(47===n.charCodeAt(s+c))return n.slice(s+c+1);if(0===c)return n.slice(s+c)}else a>d&&(47===e.charCodeAt(i+c)?u=c:0===c&&(u=0));break}var h=e.charCodeAt(i+c);if(h!==n.charCodeAt(s+c))break;47===h&&(u=c)}var f="";for(c=i+u+1;c<=o;++c)(c===o||47===e.charCodeAt(c))&&(0===f.length?f+="..":f+="/..");return f.length>0?f+n.slice(s+u):(s+=u,47===n.charCodeAt(s)&&++s,n.slice(s))},_makeLong:function(e){return e},dirname:function(e){if(t(e),0===e.length)return".";for(var n=e.charCodeAt(0),r=47===n,i=-1,o=!0,a=e.length-1;a>=1;--a)if(47===(n=e.charCodeAt(a))){if(!o){i=a;break}}else o=!1;return -1===i?r?"/":".":r&&1===i?"//":e.slice(0,i)},basename:function(e,n){if(void 0!==n&&"string"!=typeof n)throw TypeError('"ext" argument must be a string');t(e);var r,i=0,o=-1,a=!0;if(void 0!==n&&n.length>0&&n.length<=e.length){if(n.length===e.length&&n===e)return"";var s=n.length-1,l=-1;for(r=e.length-1;r>=0;--r){var d=e.charCodeAt(r);if(47===d){if(!a){i=r+1;break}}else -1===l&&(a=!1,l=r+1),s>=0&&(d===n.charCodeAt(s)?-1==--s&&(o=r):(s=-1,o=l))}return i===o?o=l:-1===o&&(o=e.length),e.slice(i,o)}for(r=e.length-1;r>=0;--r)if(47===e.charCodeAt(r)){if(!a){i=r+1;break}}else -1===o&&(a=!1,o=r+1);return -1===o?"":e.slice(i,o)},extname:function(e){t(e);for(var n=-1,r=0,i=-1,o=!0,a=0,s=e.length-1;s>=0;--s){var l=e.charCodeAt(s);if(47===l){if(!o){r=s+1;break}continue}-1===i&&(o=!1,i=s+1),46===l?-1===n?n=s:1!==a&&(a=1):-1!==n&&(a=-1)}return -1===n||-1===i||0===a||1===a&&n===i-1&&n===r+1?"":e.slice(n,i)},format:function(e){var t,n;if(null===e||"object"!=typeof e)throw TypeError('The "pathObject" argument must be of type Object. Received type '+typeof e);return t=e.dir||e.root,n=e.base||(e.name||"")+(e.ext||""),t?t===e.root?t+n:t+"/"+n:n},parse:function(e){t(e);var n,r={root:"",dir:"",base:"",ext:"",name:""};if(0===e.length)return r;var i=e.charCodeAt(0),o=47===i;o?(r.root="/",n=1):n=0;for(var a=-1,s=0,l=-1,d=!0,u=e.length-1,c=0;u>=n;--u){if(47===(i=e.charCodeAt(u))){if(!d){s=u+1;break}continue}-1===l&&(d=!1,l=u+1),46===i?-1===a?a=u:1!==c&&(c=1):-1!==a&&(c=-1)}return -1===a||-1===l||0===c||1===c&&a===l-1&&a===s+1?-1!==l&&(0===s&&o?r.base=r.name=e.slice(1,l):r.base=r.name=e.slice(s,l)):(0===s&&o?(r.name=e.slice(1,a),r.base=e.slice(1,l)):(r.name=e.slice(s,a),r.base=e.slice(s,l)),r.ext=e.slice(a,l)),s>0?r.dir=e.slice(0,s-1):o&&(r.dir="/"),r},sep:"/",delimiter:":",win32:null,posix:null};r.posix=r,e.exports=r}},n={};function r(e){var i=n[e];if(void 0!==i)return i.exports;var o=n[e]={exports:{}},a=!0;try{t[e](o,o.exports,r),a=!1}finally{a&&delete n[e]}return o.exports}r.ab="//";var i=r(114);e.exports=i}()},58736:function(e){!function(){var t={229:function(e){var t,n,r,i=e.exports={};function o(){throw Error("setTimeout has not been defined")}function a(){throw Error("clearTimeout has not been defined")}function s(e){if(t===setTimeout)return setTimeout(e,0);if((t===o||!t)&&setTimeout)return t=setTimeout,setTimeout(e,0);try{return t(e,0)}catch(n){try{return t.call(null,e,0)}catch(n){return t.call(this,e,0)}}}!function(){try{t="function"==typeof setTimeout?setTimeout:o}catch(e){t=o}try{n="function"==typeof clearTimeout?clearTimeout:a}catch(e){n=a}}();var l=[],d=!1,u=-1;function c(){d&&r&&(d=!1,r.length?l=r.concat(l):u=-1,l.length&&h())}function h(){if(!d){var e=s(c);d=!0;for(var t=l.length;t;){for(r=l,l=[];++u<t;)r&&r[u].run();u=-1,t=l.length}r=null,d=!1,function(e){if(n===clearTimeout)return clearTimeout(e);if((n===a||!n)&&clearTimeout)return n=clearTimeout,clearTimeout(e);try{n(e)}catch(t){try{return n.call(null,e)}catch(t){return n.call(this,e)}}}(e)}}function f(e,t){this.fun=e,this.array=t}function p(){}i.nextTick=function(e){var t=Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];l.push(new f(e,t)),1!==l.length||d||s(h)},f.prototype.run=function(){this.fun.apply(null,this.array)},i.title="browser",i.browser=!0,i.env={},i.argv=[],i.version="",i.versions={},i.on=p,i.addListener=p,i.once=p,i.off=p,i.removeListener=p,i.removeAllListeners=p,i.emit=p,i.prependListener=p,i.prependOnceListener=p,i.listeners=function(e){return[]},i.binding=function(e){throw Error("process.binding is not supported")},i.cwd=function(){return"/"},i.chdir=function(e){throw Error("process.chdir is not supported")},i.umask=function(){return 0}}},n={};function r(e){var i=n[e];if(void 0!==i)return i.exports;var o=n[e]={exports:{}},a=!0;try{t[e](o,o.exports,r),a=!1}finally{a&&delete n[e]}return o.exports}r.ab="//";var i=r(229);e.exports=i}()},22521:function(e,t,n){"use strict";n.d(t,{Av:function(){return a},pF:function(){return r},xv:function(){return o},zi:function(){return i}});var r="right-scroll-bar-position",i="width-before-scroll-bar",o="with-scroll-bars-hidden",a="--removed-body-scroll-bar-size"},1766:function(e,t,n){"use strict";n.d(t,{jp:function(){return g}});var r=n(10331),i=n(68623),o=n(22521),a={left:0,top:0,right:0,gap:0},s=function(e){return parseInt(e||"",10)||0},l=function(e){var t=window.getComputedStyle(document.body),n=t["padding"===e?"paddingLeft":"marginLeft"],r=t["padding"===e?"paddingTop":"marginTop"],i=t["padding"===e?"paddingRight":"marginRight"];return[s(n),s(r),s(i)]},d=function(e){if(void 0===e&&(e="margin"),"undefined"==typeof window)return a;var t=l(e),n=document.documentElement.clientWidth,r=window.innerWidth;return{left:t[0],top:t[1],right:t[2],gap:Math.max(0,r-n+t[2]-t[0])}},u=(0,i.Ws)(),c="data-scroll-locked",h=function(e,t,n,r){var i=e.left,a=e.top,s=e.right,l=e.gap;return void 0===n&&(n="margin"),"\n  .".concat(o.xv," {\n   overflow: hidden ").concat(r,";\n   padding-right: ").concat(l,"px ").concat(r,";\n  }\n  body[").concat(c,"] {\n    overflow: hidden ").concat(r,";\n    overscroll-behavior: contain;\n    ").concat([t&&"position: relative ".concat(r,";"),"margin"===n&&"\n    padding-left: ".concat(i,"px;\n    padding-top: ").concat(a,"px;\n    padding-right: ").concat(s,"px;\n    margin-left:0;\n    margin-top:0;\n    margin-right: ").concat(l,"px ").concat(r,";\n    "),"padding"===n&&"padding-right: ".concat(l,"px ").concat(r,";")].filter(Boolean).join(""),"\n  }\n  \n  .").concat(o.pF," {\n    right: ").concat(l,"px ").concat(r,";\n  }\n  \n  .").concat(o.zi," {\n    margin-right: ").concat(l,"px ").concat(r,";\n  }\n  \n  .").concat(o.pF," .").concat(o.pF," {\n    right: 0 ").concat(r,";\n  }\n  \n  .").concat(o.zi," .").concat(o.zi," {\n    margin-right: 0 ").concat(r,";\n  }\n  \n  body[").concat(c,"] {\n    ").concat(o.Av,": ").concat(l,"px;\n  }\n")},f=function(){var e=parseInt(document.body.getAttribute(c)||"0",10);return isFinite(e)?e:0},p=function(){r.useEffect(function(){return document.body.setAttribute(c,(f()+1).toString()),function(){var e=f()-1;e<=0?document.body.removeAttribute(c):document.body.setAttribute(c,e.toString())}},[])},g=function(e){var t=e.noRelative,n=e.noImportant,i=e.gapMode,o=void 0===i?"margin":i;p();var a=r.useMemo(function(){return d(o)},[o]);return r.createElement(u,{styles:h(a,!t,o,n?"":"!important")})}},14833:function(e,t,n){"use strict";n.d(t,{Z:function(){return R}});var r=n(60302),i=n(10331),o=n(22521),a=n(27827),s=(0,n(17850)._)(),l=function(){},d=i.forwardRef(function(e,t){var n=i.useRef(null),o=i.useState({onScrollCapture:l,onWheelCapture:l,onTouchMoveCapture:l}),d=o[0],u=o[1],c=e.forwardProps,h=e.children,f=e.className,p=e.removeScrollBar,g=e.enabled,m=e.shards,v=e.sideCar,_=e.noIsolation,b=e.inert,y=e.allowPinchZoom,T=e.as,E=e.gapMode,w=(0,r._T)(e,["forwardProps","children","className","removeScrollBar","enabled","shards","sideCar","noIsolation","inert","allowPinchZoom","as","gapMode"]),S=(0,a.q)([n,t]),A=(0,r.pi)((0,r.pi)({},w),d);return i.createElement(i.Fragment,null,g&&i.createElement(v,{sideCar:s,removeScrollBar:p,shards:m,noIsolation:_,inert:b,setCallbacks:u,allowPinchZoom:!!y,lockRef:n,gapMode:E}),c?i.cloneElement(i.Children.only(h),(0,r.pi)((0,r.pi)({},A),{ref:S})):i.createElement(void 0===T?"div":T,(0,r.pi)({},A,{className:f,ref:S}),h))});d.defaultProps={enabled:!0,removeScrollBar:!0,inert:!1},d.classNames={fullWidth:o.zi,zeroRight:o.pF};var u=n(86813),c=n(1766),h=n(68623),f=!1;if("undefined"!=typeof window)try{var p=Object.defineProperty({},"passive",{get:function(){return f=!0,!0}});window.addEventListener("test",p,p),window.removeEventListener("test",p,p)}catch(e){f=!1}var g=!!f&&{passive:!1},m=function(e,t){if(!(e instanceof Element))return!1;var n=window.getComputedStyle(e);return"hidden"!==n[t]&&!(n.overflowY===n.overflowX&&"TEXTAREA"!==e.tagName&&"visible"===n[t])},v=function(e,t){var n=t.ownerDocument,r=t;do{if("undefined"!=typeof ShadowRoot&&r instanceof ShadowRoot&&(r=r.host),_(e,r)){var i=b(e,r);if(i[1]>i[2])return!0}r=r.parentNode}while(r&&r!==n.body);return!1},_=function(e,t){return"v"===e?m(t,"overflowY"):m(t,"overflowX")},b=function(e,t){return"v"===e?[t.scrollTop,t.scrollHeight,t.clientHeight]:[t.scrollLeft,t.scrollWidth,t.clientWidth]},y=function(e,t,n,r,i){var o,a=(o=window.getComputedStyle(t).direction,"h"===e&&"rtl"===o?-1:1),s=a*r,l=n.target,d=t.contains(l),u=!1,c=s>0,h=0,f=0;do{var p=b(e,l),g=p[0],m=p[1]-p[2]-a*g;(g||m)&&_(e,l)&&(h+=m,f+=g),l instanceof ShadowRoot?l=l.host:l=l.parentNode}while(!d&&l!==document.body||d&&(t.contains(l)||t===l));return c&&(i&&1>Math.abs(h)||!i&&s>h)?u=!0:!c&&(i&&1>Math.abs(f)||!i&&-s>f)&&(u=!0),u},T=function(e){return"changedTouches"in e?[e.changedTouches[0].clientX,e.changedTouches[0].clientY]:[0,0]},E=function(e){return[e.deltaX,e.deltaY]},w=function(e){return e&&"current"in e?e.current:e},S=0,A=[],x=(0,u.L)(s,function(e){var t=i.useRef([]),n=i.useRef([0,0]),o=i.useRef(),a=i.useState(S++)[0],s=i.useState(h.Ws)[0],l=i.useRef(e);i.useEffect(function(){l.current=e},[e]),i.useEffect(function(){if(e.inert){document.body.classList.add("block-interactivity-".concat(a));var t=(0,r.ev)([e.lockRef.current],(e.shards||[]).map(w),!0).filter(Boolean);return t.forEach(function(e){return e.classList.add("allow-interactivity-".concat(a))}),function(){document.body.classList.remove("block-interactivity-".concat(a)),t.forEach(function(e){return e.classList.remove("allow-interactivity-".concat(a))})}}},[e.inert,e.lockRef.current,e.shards]);var d=i.useCallback(function(e,t){if("touches"in e&&2===e.touches.length||"wheel"===e.type&&e.ctrlKey)return!l.current.allowPinchZoom;var r,i=T(e),a=n.current,s="deltaX"in e?e.deltaX:a[0]-i[0],d="deltaY"in e?e.deltaY:a[1]-i[1],u=e.target,c=Math.abs(s)>Math.abs(d)?"h":"v";if("touches"in e&&"h"===c&&"range"===u.type)return!1;var h=v(c,u);if(!h)return!0;if(h?r=c:(r="v"===c?"h":"v",h=v(c,u)),!h)return!1;if(!o.current&&"changedTouches"in e&&(s||d)&&(o.current=r),!r)return!0;var f=o.current||r;return y(f,t,e,"h"===f?s:d,!0)},[]),u=i.useCallback(function(e){if(A.length&&A[A.length-1]===s){var n="deltaY"in e?E(e):T(e),r=t.current.filter(function(t){var r;return t.name===e.type&&(t.target===e.target||e.target===t.shadowParent)&&(r=t.delta)[0]===n[0]&&r[1]===n[1]})[0];if(r&&r.should){e.cancelable&&e.preventDefault();return}if(!r){var i=(l.current.shards||[]).map(w).filter(Boolean).filter(function(t){return t.contains(e.target)});(i.length>0?d(e,i[0]):!l.current.noIsolation)&&e.cancelable&&e.preventDefault()}}},[]),f=i.useCallback(function(e,n,r,i){var o={name:e,delta:n,target:r,should:i,shadowParent:function(e){for(var t=null;null!==e;)e instanceof ShadowRoot&&(t=e.host,e=e.host),e=e.parentNode;return t}(r)};t.current.push(o),setTimeout(function(){t.current=t.current.filter(function(e){return e!==o})},1)},[]),p=i.useCallback(function(e){n.current=T(e),o.current=void 0},[]),m=i.useCallback(function(t){f(t.type,E(t),t.target,d(t,e.lockRef.current))},[]),_=i.useCallback(function(t){f(t.type,T(t),t.target,d(t,e.lockRef.current))},[]);i.useEffect(function(){return A.push(s),e.setCallbacks({onScrollCapture:m,onWheelCapture:m,onTouchMoveCapture:_}),document.addEventListener("wheel",u,g),document.addEventListener("touchmove",u,g),document.addEventListener("touchstart",p,g),function(){A=A.filter(function(e){return e!==s}),document.removeEventListener("wheel",u,g),document.removeEventListener("touchmove",u,g),document.removeEventListener("touchstart",p,g)}},[]);var b=e.removeScrollBar,x=e.inert;return i.createElement(i.Fragment,null,x?i.createElement(s,{styles:"\n  .block-interactivity-".concat(a," {pointer-events: none;}\n  .allow-interactivity-").concat(a," {pointer-events: all;}\n")}):null,b?i.createElement(c.jp,{gapMode:e.gapMode}):null)}),C=i.forwardRef(function(e,t){return i.createElement(d,(0,r.pi)({},e,{ref:t,sideCar:x}))});C.classNames=d.classNames;var R=C},68623:function(e,t,n){"use strict";n.d(t,{Ws:function(){return s}});var r,i=n(10331),o=function(){var e=0,t=null;return{add:function(i){if(0==e&&(t=function(){if(!document)return null;var e=document.createElement("style");e.type="text/css";var t=r||n.nc;return t&&e.setAttribute("nonce",t),e}())){var o,a;(o=t).styleSheet?o.styleSheet.cssText=i:o.appendChild(document.createTextNode(i)),a=t,(document.head||document.getElementsByTagName("head")[0]).appendChild(a)}e++},remove:function(){--e||!t||(t.parentNode&&t.parentNode.removeChild(t),t=null)}}},a=function(){var e=o();return function(t,n){i.useEffect(function(){return e.add(t),function(){e.remove()}},[t&&n])}},s=function(){var e=a();return function(t){return e(t.styles,t.dynamic),null}}},27827:function(e,t,n){"use strict";n.d(t,{q:function(){return s}});var r=n(10331);function i(e,t){return"function"==typeof e?e(t):e&&(e.current=t),e}var o="undefined"!=typeof window?r.useLayoutEffect:r.useEffect,a=new WeakMap;function s(e,t){var n,s,l,d=(n=t||null,s=function(t){return e.forEach(function(e){return i(e,t)})},(l=(0,r.useState)(function(){return{value:n,callback:s,facade:{get current(){return l.value},set current(value){var e=l.value;e!==value&&(l.value=value,l.callback(value,e))}}}})[0]).callback=s,l.facade);return o(function(){var t=a.get(d);if(t){var n=new Set(t),r=new Set(e),o=d.current;n.forEach(function(e){r.has(e)||i(e,null)}),r.forEach(function(e){n.has(e)||i(e,o)})}a.set(d,e)},[e]),d}},86813:function(e,t,n){"use strict";n.d(t,{L:function(){return a}});var r=n(60302),i=n(10331),o=function(e){var t=e.sideCar,n=(0,r._T)(e,["sideCar"]);if(!t)throw Error("Sidecar: please provide `sideCar` property to import the right car");var o=t.read();if(!o)throw Error("Sidecar medium not found");return i.createElement(o,(0,r.pi)({},n))};function a(e,t){return e.useMedium(t),o}o.isSideCarExport=!0},17850:function(e,t,n){"use strict";n.d(t,{_:function(){return o}});var r=n(60302);function i(e){return e}function o(e){void 0===e&&(e={});var t,n,o,a=(void 0===t&&(t=i),n=[],o=!1,{read:function(){if(o)throw Error("Sidecar: could not `read` from an `assigned` medium. `read` could be used only with `useMedium`.");return n.length?n[n.length-1]:null},useMedium:function(e){var r=t(e,o);return n.push(r),function(){n=n.filter(function(e){return e!==r})}},assignSyncMedium:function(e){for(o=!0;n.length;){var t=n;n=[],t.forEach(e)}n={push:function(t){return e(t)},filter:function(){return n}}},assignMedium:function(e){o=!0;var t=[];if(n.length){var r=n;n=[],r.forEach(e),t=n}var i=function(){var n=t;t=[],n.forEach(e)},a=function(){return Promise.resolve().then(i)};a(),n={push:function(e){t.push(e),a()},filter:function(e){return t=t.filter(e),n}}}});return a.options=(0,r.pi)({async:!0,ssr:!1},e),a}},34343:function(e,t,n){"use strict";var r=n(10331),i="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},o=r.useState,a=r.useEffect,s=r.useLayoutEffect,l=r.useDebugValue;function d(e){var t=e.getSnapshot;e=e.value;try{var n=t();return!i(e,n)}catch(e){return!0}}var u="undefined"==typeof window||void 0===window.document||void 0===window.document.createElement?function(e,t){return t()}:function(e,t){var n=t(),r=o({inst:{value:n,getSnapshot:t}}),i=r[0].inst,u=r[1];return s(function(){i.value=n,i.getSnapshot=t,d(i)&&u({inst:i})},[e,n,t]),a(function(){return d(i)&&u({inst:i}),e(function(){d(i)&&u({inst:i})})},[e]),l(n),n};t.useSyncExternalStore=void 0!==r.useSyncExternalStore?r.useSyncExternalStore:u},35245:function(e,t,n){"use strict";var r=n(10331),i=n(94254),o="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},a=i.useSyncExternalStore,s=r.useRef,l=r.useEffect,d=r.useMemo,u=r.useDebugValue;t.useSyncExternalStoreWithSelector=function(e,t,n,r,i){var c=s(null);if(null===c.current){var h={hasValue:!1,value:null};c.current=h}else h=c.current;var f=a(e,(c=d(function(){function e(e){if(!l){if(l=!0,a=e,e=r(e),void 0!==i&&h.hasValue){var t=h.value;if(i(t,e))return s=t}return s=e}if(t=s,o(a,e))return t;var n=r(e);return void 0!==i&&i(t,n)?(a=e,t):(a=e,s=n)}var a,s,l=!1,d=void 0===n?null:n;return[function(){return e(t())},null===d?void 0:function(){return e(d())}]},[t,n,r,i]))[0],c[1]);return l(function(){h.hasValue=!0,h.value=f},[f]),u(f),f}},94254:function(e,t,n){"use strict";e.exports=n(34343)},35108:function(e,t,n){"use strict";e.exports=n(35245)},5857:function(e,t,n){"use strict";function r(e,t,{checkForDefaultPrevented:n=!0}={}){return function(r){if(e?.(r),!1===n||!r.defaultPrevented)return t?.(r)}}n.d(t,{M:function(){return r}})},53333:function(e,t,n){"use strict";n.d(t,{B:function(){return l}});var r=n(10331),i=n(78722),o=n(30057),a=n(63677),s=n(46499);function l(e){let t=e+"CollectionProvider",[n,l]=(0,i.b)(t),[d,u]=n(t,{collectionRef:{current:null},itemMap:new Map}),c=e=>{let{scope:t,children:n}=e,i=r.useRef(null),o=r.useRef(new Map).current;return(0,s.jsx)(d,{scope:t,itemMap:o,collectionRef:i,children:n})};c.displayName=t;let h=e+"CollectionSlot",f=r.forwardRef((e,t)=>{let{scope:n,children:r}=e,i=u(h,n),l=(0,o.e)(t,i.collectionRef);return(0,s.jsx)(a.g7,{ref:l,children:r})});f.displayName=h;let p=e+"CollectionItemSlot",g="data-radix-collection-item",m=r.forwardRef((e,t)=>{let{scope:n,children:i,...l}=e,d=r.useRef(null),c=(0,o.e)(t,d),h=u(p,n);return r.useEffect(()=>(h.itemMap.set(d,{ref:d,...l}),()=>void h.itemMap.delete(d))),(0,s.jsx)(a.g7,{[g]:"",ref:c,children:i})});return m.displayName=p,[{Provider:c,Slot:f,ItemSlot:m},function(t){let n=u(e+"CollectionConsumer",t);return r.useCallback(()=>{let e=n.collectionRef.current;if(!e)return[];let t=Array.from(e.querySelectorAll("[".concat(g,"]")));return Array.from(n.itemMap.values()).sort((e,n)=>t.indexOf(e.ref.current)-t.indexOf(n.ref.current))},[n.collectionRef,n.itemMap])},l]}},30057:function(e,t,n){"use strict";n.d(t,{F:function(){return o},e:function(){return a}});var r=n(10331);function i(e,t){if("function"==typeof e)return e(t);null!=e&&(e.current=t)}function o(...e){return t=>{let n=!1,r=e.map(e=>{let r=i(e,t);return n||"function"!=typeof r||(n=!0),r});if(n)return()=>{for(let t=0;t<r.length;t++){let n=r[t];"function"==typeof n?n():i(e[t],null)}}}}function a(...e){return r.useCallback(o(...e),e)}},42788:function(e,t,n){"use strict";n.d(t,{Ee:function(){return H},Rk:function(){return Y},Tr:function(){return G},Uv:function(){return k},VY:function(){return P},Z0:function(){return V},ZA:function(){return U},__:function(){return z},ck:function(){return j},fC:function(){return I},fF:function(){return Z},oC:function(){return W},tu:function(){return J},wU:function(){return X},xz:function(){return F}});var r=n(10331),i=n(5857),o=n(78722),a=n(70943),s=n(69634),l=n(81556),d=n(64316),u=n(46499),c="ContextMenu",[h,f]=(0,o.b)(c,[s.Wf]),p=(0,s.Wf)(),[g,m]=h(c),v=e=>{let{__scopeContextMenu:t,children:n,onOpenChange:i,dir:o,modal:a=!0}=e,[d,c]=r.useState(!1),h=p(t),f=(0,l.W)(i),m=r.useCallback(e=>{c(e),f(e)},[f]);return(0,u.jsx)(g,{scope:t,open:d,onOpenChange:m,modal:a,children:(0,u.jsx)(s.fC,{...h,dir:o,open:d,onOpenChange:m,modal:a,children:n})})};v.displayName=c;var _="ContextMenuTrigger",b=r.forwardRef((e,t)=>{let{__scopeContextMenu:n,disabled:o=!1,...l}=e,d=m(_,n),c=p(n),h=r.useRef({x:0,y:0}),f=r.useRef({getBoundingClientRect:()=>DOMRect.fromRect({width:0,height:0,...h.current})}),g=r.useRef(0),v=r.useCallback(()=>window.clearTimeout(g.current),[]),b=e=>{h.current={x:e.clientX,y:e.clientY},d.onOpenChange(!0)};return r.useEffect(()=>v,[v]),r.useEffect(()=>void(o&&v()),[o,v]),(0,u.jsxs)(u.Fragment,{children:[(0,u.jsx)(s.ee,{...c,virtualRef:f}),(0,u.jsx)(a.WV.span,{"data-state":d.open?"open":"closed","data-disabled":o?"":void 0,...l,ref:t,style:{WebkitTouchCallout:"none",...e.style},onContextMenu:o?e.onContextMenu:(0,i.M)(e.onContextMenu,e=>{v(),b(e),e.preventDefault()}),onPointerDown:o?e.onPointerDown:(0,i.M)(e.onPointerDown,B(e=>{v(),g.current=window.setTimeout(()=>b(e),700)})),onPointerMove:o?e.onPointerMove:(0,i.M)(e.onPointerMove,B(v)),onPointerCancel:o?e.onPointerCancel:(0,i.M)(e.onPointerCancel,B(v)),onPointerUp:o?e.onPointerUp:(0,i.M)(e.onPointerUp,B(v))})]})});b.displayName=_;var y=e=>{let{__scopeContextMenu:t,...n}=e,r=p(t);return(0,u.jsx)(s.h_,{...r,...n})};y.displayName="ContextMenuPortal";var T="ContextMenuContent",E=r.forwardRef((e,t)=>{let{__scopeContextMenu:n,...i}=e,o=m(T,n),a=p(n),l=r.useRef(!1);return(0,u.jsx)(s.VY,{...a,...i,ref:t,side:"right",sideOffset:2,align:"start",onCloseAutoFocus:t=>{var n;null===(n=e.onCloseAutoFocus)||void 0===n||n.call(e,t),!t.defaultPrevented&&l.current&&t.preventDefault(),l.current=!1},onInteractOutside:t=>{var n;null===(n=e.onInteractOutside)||void 0===n||n.call(e,t),t.defaultPrevented||o.modal||(l.current=!0)},style:{...e.style,"--radix-context-menu-content-transform-origin":"var(--radix-popper-transform-origin)","--radix-context-menu-content-available-width":"var(--radix-popper-available-width)","--radix-context-menu-content-available-height":"var(--radix-popper-available-height)","--radix-context-menu-trigger-width":"var(--radix-popper-anchor-width)","--radix-context-menu-trigger-height":"var(--radix-popper-anchor-height)"}})});E.displayName=T;var w=r.forwardRef((e,t)=>{let{__scopeContextMenu:n,...r}=e,i=p(n);return(0,u.jsx)(s.ZA,{...i,...r,ref:t})});w.displayName="ContextMenuGroup";var S=r.forwardRef((e,t)=>{let{__scopeContextMenu:n,...r}=e,i=p(n);return(0,u.jsx)(s.__,{...i,...r,ref:t})});S.displayName="ContextMenuLabel";var A=r.forwardRef((e,t)=>{let{__scopeContextMenu:n,...r}=e,i=p(n);return(0,u.jsx)(s.ck,{...i,...r,ref:t})});A.displayName="ContextMenuItem";var x=r.forwardRef((e,t)=>{let{__scopeContextMenu:n,...r}=e,i=p(n);return(0,u.jsx)(s.oC,{...i,...r,ref:t})});x.displayName="ContextMenuCheckboxItem";var C=r.forwardRef((e,t)=>{let{__scopeContextMenu:n,...r}=e,i=p(n);return(0,u.jsx)(s.Ee,{...i,...r,ref:t})});C.displayName="ContextMenuRadioGroup";var R=r.forwardRef((e,t)=>{let{__scopeContextMenu:n,...r}=e,i=p(n);return(0,u.jsx)(s.Rk,{...i,...r,ref:t})});R.displayName="ContextMenuRadioItem";var L=r.forwardRef((e,t)=>{let{__scopeContextMenu:n,...r}=e,i=p(n);return(0,u.jsx)(s.wU,{...i,...r,ref:t})});L.displayName="ContextMenuItemIndicator";var O=r.forwardRef((e,t)=>{let{__scopeContextMenu:n,...r}=e,i=p(n);return(0,u.jsx)(s.Z0,{...i,...r,ref:t})});O.displayName="ContextMenuSeparator",r.forwardRef((e,t)=>{let{__scopeContextMenu:n,...r}=e,i=p(n);return(0,u.jsx)(s.Eh,{...i,...r,ref:t})}).displayName="ContextMenuArrow";var N=e=>{let{__scopeContextMenu:t,children:n,onOpenChange:r,open:i,defaultOpen:o}=e,a=p(t),[l,c]=(0,d.T)({prop:i,defaultProp:o,onChange:r});return(0,u.jsx)(s.Tr,{...a,open:l,onOpenChange:c,children:n})};N.displayName="ContextMenuSub";var D=r.forwardRef((e,t)=>{let{__scopeContextMenu:n,...r}=e,i=p(n);return(0,u.jsx)(s.fF,{...i,...r,ref:t})});D.displayName="ContextMenuSubTrigger";var M=r.forwardRef((e,t)=>{let{__scopeContextMenu:n,...r}=e,i=p(n);return(0,u.jsx)(s.tu,{...i,...r,ref:t,style:{...e.style,"--radix-context-menu-content-transform-origin":"var(--radix-popper-transform-origin)","--radix-context-menu-content-available-width":"var(--radix-popper-available-width)","--radix-context-menu-content-available-height":"var(--radix-popper-available-height)","--radix-context-menu-trigger-width":"var(--radix-popper-anchor-width)","--radix-context-menu-trigger-height":"var(--radix-popper-anchor-height)"}})});function B(e){return t=>"mouse"!==t.pointerType?e(t):void 0}M.displayName="ContextMenuSubContent";var I=v,F=b,k=y,P=E,U=w,z=S,j=A,W=x,H=C,Y=R,X=L,V=O,G=N,Z=D,J=M},78722:function(e,t,n){"use strict";n.d(t,{b:function(){return a},k:function(){return o}});var r=n(10331),i=n(46499);function o(e,t){let n=r.createContext(t),o=e=>{let{children:t,...o}=e,a=r.useMemo(()=>o,Object.values(o));return(0,i.jsx)(n.Provider,{value:a,children:t})};return o.displayName=e+"Provider",[o,function(i){let o=r.useContext(n);if(o)return o;if(void 0!==t)return t;throw Error(`\`${i}\` must be used within \`${e}\``)}]}function a(e,t=[]){let n=[],o=()=>{let t=n.map(e=>r.createContext(e));return function(n){let i=n?.[e]||t;return r.useMemo(()=>({[`__scope${e}`]:{...n,[e]:i}}),[n,i])}};return o.scopeName=e,[function(t,o){let a=r.createContext(o),s=n.length;n=[...n,o];let l=t=>{let{scope:n,children:o,...l}=t,d=n?.[e]?.[s]||a,u=r.useMemo(()=>l,Object.values(l));return(0,i.jsx)(d.Provider,{value:u,children:o})};return l.displayName=t+"Provider",[l,function(n,i){let l=i?.[e]?.[s]||a,d=r.useContext(l);if(d)return d;if(void 0!==o)return o;throw Error(`\`${n}\` must be used within \`${t}\``)}]},function(...e){let t=e[0];if(1===e.length)return t;let n=()=>{let n=e.map(e=>({useScope:e(),scopeName:e.scopeName}));return function(e){let i=n.reduce((t,{useScope:n,scopeName:r})=>{let i=n(e)[`__scope${r}`];return{...t,...i}},{});return r.useMemo(()=>({[`__scope${t.scopeName}`]:i}),[i])}};return n.scopeName=t.scopeName,n}(o,...t)]}},78627:function(e,t,n){"use strict";n.d(t,{Dx:function(){return en},VY:function(){return et},aV:function(){return ee},dk:function(){return er},fC:function(){return $},h_:function(){return Q},jm:function(){return G},p8:function(){return T},x8:function(){return ei},xz:function(){return q}});var r=n(10331),i=n(5857),o=n(30057),a=n(78722),s=n(63440),l=n(64316),d=n(31414),u=n(40199),c=n(65558),h=n(7143),f=n(70943),p=n(93468),g=n(14833),m=n(29443),v=n(63677),_=n(46499),b="Dialog",[y,T]=(0,a.b)(b),[E,w]=y(b),S=e=>{let{__scopeDialog:t,children:n,open:i,defaultOpen:o,onOpenChange:a,modal:d=!0}=e,u=r.useRef(null),c=r.useRef(null),[h=!1,f]=(0,l.T)({prop:i,defaultProp:o,onChange:a});return(0,_.jsx)(E,{scope:t,triggerRef:u,contentRef:c,contentId:(0,s.M)(),titleId:(0,s.M)(),descriptionId:(0,s.M)(),open:h,onOpenChange:f,onOpenToggle:r.useCallback(()=>f(e=>!e),[f]),modal:d,children:n})};S.displayName=b;var A="DialogTrigger",x=r.forwardRef((e,t)=>{let{__scopeDialog:n,...r}=e,a=w(A,n),s=(0,o.e)(t,a.triggerRef);return(0,_.jsx)(f.WV.button,{type:"button","aria-haspopup":"dialog","aria-expanded":a.open,"aria-controls":a.contentId,"data-state":X(a.open),...r,ref:s,onClick:(0,i.M)(e.onClick,a.onOpenToggle)})});x.displayName=A;var C="DialogPortal",[R,L]=y(C,{forceMount:void 0}),O=e=>{let{__scopeDialog:t,forceMount:n,children:i,container:o}=e,a=w(C,t);return(0,_.jsx)(R,{scope:t,forceMount:n,children:r.Children.map(i,e=>(0,_.jsx)(h.z,{present:n||a.open,children:(0,_.jsx)(c.h,{asChild:!0,container:o,children:e})}))})};O.displayName=C;var N="DialogOverlay",D=r.forwardRef((e,t)=>{let n=L(N,e.__scopeDialog),{forceMount:r=n.forceMount,...i}=e,o=w(N,e.__scopeDialog);return o.modal?(0,_.jsx)(h.z,{present:r||o.open,children:(0,_.jsx)(M,{...i,ref:t})}):null});D.displayName=N;var M=r.forwardRef((e,t)=>{let{__scopeDialog:n,...r}=e,i=w(N,n);return(0,_.jsx)(g.Z,{as:v.g7,allowPinchZoom:!0,shards:[i.contentRef],children:(0,_.jsx)(f.WV.div,{"data-state":X(i.open),...r,ref:t,style:{pointerEvents:"auto",...r.style}})})}),B="DialogContent",I=r.forwardRef((e,t)=>{let n=L(B,e.__scopeDialog),{forceMount:r=n.forceMount,...i}=e,o=w(B,e.__scopeDialog);return(0,_.jsx)(h.z,{present:r||o.open,children:o.modal?(0,_.jsx)(F,{...i,ref:t}):(0,_.jsx)(k,{...i,ref:t})})});I.displayName=B;var F=r.forwardRef((e,t)=>{let n=w(B,e.__scopeDialog),a=r.useRef(null),s=(0,o.e)(t,n.contentRef,a);return r.useEffect(()=>{let e=a.current;if(e)return(0,m.Ry)(e)},[]),(0,_.jsx)(P,{...e,ref:s,trapFocus:n.open,disableOutsidePointerEvents:!0,onCloseAutoFocus:(0,i.M)(e.onCloseAutoFocus,e=>{var t;e.preventDefault(),null===(t=n.triggerRef.current)||void 0===t||t.focus()}),onPointerDownOutside:(0,i.M)(e.onPointerDownOutside,e=>{let t=e.detail.originalEvent,n=0===t.button&&!0===t.ctrlKey;(2===t.button||n)&&e.preventDefault()}),onFocusOutside:(0,i.M)(e.onFocusOutside,e=>e.preventDefault())})}),k=r.forwardRef((e,t)=>{let n=w(B,e.__scopeDialog),i=r.useRef(!1),o=r.useRef(!1);return(0,_.jsx)(P,{...e,ref:t,trapFocus:!1,disableOutsidePointerEvents:!1,onCloseAutoFocus:t=>{var r,a;null===(r=e.onCloseAutoFocus)||void 0===r||r.call(e,t),t.defaultPrevented||(i.current||null===(a=n.triggerRef.current)||void 0===a||a.focus(),t.preventDefault()),i.current=!1,o.current=!1},onInteractOutside:t=>{var r,a;null===(r=e.onInteractOutside)||void 0===r||r.call(e,t),t.defaultPrevented||(i.current=!0,"pointerdown"!==t.detail.originalEvent.type||(o.current=!0));let s=t.target;(null===(a=n.triggerRef.current)||void 0===a?void 0:a.contains(s))&&t.preventDefault(),"focusin"===t.detail.originalEvent.type&&o.current&&t.preventDefault()}})}),P=r.forwardRef((e,t)=>{let{__scopeDialog:n,trapFocus:i,onOpenAutoFocus:a,onCloseAutoFocus:s,...l}=e,c=w(B,n),h=r.useRef(null),f=(0,o.e)(t,h);return(0,p.EW)(),(0,_.jsxs)(_.Fragment,{children:[(0,_.jsx)(u.M,{asChild:!0,loop:!0,trapped:i,onMountAutoFocus:a,onUnmountAutoFocus:s,children:(0,_.jsx)(d.XB,{role:"dialog",id:c.contentId,"aria-describedby":c.descriptionId,"aria-labelledby":c.titleId,"data-state":X(c.open),...l,ref:f,onDismiss:()=>c.onOpenChange(!1)})}),(0,_.jsxs)(_.Fragment,{children:[(0,_.jsx)(J,{titleId:c.titleId}),(0,_.jsx)(K,{contentRef:h,descriptionId:c.descriptionId})]})]})}),U="DialogTitle",z=r.forwardRef((e,t)=>{let{__scopeDialog:n,...r}=e,i=w(U,n);return(0,_.jsx)(f.WV.h2,{id:i.titleId,...r,ref:t})});z.displayName=U;var j="DialogDescription",W=r.forwardRef((e,t)=>{let{__scopeDialog:n,...r}=e,i=w(j,n);return(0,_.jsx)(f.WV.p,{id:i.descriptionId,...r,ref:t})});W.displayName=j;var H="DialogClose",Y=r.forwardRef((e,t)=>{let{__scopeDialog:n,...r}=e,o=w(H,n);return(0,_.jsx)(f.WV.button,{type:"button",...r,ref:t,onClick:(0,i.M)(e.onClick,()=>o.onOpenChange(!1))})});function X(e){return e?"open":"closed"}Y.displayName=H;var V="DialogTitleWarning",[G,Z]=(0,a.k)(V,{contentName:B,titleName:U,docsSlug:"dialog"}),J=e=>{let{titleId:t}=e,n=Z(V),i="`".concat(n.contentName,"` requires a `").concat(n.titleName,"` for the component to be accessible for screen reader users.\n\nIf you want to hide the `").concat(n.titleName,"`, you can wrap it with our VisuallyHidden component.\n\nFor more information, see https://radix-ui.com/primitives/docs/components/").concat(n.docsSlug);return r.useEffect(()=>{t&&!document.getElementById(t)&&console.error(i)},[i,t]),null},K=e=>{let{contentRef:t,descriptionId:n}=e,i=Z("DialogDescriptionWarning"),o="Warning: Missing `Description` or `aria-describedby={undefined}` for {".concat(i.contentName,"}.");return r.useEffect(()=>{var e;let r=null===(e=t.current)||void 0===e?void 0:e.getAttribute("aria-describedby");n&&r&&!document.getElementById(n)&&console.warn(o)},[o,t,n]),null},$=S,q=x,Q=O,ee=D,et=I,en=z,er=W,ei=Y},36052:function(e,t,n){"use strict";n.d(t,{gm:function(){return o}});var r=n(10331);n(46499);var i=r.createContext(void 0);function o(e){let t=r.useContext(i);return e||t||"ltr"}},31414:function(e,t,n){"use strict";n.d(t,{XB:function(){return h}});var r,i=n(10331),o=n(5857),a=n(70943),s=n(30057),l=n(81556),d=n(46499),u="dismissableLayer.update",c=i.createContext({layers:new Set,layersWithOutsidePointerEventsDisabled:new Set,branches:new Set}),h=i.forwardRef((e,t)=>{var n,h;let{disableOutsidePointerEvents:g=!1,onEscapeKeyDown:m,onPointerDownOutside:v,onFocusOutside:_,onInteractOutside:b,onDismiss:y,...T}=e,E=i.useContext(c),[w,S]=i.useState(null),A=null!==(h=null==w?void 0:w.ownerDocument)&&void 0!==h?h:null===(n=globalThis)||void 0===n?void 0:n.document,[,x]=i.useState({}),C=(0,s.e)(t,e=>S(e)),R=Array.from(E.layers),[L]=[...E.layersWithOutsidePointerEventsDisabled].slice(-1),O=R.indexOf(L),N=w?R.indexOf(w):-1,D=E.layersWithOutsidePointerEventsDisabled.size>0,M=N>=O,B=function(e){var t;let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null===(t=globalThis)||void 0===t?void 0:t.document,r=(0,l.W)(e),o=i.useRef(!1),a=i.useRef(()=>{});return i.useEffect(()=>{let e=e=>{if(e.target&&!o.current){let t=function(){p("dismissableLayer.pointerDownOutside",r,i,{discrete:!0})},i={originalEvent:e};"touch"===e.pointerType?(n.removeEventListener("click",a.current),a.current=t,n.addEventListener("click",a.current,{once:!0})):t()}else n.removeEventListener("click",a.current);o.current=!1},t=window.setTimeout(()=>{n.addEventListener("pointerdown",e)},0);return()=>{window.clearTimeout(t),n.removeEventListener("pointerdown",e),n.removeEventListener("click",a.current)}},[n,r]),{onPointerDownCapture:()=>o.current=!0}}(e=>{let t=e.target,n=[...E.branches].some(e=>e.contains(t));!M||n||(null==v||v(e),null==b||b(e),e.defaultPrevented||null==y||y())},A),I=function(e){var t;let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null===(t=globalThis)||void 0===t?void 0:t.document,r=(0,l.W)(e),o=i.useRef(!1);return i.useEffect(()=>{let e=e=>{e.target&&!o.current&&p("dismissableLayer.focusOutside",r,{originalEvent:e},{discrete:!1})};return n.addEventListener("focusin",e),()=>n.removeEventListener("focusin",e)},[n,r]),{onFocusCapture:()=>o.current=!0,onBlurCapture:()=>o.current=!1}}(e=>{let t=e.target;[...E.branches].some(e=>e.contains(t))||(null==_||_(e),null==b||b(e),e.defaultPrevented||null==y||y())},A);return!function(e,t=globalThis?.document){let n=(0,l.W)(e);i.useEffect(()=>{let e=e=>{"Escape"===e.key&&n(e)};return t.addEventListener("keydown",e,{capture:!0}),()=>t.removeEventListener("keydown",e,{capture:!0})},[n,t])}(e=>{N!==E.layers.size-1||(null==m||m(e),!e.defaultPrevented&&y&&(e.preventDefault(),y()))},A),i.useEffect(()=>{if(w)return g&&(0===E.layersWithOutsidePointerEventsDisabled.size&&(r=A.body.style.pointerEvents,A.body.style.pointerEvents="none"),E.layersWithOutsidePointerEventsDisabled.add(w)),E.layers.add(w),f(),()=>{g&&1===E.layersWithOutsidePointerEventsDisabled.size&&(A.body.style.pointerEvents=r)}},[w,A,g,E]),i.useEffect(()=>()=>{w&&(E.layers.delete(w),E.layersWithOutsidePointerEventsDisabled.delete(w),f())},[w,E]),i.useEffect(()=>{let e=()=>x({});return document.addEventListener(u,e),()=>document.removeEventListener(u,e)},[]),(0,d.jsx)(a.WV.div,{...T,ref:C,style:{pointerEvents:D?M?"auto":"none":void 0,...e.style},onFocusCapture:(0,o.M)(e.onFocusCapture,I.onFocusCapture),onBlurCapture:(0,o.M)(e.onBlurCapture,I.onBlurCapture),onPointerDownCapture:(0,o.M)(e.onPointerDownCapture,B.onPointerDownCapture)})});function f(){let e=new CustomEvent(u);document.dispatchEvent(e)}function p(e,t,n,r){let{discrete:i}=r,o=n.originalEvent.target,s=new CustomEvent(e,{bubbles:!1,cancelable:!0,detail:n});t&&o.addEventListener(e,t,{once:!0}),i?(0,a.jH)(o,s):o.dispatchEvent(s)}h.displayName="DismissableLayer",i.forwardRef((e,t)=>{let n=i.useContext(c),r=i.useRef(null),o=(0,s.e)(t,r);return i.useEffect(()=>{let e=r.current;if(e)return n.branches.add(e),()=>{n.branches.delete(e)}},[n.branches]),(0,d.jsx)(a.WV.div,{...e,ref:o})}).displayName="DismissableLayerBranch"},93468:function(e,t,n){"use strict";n.d(t,{EW:function(){return o}});var r=n(10331),i=0;function o(){r.useEffect(()=>{var e,t;let n=document.querySelectorAll("[data-radix-focus-guard]");return document.body.insertAdjacentElement("afterbegin",null!==(e=n[0])&&void 0!==e?e:a()),document.body.insertAdjacentElement("beforeend",null!==(t=n[1])&&void 0!==t?t:a()),i++,()=>{1===i&&document.querySelectorAll("[data-radix-focus-guard]").forEach(e=>e.remove()),i--}},[])}function a(){let e=document.createElement("span");return e.setAttribute("data-radix-focus-guard",""),e.tabIndex=0,e.style.outline="none",e.style.opacity="0",e.style.position="fixed",e.style.pointerEvents="none",e}},40199:function(e,t,n){"use strict";let r;n.d(t,{M:function(){return h}});var i=n(10331),o=n(30057),a=n(70943),s=n(81556),l=n(46499),d="focusScope.autoFocusOnMount",u="focusScope.autoFocusOnUnmount",c={bubbles:!1,cancelable:!0},h=i.forwardRef((e,t)=>{let{loop:n=!1,trapped:r=!1,onMountAutoFocus:h,onUnmountAutoFocus:v,..._}=e,[b,y]=i.useState(null),T=(0,s.W)(h),E=(0,s.W)(v),w=i.useRef(null),S=(0,o.e)(t,e=>y(e)),A=i.useRef({paused:!1,pause(){this.paused=!0},resume(){this.paused=!1}}).current;i.useEffect(()=>{if(r){let e=function(e){if(A.paused||!b)return;let t=e.target;b.contains(t)?w.current=t:g(w.current,{select:!0})},t=function(e){if(A.paused||!b)return;let t=e.relatedTarget;null===t||b.contains(t)||g(w.current,{select:!0})};document.addEventListener("focusin",e),document.addEventListener("focusout",t);let n=new MutationObserver(function(e){if(document.activeElement===document.body)for(let t of e)t.removedNodes.length>0&&g(b)});return b&&n.observe(b,{childList:!0,subtree:!0}),()=>{document.removeEventListener("focusin",e),document.removeEventListener("focusout",t),n.disconnect()}}},[r,b,A.paused]),i.useEffect(()=>{if(b){m.add(A);let e=document.activeElement;if(!b.contains(e)){let t=new CustomEvent(d,c);b.addEventListener(d,T),b.dispatchEvent(t),t.defaultPrevented||(function(e){let{select:t=!1}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=document.activeElement;for(let r of e)if(g(r,{select:t}),document.activeElement!==n)return}(f(b).filter(e=>"A"!==e.tagName),{select:!0}),document.activeElement===e&&g(b))}return()=>{b.removeEventListener(d,T),setTimeout(()=>{let t=new CustomEvent(u,c);b.addEventListener(u,E),b.dispatchEvent(t),t.defaultPrevented||g(null!=e?e:document.body,{select:!0}),b.removeEventListener(u,E),m.remove(A)},0)}}},[b,T,E,A]);let x=i.useCallback(e=>{if(!n&&!r||A.paused)return;let t="Tab"===e.key&&!e.altKey&&!e.ctrlKey&&!e.metaKey,i=document.activeElement;if(t&&i){let t=e.currentTarget,[r,o]=function(e){let t=f(e);return[p(t,e),p(t.reverse(),e)]}(t);r&&o?e.shiftKey||i!==o?e.shiftKey&&i===r&&(e.preventDefault(),n&&g(o,{select:!0})):(e.preventDefault(),n&&g(r,{select:!0})):i===t&&e.preventDefault()}},[n,r,A.paused]);return(0,l.jsx)(a.WV.div,{tabIndex:-1,..._,ref:S,onKeyDown:x})});function f(e){let t=[],n=document.createTreeWalker(e,NodeFilter.SHOW_ELEMENT,{acceptNode:e=>{let t="INPUT"===e.tagName&&"hidden"===e.type;return e.disabled||e.hidden||t?NodeFilter.FILTER_SKIP:e.tabIndex>=0?NodeFilter.FILTER_ACCEPT:NodeFilter.FILTER_SKIP}});for(;n.nextNode();)t.push(n.currentNode);return t}function p(e,t){for(let n of e)if(!function(e,t){let{upTo:n}=t;if("hidden"===getComputedStyle(e).visibility)return!0;for(;e&&(void 0===n||e!==n);){if("none"===getComputedStyle(e).display)return!0;e=e.parentElement}return!1}(n,{upTo:t}))return n}function g(e){let{select:t=!1}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(e&&e.focus){var n;let r=document.activeElement;e.focus({preventScroll:!0}),e!==r&&(n=e)instanceof HTMLInputElement&&"select"in n&&t&&e.select()}}h.displayName="FocusScope";var m=(r=[],{add(e){let t=r[0];e!==t&&(null==t||t.pause()),(r=v(r,e)).unshift(e)},remove(e){var t;null===(t=(r=v(r,e))[0])||void 0===t||t.resume()}});function v(e,t){let n=[...e],r=n.indexOf(t);return -1!==r&&n.splice(r,1),n}},63440:function(e,t,n){"use strict";n.d(t,{M:function(){return l}});var r,i=n(10331),o=n(20686),a=(r||(r=n.t(i,2)))["useId".toString()]||(()=>void 0),s=0;function l(e){let[t,n]=i.useState(a());return(0,o.b)(()=>{e||n(e=>e??String(s++))},[e]),e||(t?`radix-${t}`:"")}},69634:function(e,t,n){"use strict";n.d(t,{Ee:function(){return eP},Eh:function(){return eW},Rk:function(){return eU},Tr:function(){return eH},VY:function(){return eM},Wf:function(){return M},Z0:function(){return ej},ZA:function(){return eB},__:function(){return eI},ck:function(){return eF},ee:function(){return eN},fC:function(){return eO},fF:function(){return eY},h_:function(){return eD},oC:function(){return ek},tu:function(){return eX},wU:function(){return ez}});var r=n(10331),i=n(5857),o=n(53333),a=n(30057),s=n(78722),l=n(36052),d=n(31414),u=n(93468),c=n(40199),h=n(63440),f=n(60226),p=n(65558),g=n(7143),m=n(70943),v=n(91740),_=n(63677),b=n(81556),y=n(29443),T=n(14833),E=n(46499),w=["Enter"," "],S=["ArrowUp","PageDown","End"],A=["ArrowDown","PageUp","Home",...S],x={ltr:[...w,"ArrowRight"],rtl:[...w,"ArrowLeft"]},C={ltr:["ArrowLeft"],rtl:["ArrowRight"]},R="Menu",[L,O,N]=(0,o.B)(R),[D,M]=(0,s.b)(R,[N,f.D7,v.Pc]),B=(0,f.D7)(),I=(0,v.Pc)(),[F,k]=D(R),[P,U]=D(R),z=e=>{let{__scopeMenu:t,open:n=!1,children:i,dir:o,onOpenChange:a,modal:s=!0}=e,d=B(t),[u,c]=r.useState(null),h=r.useRef(!1),p=(0,b.W)(a),g=(0,l.gm)(o);return r.useEffect(()=>{let e=()=>{h.current=!0,document.addEventListener("pointerdown",t,{capture:!0,once:!0}),document.addEventListener("pointermove",t,{capture:!0,once:!0})},t=()=>h.current=!1;return document.addEventListener("keydown",e,{capture:!0}),()=>{document.removeEventListener("keydown",e,{capture:!0}),document.removeEventListener("pointerdown",t,{capture:!0}),document.removeEventListener("pointermove",t,{capture:!0})}},[]),(0,E.jsx)(f.fC,{...d,children:(0,E.jsx)(F,{scope:t,open:n,onOpenChange:p,content:u,onContentChange:c,children:(0,E.jsx)(P,{scope:t,onClose:r.useCallback(()=>p(!1),[p]),isUsingKeyboardRef:h,dir:g,modal:s,children:i})})})};z.displayName=R;var j=r.forwardRef((e,t)=>{let{__scopeMenu:n,...r}=e,i=B(n);return(0,E.jsx)(f.ee,{...i,...r,ref:t})});j.displayName="MenuAnchor";var W="MenuPortal",[H,Y]=D(W,{forceMount:void 0}),X=e=>{let{__scopeMenu:t,forceMount:n,children:r,container:i}=e,o=k(W,t);return(0,E.jsx)(H,{scope:t,forceMount:n,children:(0,E.jsx)(g.z,{present:n||o.open,children:(0,E.jsx)(p.h,{asChild:!0,container:i,children:r})})})};X.displayName=W;var V="MenuContent",[G,Z]=D(V),J=r.forwardRef((e,t)=>{let n=Y(V,e.__scopeMenu),{forceMount:r=n.forceMount,...i}=e,o=k(V,e.__scopeMenu),a=U(V,e.__scopeMenu);return(0,E.jsx)(L.Provider,{scope:e.__scopeMenu,children:(0,E.jsx)(g.z,{present:r||o.open,children:(0,E.jsx)(L.Slot,{scope:e.__scopeMenu,children:a.modal?(0,E.jsx)(K,{...i,ref:t}):(0,E.jsx)($,{...i,ref:t})})})})}),K=r.forwardRef((e,t)=>{let n=k(V,e.__scopeMenu),o=r.useRef(null),s=(0,a.e)(t,o);return r.useEffect(()=>{let e=o.current;if(e)return(0,y.Ry)(e)},[]),(0,E.jsx)(q,{...e,ref:s,trapFocus:n.open,disableOutsidePointerEvents:n.open,disableOutsideScroll:!0,onFocusOutside:(0,i.M)(e.onFocusOutside,e=>e.preventDefault(),{checkForDefaultPrevented:!1}),onDismiss:()=>n.onOpenChange(!1)})}),$=r.forwardRef((e,t)=>{let n=k(V,e.__scopeMenu);return(0,E.jsx)(q,{...e,ref:t,trapFocus:!1,disableOutsidePointerEvents:!1,disableOutsideScroll:!1,onDismiss:()=>n.onOpenChange(!1)})}),q=r.forwardRef((e,t)=>{let{__scopeMenu:n,loop:o=!1,trapFocus:s,onOpenAutoFocus:l,onCloseAutoFocus:h,disableOutsidePointerEvents:p,onEntryFocus:g,onEscapeKeyDown:m,onPointerDownOutside:b,onFocusOutside:y,onInteractOutside:w,onDismiss:x,disableOutsideScroll:C,...R}=e,L=k(V,n),N=U(V,n),D=B(n),M=I(n),F=O(n),[P,z]=r.useState(null),j=r.useRef(null),W=(0,a.e)(t,j,L.onContentChange),H=r.useRef(0),Y=r.useRef(""),X=r.useRef(0),Z=r.useRef(null),J=r.useRef("right"),K=r.useRef(0),$=C?T.Z:r.Fragment,q=C?{as:_.g7,allowPinchZoom:!0}:void 0,Q=e=>{var t,n;let r=Y.current+e,i=F().filter(e=>!e.disabled),o=document.activeElement,a=null===(t=i.find(e=>e.ref.current===o))||void 0===t?void 0:t.textValue,s=function(e,t,n){var r;let i=t.length>1&&Array.from(t).every(e=>e===t[0])?t[0]:t,o=(r=Math.max(n?e.indexOf(n):-1,0),e.map((t,n)=>e[(r+n)%e.length]));1===i.length&&(o=o.filter(e=>e!==n));let a=o.find(e=>e.toLowerCase().startsWith(i.toLowerCase()));return a!==n?a:void 0}(i.map(e=>e.textValue),r,a),l=null===(n=i.find(e=>e.textValue===s))||void 0===n?void 0:n.ref.current;!function e(t){Y.current=t,window.clearTimeout(H.current),""!==t&&(H.current=window.setTimeout(()=>e(""),1e3))}(r),l&&setTimeout(()=>l.focus())};r.useEffect(()=>()=>window.clearTimeout(H.current),[]),(0,u.EW)();let ee=r.useCallback(e=>{var t,n,r;return J.current===(null===(t=Z.current)||void 0===t?void 0:t.side)&&!!(r=null===(n=Z.current)||void 0===n?void 0:n.area)&&function(e,t){let{x:n,y:r}=e,i=!1;for(let e=0,o=t.length-1;e<t.length;o=e++){let a=t[e].x,s=t[e].y,l=t[o].x,d=t[o].y;s>r!=d>r&&n<(l-a)*(r-s)/(d-s)+a&&(i=!i)}return i}({x:e.clientX,y:e.clientY},r)},[]);return(0,E.jsx)(G,{scope:n,searchRef:Y,onItemEnter:r.useCallback(e=>{ee(e)&&e.preventDefault()},[ee]),onItemLeave:r.useCallback(e=>{var t;ee(e)||(null===(t=j.current)||void 0===t||t.focus(),z(null))},[ee]),onTriggerLeave:r.useCallback(e=>{ee(e)&&e.preventDefault()},[ee]),pointerGraceTimerRef:X,onPointerGraceIntentChange:r.useCallback(e=>{Z.current=e},[]),children:(0,E.jsx)($,{...q,children:(0,E.jsx)(c.M,{asChild:!0,trapped:s,onMountAutoFocus:(0,i.M)(l,e=>{var t;e.preventDefault(),null===(t=j.current)||void 0===t||t.focus({preventScroll:!0})}),onUnmountAutoFocus:h,children:(0,E.jsx)(d.XB,{asChild:!0,disableOutsidePointerEvents:p,onEscapeKeyDown:m,onPointerDownOutside:b,onFocusOutside:y,onInteractOutside:w,onDismiss:x,children:(0,E.jsx)(v.fC,{asChild:!0,...M,dir:N.dir,orientation:"vertical",loop:o,currentTabStopId:P,onCurrentTabStopIdChange:z,onEntryFocus:(0,i.M)(g,e=>{N.isUsingKeyboardRef.current||e.preventDefault()}),preventScrollOnEntryFocus:!0,children:(0,E.jsx)(f.VY,{role:"menu","aria-orientation":"vertical","data-state":ex(L.open),"data-radix-menu-content":"",dir:N.dir,...D,...R,ref:W,style:{outline:"none",...R.style},onKeyDown:(0,i.M)(R.onKeyDown,e=>{let t=e.target.closest("[data-radix-menu-content]")===e.currentTarget,n=e.ctrlKey||e.altKey||e.metaKey,r=1===e.key.length;t&&("Tab"===e.key&&e.preventDefault(),!n&&r&&Q(e.key));let i=j.current;if(e.target!==i||!A.includes(e.key))return;e.preventDefault();let o=F().filter(e=>!e.disabled).map(e=>e.ref.current);S.includes(e.key)&&o.reverse(),function(e){let t=document.activeElement;for(let n of e)if(n===t||(n.focus(),document.activeElement!==t))return}(o)}),onBlur:(0,i.M)(e.onBlur,e=>{e.currentTarget.contains(e.target)||(window.clearTimeout(H.current),Y.current="")}),onPointerMove:(0,i.M)(e.onPointerMove,eL(e=>{let t=e.target,n=K.current!==e.clientX;if(e.currentTarget.contains(t)&&n){let t=e.clientX>K.current?"right":"left";J.current=t,K.current=e.clientX}}))})})})})})})});J.displayName=V;var Q=r.forwardRef((e,t)=>{let{__scopeMenu:n,...r}=e;return(0,E.jsx)(m.WV.div,{role:"group",...r,ref:t})});Q.displayName="MenuGroup";var ee=r.forwardRef((e,t)=>{let{__scopeMenu:n,...r}=e;return(0,E.jsx)(m.WV.div,{...r,ref:t})});ee.displayName="MenuLabel";var et="MenuItem",en="menu.itemSelect",er=r.forwardRef((e,t)=>{let{disabled:n=!1,onSelect:o,...s}=e,l=r.useRef(null),d=U(et,e.__scopeMenu),u=Z(et,e.__scopeMenu),c=(0,a.e)(t,l),h=r.useRef(!1);return(0,E.jsx)(ei,{...s,ref:c,disabled:n,onClick:(0,i.M)(e.onClick,()=>{let e=l.current;if(!n&&e){let t=new CustomEvent(en,{bubbles:!0,cancelable:!0});e.addEventListener(en,e=>null==o?void 0:o(e),{once:!0}),(0,m.jH)(e,t),t.defaultPrevented?h.current=!1:d.onClose()}}),onPointerDown:t=>{var n;null===(n=e.onPointerDown)||void 0===n||n.call(e,t),h.current=!0},onPointerUp:(0,i.M)(e.onPointerUp,e=>{var t;h.current||null===(t=e.currentTarget)||void 0===t||t.click()}),onKeyDown:(0,i.M)(e.onKeyDown,e=>{let t=""!==u.searchRef.current;!n&&(!t||" "!==e.key)&&w.includes(e.key)&&(e.currentTarget.click(),e.preventDefault())})})});er.displayName=et;var ei=r.forwardRef((e,t)=>{let{__scopeMenu:n,disabled:o=!1,textValue:s,...l}=e,d=Z(et,n),u=I(n),c=r.useRef(null),h=(0,a.e)(t,c),[f,p]=r.useState(!1),[g,_]=r.useState("");return r.useEffect(()=>{let e=c.current;if(e){var t;_((null!==(t=e.textContent)&&void 0!==t?t:"").trim())}},[l.children]),(0,E.jsx)(L.ItemSlot,{scope:n,disabled:o,textValue:null!=s?s:g,children:(0,E.jsx)(v.ck,{asChild:!0,...u,focusable:!o,children:(0,E.jsx)(m.WV.div,{role:"menuitem","data-highlighted":f?"":void 0,"aria-disabled":o||void 0,"data-disabled":o?"":void 0,...l,ref:h,onPointerMove:(0,i.M)(e.onPointerMove,eL(e=>{o?d.onItemLeave(e):(d.onItemEnter(e),e.defaultPrevented||e.currentTarget.focus({preventScroll:!0}))})),onPointerLeave:(0,i.M)(e.onPointerLeave,eL(e=>d.onItemLeave(e))),onFocus:(0,i.M)(e.onFocus,()=>p(!0)),onBlur:(0,i.M)(e.onBlur,()=>p(!1))})})})}),eo=r.forwardRef((e,t)=>{let{checked:n=!1,onCheckedChange:r,...o}=e;return(0,E.jsx)(ef,{scope:e.__scopeMenu,checked:n,children:(0,E.jsx)(er,{role:"menuitemcheckbox","aria-checked":eC(n)?"mixed":n,...o,ref:t,"data-state":eR(n),onSelect:(0,i.M)(o.onSelect,()=>null==r?void 0:r(!!eC(n)||!n),{checkForDefaultPrevented:!1})})})});eo.displayName="MenuCheckboxItem";var ea="MenuRadioGroup",[es,el]=D(ea,{value:void 0,onValueChange:()=>{}}),ed=r.forwardRef((e,t)=>{let{value:n,onValueChange:r,...i}=e,o=(0,b.W)(r);return(0,E.jsx)(es,{scope:e.__scopeMenu,value:n,onValueChange:o,children:(0,E.jsx)(Q,{...i,ref:t})})});ed.displayName=ea;var eu="MenuRadioItem",ec=r.forwardRef((e,t)=>{let{value:n,...r}=e,o=el(eu,e.__scopeMenu),a=n===o.value;return(0,E.jsx)(ef,{scope:e.__scopeMenu,checked:a,children:(0,E.jsx)(er,{role:"menuitemradio","aria-checked":a,...r,ref:t,"data-state":eR(a),onSelect:(0,i.M)(r.onSelect,()=>{var e;return null===(e=o.onValueChange)||void 0===e?void 0:e.call(o,n)},{checkForDefaultPrevented:!1})})})});ec.displayName=eu;var eh="MenuItemIndicator",[ef,ep]=D(eh,{checked:!1}),eg=r.forwardRef((e,t)=>{let{__scopeMenu:n,forceMount:r,...i}=e,o=ep(eh,n);return(0,E.jsx)(g.z,{present:r||eC(o.checked)||!0===o.checked,children:(0,E.jsx)(m.WV.span,{...i,ref:t,"data-state":eR(o.checked)})})});eg.displayName=eh;var em=r.forwardRef((e,t)=>{let{__scopeMenu:n,...r}=e;return(0,E.jsx)(m.WV.div,{role:"separator","aria-orientation":"horizontal",...r,ref:t})});em.displayName="MenuSeparator";var ev=r.forwardRef((e,t)=>{let{__scopeMenu:n,...r}=e,i=B(n);return(0,E.jsx)(f.Eh,{...i,...r,ref:t})});ev.displayName="MenuArrow";var e_="MenuSub",[eb,ey]=D(e_),eT=e=>{let{__scopeMenu:t,children:n,open:i=!1,onOpenChange:o}=e,a=k(e_,t),s=B(t),[l,d]=r.useState(null),[u,c]=r.useState(null),p=(0,b.W)(o);return r.useEffect(()=>(!1===a.open&&p(!1),()=>p(!1)),[a.open,p]),(0,E.jsx)(f.fC,{...s,children:(0,E.jsx)(F,{scope:t,open:i,onOpenChange:p,content:u,onContentChange:c,children:(0,E.jsx)(eb,{scope:t,contentId:(0,h.M)(),triggerId:(0,h.M)(),trigger:l,onTriggerChange:d,children:n})})})};eT.displayName=e_;var eE="MenuSubTrigger",ew=r.forwardRef((e,t)=>{let n=k(eE,e.__scopeMenu),o=U(eE,e.__scopeMenu),s=ey(eE,e.__scopeMenu),l=Z(eE,e.__scopeMenu),d=r.useRef(null),{pointerGraceTimerRef:u,onPointerGraceIntentChange:c}=l,h={__scopeMenu:e.__scopeMenu},f=r.useCallback(()=>{d.current&&window.clearTimeout(d.current),d.current=null},[]);return r.useEffect(()=>f,[f]),r.useEffect(()=>{let e=u.current;return()=>{window.clearTimeout(e),c(null)}},[u,c]),(0,E.jsx)(j,{asChild:!0,...h,children:(0,E.jsx)(ei,{id:s.triggerId,"aria-haspopup":"menu","aria-expanded":n.open,"aria-controls":s.contentId,"data-state":ex(n.open),...e,ref:(0,a.F)(t,s.onTriggerChange),onClick:t=>{var r;null===(r=e.onClick)||void 0===r||r.call(e,t),e.disabled||t.defaultPrevented||(t.currentTarget.focus(),n.open||n.onOpenChange(!0))},onPointerMove:(0,i.M)(e.onPointerMove,eL(t=>{l.onItemEnter(t),t.defaultPrevented||e.disabled||n.open||d.current||(l.onPointerGraceIntentChange(null),d.current=window.setTimeout(()=>{n.onOpenChange(!0),f()},100))})),onPointerLeave:(0,i.M)(e.onPointerLeave,eL(e=>{var t,r;f();let i=null===(t=n.content)||void 0===t?void 0:t.getBoundingClientRect();if(i){let t=null===(r=n.content)||void 0===r?void 0:r.dataset.side,o="right"===t,a=i[o?"left":"right"],s=i[o?"right":"left"];l.onPointerGraceIntentChange({area:[{x:e.clientX+(o?-5:5),y:e.clientY},{x:a,y:i.top},{x:s,y:i.top},{x:s,y:i.bottom},{x:a,y:i.bottom}],side:t}),window.clearTimeout(u.current),u.current=window.setTimeout(()=>l.onPointerGraceIntentChange(null),300)}else{if(l.onTriggerLeave(e),e.defaultPrevented)return;l.onPointerGraceIntentChange(null)}})),onKeyDown:(0,i.M)(e.onKeyDown,t=>{let r=""!==l.searchRef.current;if(!e.disabled&&(!r||" "!==t.key)&&x[o.dir].includes(t.key)){var i;n.onOpenChange(!0),null===(i=n.content)||void 0===i||i.focus(),t.preventDefault()}})})})});ew.displayName=eE;var eS="MenuSubContent",eA=r.forwardRef((e,t)=>{let n=Y(V,e.__scopeMenu),{forceMount:o=n.forceMount,...s}=e,l=k(V,e.__scopeMenu),d=U(V,e.__scopeMenu),u=ey(eS,e.__scopeMenu),c=r.useRef(null),h=(0,a.e)(t,c);return(0,E.jsx)(L.Provider,{scope:e.__scopeMenu,children:(0,E.jsx)(g.z,{present:o||l.open,children:(0,E.jsx)(L.Slot,{scope:e.__scopeMenu,children:(0,E.jsx)(q,{id:u.contentId,"aria-labelledby":u.triggerId,...s,ref:h,align:"start",side:"rtl"===d.dir?"left":"right",disableOutsidePointerEvents:!1,disableOutsideScroll:!1,trapFocus:!1,onOpenAutoFocus:e=>{var t;d.isUsingKeyboardRef.current&&(null===(t=c.current)||void 0===t||t.focus()),e.preventDefault()},onCloseAutoFocus:e=>e.preventDefault(),onFocusOutside:(0,i.M)(e.onFocusOutside,e=>{e.target!==u.trigger&&l.onOpenChange(!1)}),onEscapeKeyDown:(0,i.M)(e.onEscapeKeyDown,e=>{d.onClose(),e.preventDefault()}),onKeyDown:(0,i.M)(e.onKeyDown,e=>{let t=e.currentTarget.contains(e.target),n=C[d.dir].includes(e.key);if(t&&n){var r;l.onOpenChange(!1),null===(r=u.trigger)||void 0===r||r.focus(),e.preventDefault()}})})})})})});function ex(e){return e?"open":"closed"}function eC(e){return"indeterminate"===e}function eR(e){return eC(e)?"indeterminate":e?"checked":"unchecked"}function eL(e){return t=>"mouse"===t.pointerType?e(t):void 0}eA.displayName=eS;var eO=z,eN=j,eD=X,eM=J,eB=Q,eI=ee,eF=er,ek=eo,eP=ed,eU=ec,ez=eg,ej=em,eW=ev,eH=eT,eY=ew,eX=eA},60226:function(e,t,n){"use strict";n.d(t,{ee:function(){return eK},Eh:function(){return eq},VY:function(){return e$},fC:function(){return eJ},D7:function(){return eM}});var r=n(10331);let i=["top","right","bottom","left"],o=Math.min,a=Math.max,s=Math.round,l=Math.floor,d=e=>({x:e,y:e}),u={left:"right",right:"left",bottom:"top",top:"bottom"},c={start:"end",end:"start"};function h(e,t){return"function"==typeof e?e(t):e}function f(e){return e.split("-")[0]}function p(e){return e.split("-")[1]}function g(e){return"x"===e?"y":"x"}function m(e){return"y"===e?"height":"width"}function v(e){return["top","bottom"].includes(f(e))?"y":"x"}function _(e){return e.replace(/start|end/g,e=>c[e])}function b(e){return e.replace(/left|right|bottom|top/g,e=>u[e])}function y(e){return"number"!=typeof e?{top:0,right:0,bottom:0,left:0,...e}:{top:e,right:e,bottom:e,left:e}}function T(e){let{x:t,y:n,width:r,height:i}=e;return{width:r,height:i,top:n,left:t,right:t+r,bottom:n+i,x:t,y:n}}function E(e,t,n){let r,{reference:i,floating:o}=e,a=v(t),s=g(v(t)),l=m(s),d=f(t),u="y"===a,c=i.x+i.width/2-o.width/2,h=i.y+i.height/2-o.height/2,_=i[l]/2-o[l]/2;switch(d){case"top":r={x:c,y:i.y-o.height};break;case"bottom":r={x:c,y:i.y+i.height};break;case"right":r={x:i.x+i.width,y:h};break;case"left":r={x:i.x-o.width,y:h};break;default:r={x:i.x,y:i.y}}switch(p(t)){case"start":r[s]-=_*(n&&u?-1:1);break;case"end":r[s]+=_*(n&&u?-1:1)}return r}let w=async(e,t,n)=>{let{placement:r="bottom",strategy:i="absolute",middleware:o=[],platform:a}=n,s=o.filter(Boolean),l=await (null==a.isRTL?void 0:a.isRTL(t)),d=await a.getElementRects({reference:e,floating:t,strategy:i}),{x:u,y:c}=E(d,r,l),h=r,f={},p=0;for(let n=0;n<s.length;n++){let{name:o,fn:g}=s[n],{x:m,y:v,data:_,reset:b}=await g({x:u,y:c,initialPlacement:r,placement:h,strategy:i,middlewareData:f,rects:d,platform:a,elements:{reference:e,floating:t}});u=null!=m?m:u,c=null!=v?v:c,f={...f,[o]:{...f[o],..._}},b&&p<=50&&(p++,"object"==typeof b&&(b.placement&&(h=b.placement),b.rects&&(d=!0===b.rects?await a.getElementRects({reference:e,floating:t,strategy:i}):b.rects),{x:u,y:c}=E(d,h,l)),n=-1)}return{x:u,y:c,placement:h,strategy:i,middlewareData:f}};async function S(e,t){var n;void 0===t&&(t={});let{x:r,y:i,platform:o,rects:a,elements:s,strategy:l}=e,{boundary:d="clippingAncestors",rootBoundary:u="viewport",elementContext:c="floating",altBoundary:f=!1,padding:p=0}=h(t,e),g=y(p),m=s[f?"floating"===c?"reference":"floating":c],v=T(await o.getClippingRect({element:null==(n=await (null==o.isElement?void 0:o.isElement(m)))||n?m:m.contextElement||await (null==o.getDocumentElement?void 0:o.getDocumentElement(s.floating)),boundary:d,rootBoundary:u,strategy:l})),_="floating"===c?{x:r,y:i,width:a.floating.width,height:a.floating.height}:a.reference,b=await (null==o.getOffsetParent?void 0:o.getOffsetParent(s.floating)),E=await (null==o.isElement?void 0:o.isElement(b))&&await (null==o.getScale?void 0:o.getScale(b))||{x:1,y:1},w=T(o.convertOffsetParentRelativeRectToViewportRelativeRect?await o.convertOffsetParentRelativeRectToViewportRelativeRect({elements:s,rect:_,offsetParent:b,strategy:l}):_);return{top:(v.top-w.top+g.top)/E.y,bottom:(w.bottom-v.bottom+g.bottom)/E.y,left:(v.left-w.left+g.left)/E.x,right:(w.right-v.right+g.right)/E.x}}function A(e,t){return{top:e.top-t.height,right:e.right-t.width,bottom:e.bottom-t.height,left:e.left-t.width}}function x(e){return i.some(t=>e[t]>=0)}async function C(e,t){let{placement:n,platform:r,elements:i}=e,o=await (null==r.isRTL?void 0:r.isRTL(i.floating)),a=f(n),s=p(n),l="y"===v(n),d=["left","top"].includes(a)?-1:1,u=o&&l?-1:1,c=h(t,e),{mainAxis:g,crossAxis:m,alignmentAxis:_}="number"==typeof c?{mainAxis:c,crossAxis:0,alignmentAxis:null}:{mainAxis:c.mainAxis||0,crossAxis:c.crossAxis||0,alignmentAxis:c.alignmentAxis};return s&&"number"==typeof _&&(m="end"===s?-1*_:_),l?{x:m*u,y:g*d}:{x:g*d,y:m*u}}function R(){return"undefined"!=typeof window}function L(e){return D(e)?(e.nodeName||"").toLowerCase():"#document"}function O(e){var t;return(null==e||null==(t=e.ownerDocument)?void 0:t.defaultView)||window}function N(e){var t;return null==(t=(D(e)?e.ownerDocument:e.document)||window.document)?void 0:t.documentElement}function D(e){return!!R()&&(e instanceof Node||e instanceof O(e).Node)}function M(e){return!!R()&&(e instanceof Element||e instanceof O(e).Element)}function B(e){return!!R()&&(e instanceof HTMLElement||e instanceof O(e).HTMLElement)}function I(e){return!!R()&&"undefined"!=typeof ShadowRoot&&(e instanceof ShadowRoot||e instanceof O(e).ShadowRoot)}function F(e){let{overflow:t,overflowX:n,overflowY:r,display:i}=j(e);return/auto|scroll|overlay|hidden|clip/.test(t+r+n)&&!["inline","contents"].includes(i)}function k(e){return[":popover-open",":modal"].some(t=>{try{return e.matches(t)}catch(e){return!1}})}function P(e){let t=U(),n=M(e)?j(e):e;return["transform","translate","scale","rotate","perspective"].some(e=>!!n[e]&&"none"!==n[e])||!!n.containerType&&"normal"!==n.containerType||!t&&!!n.backdropFilter&&"none"!==n.backdropFilter||!t&&!!n.filter&&"none"!==n.filter||["transform","translate","scale","rotate","perspective","filter"].some(e=>(n.willChange||"").includes(e))||["paint","layout","strict","content"].some(e=>(n.contain||"").includes(e))}function U(){return"undefined"!=typeof CSS&&!!CSS.supports&&CSS.supports("-webkit-backdrop-filter","none")}function z(e){return["html","body","#document"].includes(L(e))}function j(e){return O(e).getComputedStyle(e)}function W(e){return M(e)?{scrollLeft:e.scrollLeft,scrollTop:e.scrollTop}:{scrollLeft:e.scrollX,scrollTop:e.scrollY}}function H(e){if("html"===L(e))return e;let t=e.assignedSlot||e.parentNode||I(e)&&e.host||N(e);return I(t)?t.host:t}function Y(e,t,n){var r;void 0===t&&(t=[]),void 0===n&&(n=!0);let i=function e(t){let n=H(t);return z(n)?t.ownerDocument?t.ownerDocument.body:t.body:B(n)&&F(n)?n:e(n)}(e),o=i===(null==(r=e.ownerDocument)?void 0:r.body),a=O(i);if(o){let e=X(a);return t.concat(a,a.visualViewport||[],F(i)?i:[],e&&n?Y(e):[])}return t.concat(i,Y(i,[],n))}function X(e){return e.parent&&Object.getPrototypeOf(e.parent)?e.frameElement:null}function V(e){let t=j(e),n=parseFloat(t.width)||0,r=parseFloat(t.height)||0,i=B(e),o=i?e.offsetWidth:n,a=i?e.offsetHeight:r,l=s(n)!==o||s(r)!==a;return l&&(n=o,r=a),{width:n,height:r,$:l}}function G(e){return M(e)?e:e.contextElement}function Z(e){let t=G(e);if(!B(t))return d(1);let n=t.getBoundingClientRect(),{width:r,height:i,$:o}=V(t),a=(o?s(n.width):n.width)/r,l=(o?s(n.height):n.height)/i;return a&&Number.isFinite(a)||(a=1),l&&Number.isFinite(l)||(l=1),{x:a,y:l}}let J=d(0);function K(e){let t=O(e);return U()&&t.visualViewport?{x:t.visualViewport.offsetLeft,y:t.visualViewport.offsetTop}:J}function $(e,t,n,r){var i;void 0===t&&(t=!1),void 0===n&&(n=!1);let o=e.getBoundingClientRect(),a=G(e),s=d(1);t&&(r?M(r)&&(s=Z(r)):s=Z(e));let l=(void 0===(i=n)&&(i=!1),r&&(!i||r===O(a))&&i)?K(a):d(0),u=(o.left+l.x)/s.x,c=(o.top+l.y)/s.y,h=o.width/s.x,f=o.height/s.y;if(a){let e=O(a),t=r&&M(r)?O(r):r,n=e,i=X(n);for(;i&&r&&t!==n;){let e=Z(i),t=i.getBoundingClientRect(),r=j(i),o=t.left+(i.clientLeft+parseFloat(r.paddingLeft))*e.x,a=t.top+(i.clientTop+parseFloat(r.paddingTop))*e.y;u*=e.x,c*=e.y,h*=e.x,f*=e.y,u+=o,c+=a,i=X(n=O(i))}}return T({width:h,height:f,x:u,y:c})}function q(e,t){let n=W(e).scrollLeft;return t?t.left+n:$(N(e)).left+n}function Q(e,t,n){void 0===n&&(n=!1);let r=e.getBoundingClientRect();return{x:r.left+t.scrollLeft-(n?0:q(e,r)),y:r.top+t.scrollTop}}function ee(e,t,n){let r;if("viewport"===t)r=function(e,t){let n=O(e),r=N(e),i=n.visualViewport,o=r.clientWidth,a=r.clientHeight,s=0,l=0;if(i){o=i.width,a=i.height;let e=U();(!e||e&&"fixed"===t)&&(s=i.offsetLeft,l=i.offsetTop)}return{width:o,height:a,x:s,y:l}}(e,n);else if("document"===t)r=function(e){let t=N(e),n=W(e),r=e.ownerDocument.body,i=a(t.scrollWidth,t.clientWidth,r.scrollWidth,r.clientWidth),o=a(t.scrollHeight,t.clientHeight,r.scrollHeight,r.clientHeight),s=-n.scrollLeft+q(e),l=-n.scrollTop;return"rtl"===j(r).direction&&(s+=a(t.clientWidth,r.clientWidth)-i),{width:i,height:o,x:s,y:l}}(N(e));else if(M(t))r=function(e,t){let n=$(e,!0,"fixed"===t),r=n.top+e.clientTop,i=n.left+e.clientLeft,o=B(e)?Z(e):d(1),a=e.clientWidth*o.x;return{width:a,height:e.clientHeight*o.y,x:i*o.x,y:r*o.y}}(t,n);else{let n=K(e);r={x:t.x-n.x,y:t.y-n.y,width:t.width,height:t.height}}return T(r)}function et(e){return"static"===j(e).position}function en(e,t){if(!B(e)||"fixed"===j(e).position)return null;if(t)return t(e);let n=e.offsetParent;return N(e)===n&&(n=n.ownerDocument.body),n}function er(e,t){let n=O(e);if(k(e))return n;if(!B(e)){let t=H(e);for(;t&&!z(t);){if(M(t)&&!et(t))return t;t=H(t)}return n}let r=en(e,t);for(;r&&["table","td","th"].includes(L(r))&&et(r);)r=en(r,t);return r&&z(r)&&et(r)&&!P(r)?n:r||function(e){let t=H(e);for(;B(t)&&!z(t);){if(P(t))return t;if(k(t))break;t=H(t)}return null}(e)||n}let ei=async function(e){let t=this.getOffsetParent||er,n=this.getDimensions,r=await n(e.floating);return{reference:function(e,t,n){let r=B(t),i=N(t),o="fixed"===n,a=$(e,!0,o,t),s={scrollLeft:0,scrollTop:0},l=d(0);if(r||!r&&!o){if(("body"!==L(t)||F(i))&&(s=W(t)),r){let e=$(t,!0,o,t);l.x=e.x+t.clientLeft,l.y=e.y+t.clientTop}else i&&(l.x=q(i))}let u=!i||r||o?d(0):Q(i,s);return{x:a.left+s.scrollLeft-l.x-u.x,y:a.top+s.scrollTop-l.y-u.y,width:a.width,height:a.height}}(e.reference,await t(e.floating),e.strategy),floating:{x:0,y:0,width:r.width,height:r.height}}},eo={convertOffsetParentRelativeRectToViewportRelativeRect:function(e){let{elements:t,rect:n,offsetParent:r,strategy:i}=e,o="fixed"===i,a=N(r),s=!!t&&k(t.floating);if(r===a||s&&o)return n;let l={scrollLeft:0,scrollTop:0},u=d(1),c=d(0),h=B(r);if((h||!h&&!o)&&(("body"!==L(r)||F(a))&&(l=W(r)),B(r))){let e=$(r);u=Z(r),c.x=e.x+r.clientLeft,c.y=e.y+r.clientTop}let f=!a||h||o?d(0):Q(a,l,!0);return{width:n.width*u.x,height:n.height*u.y,x:n.x*u.x-l.scrollLeft*u.x+c.x+f.x,y:n.y*u.y-l.scrollTop*u.y+c.y+f.y}},getDocumentElement:N,getClippingRect:function(e){let{element:t,boundary:n,rootBoundary:r,strategy:i}=e,s=[..."clippingAncestors"===n?k(t)?[]:function(e,t){let n=t.get(e);if(n)return n;let r=Y(e,[],!1).filter(e=>M(e)&&"body"!==L(e)),i=null,o="fixed"===j(e).position,a=o?H(e):e;for(;M(a)&&!z(a);){let t=j(a),n=P(a);n||"fixed"!==t.position||(i=null),(o?!n&&!i:!n&&"static"===t.position&&!!i&&["absolute","fixed"].includes(i.position)||F(a)&&!n&&function e(t,n){let r=H(t);return!(r===n||!M(r)||z(r))&&("fixed"===j(r).position||e(r,n))}(e,a))?r=r.filter(e=>e!==a):i=t,a=H(a)}return t.set(e,r),r}(t,this._c):[].concat(n),r],l=s[0],d=s.reduce((e,n)=>{let r=ee(t,n,i);return e.top=a(r.top,e.top),e.right=o(r.right,e.right),e.bottom=o(r.bottom,e.bottom),e.left=a(r.left,e.left),e},ee(t,l,i));return{width:d.right-d.left,height:d.bottom-d.top,x:d.left,y:d.top}},getOffsetParent:er,getElementRects:ei,getClientRects:function(e){return Array.from(e.getClientRects())},getDimensions:function(e){let{width:t,height:n}=V(e);return{width:t,height:n}},getScale:Z,isElement:M,isRTL:function(e){return"rtl"===j(e).direction}};function ea(e,t){return e.x===t.x&&e.y===t.y&&e.width===t.width&&e.height===t.height}let es=e=>({name:"arrow",options:e,async fn(t){let{x:n,y:r,placement:i,rects:s,platform:l,elements:d,middlewareData:u}=t,{element:c,padding:f=0}=h(e,t)||{};if(null==c)return{};let _=y(f),b={x:n,y:r},T=g(v(i)),E=m(T),w=await l.getDimensions(c),S="y"===T,A=S?"clientHeight":"clientWidth",x=s.reference[E]+s.reference[T]-b[T]-s.floating[E],C=b[T]-s.reference[T],R=await (null==l.getOffsetParent?void 0:l.getOffsetParent(c)),L=R?R[A]:0;L&&await (null==l.isElement?void 0:l.isElement(R))||(L=d.floating[A]||s.floating[E]);let O=L/2-w[E]/2-1,N=o(_[S?"top":"left"],O),D=o(_[S?"bottom":"right"],O),M=L-w[E]-D,B=L/2-w[E]/2+(x/2-C/2),I=a(N,o(B,M)),F=!u.arrow&&null!=p(i)&&B!==I&&s.reference[E]/2-(B<N?N:D)-w[E]/2<0,k=F?B<N?B-N:B-M:0;return{[T]:b[T]+k,data:{[T]:I,centerOffset:B-I-k,...F&&{alignmentOffset:k}},reset:F}}}),el=(e,t,n)=>{let r=new Map,i={platform:eo,...n},o={...i.platform,_c:r};return w(e,t,{...i,platform:o})};var ed=n(59261),eu="undefined"!=typeof document?r.useLayoutEffect:r.useEffect;function ec(e,t){let n,r,i;if(e===t)return!0;if(typeof e!=typeof t)return!1;if("function"==typeof e&&e.toString()===t.toString())return!0;if(e&&t&&"object"==typeof e){if(Array.isArray(e)){if((n=e.length)!==t.length)return!1;for(r=n;0!=r--;)if(!ec(e[r],t[r]))return!1;return!0}if((n=(i=Object.keys(e)).length)!==Object.keys(t).length)return!1;for(r=n;0!=r--;)if(!({}).hasOwnProperty.call(t,i[r]))return!1;for(r=n;0!=r--;){let n=i[r];if(("_owner"!==n||!e.$$typeof)&&!ec(e[n],t[n]))return!1}return!0}return e!=e&&t!=t}function eh(e){return"undefined"==typeof window?1:(e.ownerDocument.defaultView||window).devicePixelRatio||1}function ef(e,t){let n=eh(e);return Math.round(t*n)/n}function ep(e){let t=r.useRef(e);return eu(()=>{t.current=e}),t}let eg=e=>({name:"arrow",options:e,fn(t){let{element:n,padding:r}="function"==typeof e?e(t):e;return n&&({}).hasOwnProperty.call(n,"current")?null!=n.current?es({element:n.current,padding:r}).fn(t):{}:n?es({element:n,padding:r}).fn(t):{}}}),em=(e,t)=>{var n;return{...(void 0===(n=e)&&(n=0),{name:"offset",options:n,async fn(e){var t,r;let{x:i,y:o,placement:a,middlewareData:s}=e,l=await C(e,n);return a===(null==(t=s.offset)?void 0:t.placement)&&null!=(r=s.arrow)&&r.alignmentOffset?{}:{x:i+l.x,y:o+l.y,data:{...l,placement:a}}}}),options:[e,t]}},ev=(e,t)=>{var n;return{...(void 0===(n=e)&&(n={}),{name:"shift",options:n,async fn(e){let{x:t,y:r,placement:i}=e,{mainAxis:s=!0,crossAxis:l=!1,limiter:d={fn:e=>{let{x:t,y:n}=e;return{x:t,y:n}}},...u}=h(n,e),c={x:t,y:r},p=await S(e,u),m=v(f(i)),_=g(m),b=c[_],y=c[m];if(s){let e="y"===_?"top":"left",t="y"===_?"bottom":"right",n=b+p[e],r=b-p[t];b=a(n,o(b,r))}if(l){let e="y"===m?"top":"left",t="y"===m?"bottom":"right",n=y+p[e],r=y-p[t];y=a(n,o(y,r))}let T=d.fn({...e,[_]:b,[m]:y});return{...T,data:{x:T.x-t,y:T.y-r,enabled:{[_]:s,[m]:l}}}}}),options:[e,t]}},e_=(e,t)=>{var n;return{...(void 0===(n=e)&&(n={}),{options:n,fn(e){let{x:t,y:r,placement:i,rects:o,middlewareData:a}=e,{offset:s=0,mainAxis:l=!0,crossAxis:d=!0}=h(n,e),u={x:t,y:r},c=v(i),p=g(c),m=u[p],_=u[c],b=h(s,e),y="number"==typeof b?{mainAxis:b,crossAxis:0}:{mainAxis:0,crossAxis:0,...b};if(l){let e="y"===p?"height":"width",t=o.reference[p]-o.floating[e]+y.mainAxis,n=o.reference[p]+o.reference[e]-y.mainAxis;m<t?m=t:m>n&&(m=n)}if(d){var T,E;let e="y"===p?"width":"height",t=["top","left"].includes(f(i)),n=o.reference[c]-o.floating[e]+(t&&(null==(T=a.offset)?void 0:T[c])||0)+(t?0:y.crossAxis),r=o.reference[c]+o.reference[e]+(t?0:(null==(E=a.offset)?void 0:E[c])||0)-(t?y.crossAxis:0);_<n?_=n:_>r&&(_=r)}return{[p]:m,[c]:_}}}),options:[e,t]}},eb=(e,t)=>{var n;return{...(void 0===(n=e)&&(n={}),{name:"flip",options:n,async fn(e){var t,r,i,o,a;let{placement:s,middlewareData:l,rects:d,initialPlacement:u,platform:c,elements:y}=e,{mainAxis:T=!0,crossAxis:E=!0,fallbackPlacements:w,fallbackStrategy:A="bestFit",fallbackAxisSideDirection:x="none",flipAlignment:C=!0,...R}=h(n,e);if(null!=(t=l.arrow)&&t.alignmentOffset)return{};let L=f(s),O=v(u),N=f(u)===u,D=await (null==c.isRTL?void 0:c.isRTL(y.floating)),M=w||(N||!C?[b(u)]:function(e){let t=b(e);return[_(e),t,_(t)]}(u)),B="none"!==x;!w&&B&&M.push(...function(e,t,n,r){let i=p(e),o=function(e,t,n){let r=["left","right"],i=["right","left"];switch(e){case"top":case"bottom":if(n)return t?i:r;return t?r:i;case"left":case"right":return t?["top","bottom"]:["bottom","top"];default:return[]}}(f(e),"start"===n,r);return i&&(o=o.map(e=>e+"-"+i),t&&(o=o.concat(o.map(_)))),o}(u,C,x,D));let I=[u,...M],F=await S(e,R),k=[],P=(null==(r=l.flip)?void 0:r.overflows)||[];if(T&&k.push(F[L]),E){let e=function(e,t,n){void 0===n&&(n=!1);let r=p(e),i=g(v(e)),o=m(i),a="x"===i?r===(n?"end":"start")?"right":"left":"start"===r?"bottom":"top";return t.reference[o]>t.floating[o]&&(a=b(a)),[a,b(a)]}(s,d,D);k.push(F[e[0]],F[e[1]])}if(P=[...P,{placement:s,overflows:k}],!k.every(e=>e<=0)){let e=((null==(i=l.flip)?void 0:i.index)||0)+1,t=I[e];if(t)return{data:{index:e,overflows:P},reset:{placement:t}};let n=null==(o=P.filter(e=>e.overflows[0]<=0).sort((e,t)=>e.overflows[1]-t.overflows[1])[0])?void 0:o.placement;if(!n)switch(A){case"bestFit":{let e=null==(a=P.filter(e=>{if(B){let t=v(e.placement);return t===O||"y"===t}return!0}).map(e=>[e.placement,e.overflows.filter(e=>e>0).reduce((e,t)=>e+t,0)]).sort((e,t)=>e[1]-t[1])[0])?void 0:a[0];e&&(n=e);break}case"initialPlacement":n=u}if(s!==n)return{reset:{placement:n}}}return{}}}),options:[e,t]}},ey=(e,t)=>{var n;return{...(void 0===(n=e)&&(n={}),{name:"size",options:n,async fn(e){var t,r;let i,s;let{placement:l,rects:d,platform:u,elements:c}=e,{apply:g=()=>{},...m}=h(n,e),_=await S(e,m),b=f(l),y=p(l),T="y"===v(l),{width:E,height:w}=d.floating;"top"===b||"bottom"===b?(i=b,s=y===(await (null==u.isRTL?void 0:u.isRTL(c.floating))?"start":"end")?"left":"right"):(s=b,i="end"===y?"top":"bottom");let A=w-_.top-_.bottom,x=E-_.left-_.right,C=o(w-_[i],A),R=o(E-_[s],x),L=!e.middlewareData.shift,O=C,N=R;if(null!=(t=e.middlewareData.shift)&&t.enabled.x&&(N=x),null!=(r=e.middlewareData.shift)&&r.enabled.y&&(O=A),L&&!y){let e=a(_.left,0),t=a(_.right,0),n=a(_.top,0),r=a(_.bottom,0);T?N=E-2*(0!==e||0!==t?e+t:a(_.left,_.right)):O=w-2*(0!==n||0!==r?n+r:a(_.top,_.bottom))}await g({...e,availableWidth:N,availableHeight:O});let D=await u.getDimensions(c.floating);return E!==D.width||w!==D.height?{reset:{rects:!0}}:{}}}),options:[e,t]}},eT=(e,t)=>{var n;return{...(void 0===(n=e)&&(n={}),{name:"hide",options:n,async fn(e){let{rects:t}=e,{strategy:r="referenceHidden",...i}=h(n,e);switch(r){case"referenceHidden":{let n=A(await S(e,{...i,elementContext:"reference"}),t.reference);return{data:{referenceHiddenOffsets:n,referenceHidden:x(n)}}}case"escaped":{let n=A(await S(e,{...i,altBoundary:!0}),t.floating);return{data:{escapedOffsets:n,escaped:x(n)}}}default:return{}}}}),options:[e,t]}},eE=(e,t)=>({...eg(e),options:[e,t]});var ew=n(70943),eS=n(46499),eA=r.forwardRef((e,t)=>{let{children:n,width:r=10,height:i=5,...o}=e;return(0,eS.jsx)(ew.WV.svg,{...o,ref:t,width:r,height:i,viewBox:"0 0 30 10",preserveAspectRatio:"none",children:e.asChild?n:(0,eS.jsx)("polygon",{points:"0,0 30,0 15,10"})})});eA.displayName="Arrow";var ex=n(30057),eC=n(78722),eR=n(81556),eL=n(20686),eO=n(98162),eN="Popper",[eD,eM]=(0,eC.b)(eN),[eB,eI]=eD(eN),eF=e=>{let{__scopePopper:t,children:n}=e,[i,o]=r.useState(null);return(0,eS.jsx)(eB,{scope:t,anchor:i,onAnchorChange:o,children:n})};eF.displayName=eN;var ek="PopperAnchor",eP=r.forwardRef((e,t)=>{let{__scopePopper:n,virtualRef:i,...o}=e,a=eI(ek,n),s=r.useRef(null),l=(0,ex.e)(t,s);return r.useEffect(()=>{a.onAnchorChange((null==i?void 0:i.current)||s.current)}),i?null:(0,eS.jsx)(ew.WV.div,{...o,ref:l})});eP.displayName=ek;var eU="PopperContent",[ez,ej]=eD(eU),eW=r.forwardRef((e,t)=>{var n,i,s,d,u,c,h,f;let{__scopePopper:p,side:g="bottom",sideOffset:m=0,align:v="center",alignOffset:_=0,arrowPadding:b=0,avoidCollisions:y=!0,collisionBoundary:T=[],collisionPadding:E=0,sticky:w="partial",hideWhenDetached:S=!1,updatePositionStrategy:A="optimized",onPlaced:x,...C}=e,R=eI(eU,p),[L,O]=r.useState(null),D=(0,ex.e)(t,e=>O(e)),[M,B]=r.useState(null),I=(0,eO.t)(M),F=null!==(h=null==I?void 0:I.width)&&void 0!==h?h:0,k=null!==(f=null==I?void 0:I.height)&&void 0!==f?f:0,P="number"==typeof E?E:{top:0,right:0,bottom:0,left:0,...E},U=Array.isArray(T)?T:[T],z=U.length>0,j={padding:P,boundary:U.filter(eV),altBoundary:z},{refs:W,floatingStyles:H,placement:X,isPositioned:V,middlewareData:Z}=function(e){void 0===e&&(e={});let{placement:t="bottom",strategy:n="absolute",middleware:i=[],platform:o,elements:{reference:a,floating:s}={},transform:l=!0,whileElementsMounted:d,open:u}=e,[c,h]=r.useState({x:0,y:0,strategy:n,placement:t,middlewareData:{},isPositioned:!1}),[f,p]=r.useState(i);ec(f,i)||p(i);let[g,m]=r.useState(null),[v,_]=r.useState(null),b=r.useCallback(e=>{e!==w.current&&(w.current=e,m(e))},[]),y=r.useCallback(e=>{e!==S.current&&(S.current=e,_(e))},[]),T=a||g,E=s||v,w=r.useRef(null),S=r.useRef(null),A=r.useRef(c),x=null!=d,C=ep(d),R=ep(o),L=ep(u),O=r.useCallback(()=>{if(!w.current||!S.current)return;let e={placement:t,strategy:n,middleware:f};R.current&&(e.platform=R.current),el(w.current,S.current,e).then(e=>{let t={...e,isPositioned:!1!==L.current};N.current&&!ec(A.current,t)&&(A.current=t,ed.flushSync(()=>{h(t)}))})},[f,t,n,R,L]);eu(()=>{!1===u&&A.current.isPositioned&&(A.current.isPositioned=!1,h(e=>({...e,isPositioned:!1})))},[u]);let N=r.useRef(!1);eu(()=>(N.current=!0,()=>{N.current=!1}),[]),eu(()=>{if(T&&(w.current=T),E&&(S.current=E),T&&E){if(C.current)return C.current(T,E,O);O()}},[T,E,O,C,x]);let D=r.useMemo(()=>({reference:w,floating:S,setReference:b,setFloating:y}),[b,y]),M=r.useMemo(()=>({reference:T,floating:E}),[T,E]),B=r.useMemo(()=>{let e={position:n,left:0,top:0};if(!M.floating)return e;let t=ef(M.floating,c.x),r=ef(M.floating,c.y);return l?{...e,transform:"translate("+t+"px, "+r+"px)",...eh(M.floating)>=1.5&&{willChange:"transform"}}:{position:n,left:t,top:r}},[n,l,M.floating,c.x,c.y]);return r.useMemo(()=>({...c,update:O,refs:D,elements:M,floatingStyles:B}),[c,O,D,M,B])}({strategy:"fixed",placement:g+("center"!==v?"-"+v:""),whileElementsMounted:function(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];return function(e,t,n,r){let i;void 0===r&&(r={});let{ancestorScroll:s=!0,ancestorResize:d=!0,elementResize:u="function"==typeof ResizeObserver,layoutShift:c="function"==typeof IntersectionObserver,animationFrame:h=!1}=r,f=G(e),p=s||d?[...f?Y(f):[],...Y(t)]:[];p.forEach(e=>{s&&e.addEventListener("scroll",n,{passive:!0}),d&&e.addEventListener("resize",n)});let g=f&&c?function(e,t){let n,r=null,i=N(e);function s(){var e;clearTimeout(n),null==(e=r)||e.disconnect(),r=null}return!function d(u,c){void 0===u&&(u=!1),void 0===c&&(c=1),s();let h=e.getBoundingClientRect(),{left:f,top:p,width:g,height:m}=h;if(u||t(),!g||!m)return;let v=l(p),_=l(i.clientWidth-(f+g)),b={rootMargin:-v+"px "+-_+"px "+-l(i.clientHeight-(p+m))+"px "+-l(f)+"px",threshold:a(0,o(1,c))||1},y=!0;function T(t){let r=t[0].intersectionRatio;if(r!==c){if(!y)return d();r?d(!1,r):n=setTimeout(()=>{d(!1,1e-7)},1e3)}1!==r||ea(h,e.getBoundingClientRect())||d(),y=!1}try{r=new IntersectionObserver(T,{...b,root:i.ownerDocument})}catch(e){r=new IntersectionObserver(T,b)}r.observe(e)}(!0),s}(f,n):null,m=-1,v=null;u&&(v=new ResizeObserver(e=>{let[r]=e;r&&r.target===f&&v&&(v.unobserve(t),cancelAnimationFrame(m),m=requestAnimationFrame(()=>{var e;null==(e=v)||e.observe(t)})),n()}),f&&!h&&v.observe(f),v.observe(t));let _=h?$(e):null;return h&&function t(){let r=$(e);_&&!ea(_,r)&&n(),_=r,i=requestAnimationFrame(t)}(),n(),()=>{var e;p.forEach(e=>{s&&e.removeEventListener("scroll",n),d&&e.removeEventListener("resize",n)}),null==g||g(),null==(e=v)||e.disconnect(),v=null,h&&cancelAnimationFrame(i)}}(...t,{animationFrame:"always"===A})},elements:{reference:R.anchor},middleware:[em({mainAxis:m+k,alignmentAxis:_}),y&&ev({mainAxis:!0,crossAxis:!1,limiter:"partial"===w?e_():void 0,...j}),y&&eb({...j}),ey({...j,apply:e=>{let{elements:t,rects:n,availableWidth:r,availableHeight:i}=e,{width:o,height:a}=n.reference,s=t.floating.style;s.setProperty("--radix-popper-available-width","".concat(r,"px")),s.setProperty("--radix-popper-available-height","".concat(i,"px")),s.setProperty("--radix-popper-anchor-width","".concat(o,"px")),s.setProperty("--radix-popper-anchor-height","".concat(a,"px"))}}),M&&eE({element:M,padding:b}),eG({arrowWidth:F,arrowHeight:k}),S&&eT({strategy:"referenceHidden",...j})]}),[J,K]=eZ(X),q=(0,eR.W)(x);(0,eL.b)(()=>{V&&(null==q||q())},[V,q]);let Q=null===(n=Z.arrow)||void 0===n?void 0:n.x,ee=null===(i=Z.arrow)||void 0===i?void 0:i.y,et=(null===(s=Z.arrow)||void 0===s?void 0:s.centerOffset)!==0,[en,er]=r.useState();return(0,eL.b)(()=>{L&&er(window.getComputedStyle(L).zIndex)},[L]),(0,eS.jsx)("div",{ref:W.setFloating,"data-radix-popper-content-wrapper":"",style:{...H,transform:V?H.transform:"translate(0, -200%)",minWidth:"max-content",zIndex:en,"--radix-popper-transform-origin":[null===(d=Z.transformOrigin)||void 0===d?void 0:d.x,null===(u=Z.transformOrigin)||void 0===u?void 0:u.y].join(" "),...(null===(c=Z.hide)||void 0===c?void 0:c.referenceHidden)&&{visibility:"hidden",pointerEvents:"none"}},dir:e.dir,children:(0,eS.jsx)(ez,{scope:p,placedSide:J,onArrowChange:B,arrowX:Q,arrowY:ee,shouldHideArrow:et,children:(0,eS.jsx)(ew.WV.div,{"data-side":J,"data-align":K,...C,ref:D,style:{...C.style,animation:V?void 0:"none"}})})})});eW.displayName=eU;var eH="PopperArrow",eY={top:"bottom",right:"left",bottom:"top",left:"right"},eX=r.forwardRef(function(e,t){let{__scopePopper:n,...r}=e,i=ej(eH,n),o=eY[i.placedSide];return(0,eS.jsx)("span",{ref:i.onArrowChange,style:{position:"absolute",left:i.arrowX,top:i.arrowY,[o]:0,transformOrigin:{top:"",right:"0 0",bottom:"center 0",left:"100% 0"}[i.placedSide],transform:{top:"translateY(100%)",right:"translateY(50%) rotate(90deg) translateX(-50%)",bottom:"rotate(180deg)",left:"translateY(50%) rotate(-90deg) translateX(50%)"}[i.placedSide],visibility:i.shouldHideArrow?"hidden":void 0},children:(0,eS.jsx)(eA,{...r,ref:t,style:{...r.style,display:"block"}})})});function eV(e){return null!==e}eX.displayName=eH;var eG=e=>({name:"transformOrigin",options:e,fn(t){var n,r,i,o,a;let{placement:s,rects:l,middlewareData:d}=t,u=(null===(n=d.arrow)||void 0===n?void 0:n.centerOffset)!==0,c=u?0:e.arrowWidth,h=u?0:e.arrowHeight,[f,p]=eZ(s),g={start:"0%",center:"50%",end:"100%"}[p],m=(null!==(o=null===(r=d.arrow)||void 0===r?void 0:r.x)&&void 0!==o?o:0)+c/2,v=(null!==(a=null===(i=d.arrow)||void 0===i?void 0:i.y)&&void 0!==a?a:0)+h/2,_="",b="";return"bottom"===f?(_=u?g:"".concat(m,"px"),b="".concat(-h,"px")):"top"===f?(_=u?g:"".concat(m,"px"),b="".concat(l.floating.height+h,"px")):"right"===f?(_="".concat(-h,"px"),b=u?g:"".concat(v,"px")):"left"===f&&(_="".concat(l.floating.width+h,"px"),b=u?g:"".concat(v,"px")),{data:{x:_,y:b}}}});function eZ(e){let[t,n="center"]=e.split("-");return[t,n]}var eJ=eF,eK=eP,e$=eW,eq=eX},65558:function(e,t,n){"use strict";n.d(t,{h:function(){return l}});var r=n(10331),i=n(59261),o=n(70943),a=n(20686),s=n(46499),l=r.forwardRef((e,t)=>{var n,l;let{container:d,...u}=e,[c,h]=r.useState(!1);(0,a.b)(()=>h(!0),[]);let f=d||c&&(null===(l=globalThis)||void 0===l?void 0:null===(n=l.document)||void 0===n?void 0:n.body);return f?i.createPortal((0,s.jsx)(o.WV.div,{...u,ref:t}),f):null});l.displayName="Portal"},7143:function(e,t,n){"use strict";n.d(t,{z:function(){return a}});var r=n(10331),i=n(30057),o=n(20686),a=e=>{var t,n;let a,l;let{present:d,children:u}=e,c=function(e){var t,n;let[i,a]=r.useState(),l=r.useRef({}),d=r.useRef(e),u=r.useRef("none"),[c,h]=(t=e?"mounted":"unmounted",n={mounted:{UNMOUNT:"unmounted",ANIMATION_OUT:"unmountSuspended"},unmountSuspended:{MOUNT:"mounted",ANIMATION_END:"unmounted"},unmounted:{MOUNT:"mounted"}},r.useReducer((e,t)=>{let r=n[e][t];return null!=r?r:e},t));return r.useEffect(()=>{let e=s(l.current);u.current="mounted"===c?e:"none"},[c]),(0,o.b)(()=>{let t=l.current,n=d.current;if(n!==e){let r=u.current,i=s(t);e?h("MOUNT"):"none"===i||(null==t?void 0:t.display)==="none"?h("UNMOUNT"):n&&r!==i?h("ANIMATION_OUT"):h("UNMOUNT"),d.current=e}},[e,h]),(0,o.b)(()=>{if(i){var e;let t;let n=null!==(e=i.ownerDocument.defaultView)&&void 0!==e?e:window,r=e=>{let r=s(l.current).includes(e.animationName);if(e.target===i&&r&&(h("ANIMATION_END"),!d.current)){let e=i.style.animationFillMode;i.style.animationFillMode="forwards",t=n.setTimeout(()=>{"forwards"===i.style.animationFillMode&&(i.style.animationFillMode=e)})}},o=e=>{e.target===i&&(u.current=s(l.current))};return i.addEventListener("animationstart",o),i.addEventListener("animationcancel",r),i.addEventListener("animationend",r),()=>{n.clearTimeout(t),i.removeEventListener("animationstart",o),i.removeEventListener("animationcancel",r),i.removeEventListener("animationend",r)}}h("ANIMATION_END")},[i,h]),{isPresent:["mounted","unmountSuspended"].includes(c),ref:r.useCallback(e=>{e&&(l.current=getComputedStyle(e)),a(e)},[])}}(d),h="function"==typeof u?u({present:c.isPresent}):r.Children.only(u),f=(0,i.e)(c.ref,(a=null===(t=Object.getOwnPropertyDescriptor(h.props,"ref"))||void 0===t?void 0:t.get)&&"isReactWarning"in a&&a.isReactWarning?h.ref:(a=null===(n=Object.getOwnPropertyDescriptor(h,"ref"))||void 0===n?void 0:n.get)&&"isReactWarning"in a&&a.isReactWarning?h.props.ref:h.props.ref||h.ref);return"function"==typeof u||c.isPresent?r.cloneElement(h,{ref:f}):null};function s(e){return(null==e?void 0:e.animationName)||"none"}a.displayName="Presence"},70943:function(e,t,n){"use strict";n.d(t,{WV:function(){return s},jH:function(){return l}});var r=n(10331),i=n(59261),o=n(63677),a=n(46499),s=["a","button","div","form","h2","h3","img","input","label","li","nav","ol","p","span","svg","ul"].reduce((e,t)=>{let n=r.forwardRef((e,n)=>{let{asChild:r,...i}=e,s=r?o.g7:t;return"undefined"!=typeof window&&(window[Symbol.for("radix-ui")]=!0),(0,a.jsx)(s,{...i,ref:n})});return n.displayName=`Primitive.${t}`,{...e,[t]:n}},{});function l(e,t){e&&i.flushSync(()=>e.dispatchEvent(t))}},19133:function(e,t,n){"use strict";n.d(t,{WV:function(){return a}});var r=n(10331);n(59261);var i=n(20956),o=n(46499),a=["a","button","div","form","h2","h3","img","input","label","li","nav","ol","p","span","svg","ul"].reduce((e,t)=>{let n=r.forwardRef((e,n)=>{let{asChild:r,...a}=e,s=r?i.g7:t;return"undefined"!=typeof window&&(window[Symbol.for("radix-ui")]=!0),(0,o.jsx)(s,{...a,ref:n})});return n.displayName=`Primitive.${t}`,{...e,[t]:n}},{})},91740:function(e,t,n){"use strict";n.d(t,{Pc:function(){return T},ck:function(){return N},fC:function(){return O}});var r=n(10331),i=n(5857),o=n(53333),a=n(30057),s=n(78722),l=n(63440),d=n(70943),u=n(81556),c=n(64316),h=n(36052),f=n(46499),p="rovingFocusGroup.onEntryFocus",g={bubbles:!1,cancelable:!0},m="RovingFocusGroup",[v,_,b]=(0,o.B)(m),[y,T]=(0,s.b)(m,[b]),[E,w]=y(m),S=r.forwardRef((e,t)=>(0,f.jsx)(v.Provider,{scope:e.__scopeRovingFocusGroup,children:(0,f.jsx)(v.Slot,{scope:e.__scopeRovingFocusGroup,children:(0,f.jsx)(A,{...e,ref:t})})}));S.displayName=m;var A=r.forwardRef((e,t)=>{let{__scopeRovingFocusGroup:n,orientation:o,loop:s=!1,dir:l,currentTabStopId:m,defaultCurrentTabStopId:v,onCurrentTabStopIdChange:b,onEntryFocus:y,preventScrollOnEntryFocus:T=!1,...w}=e,S=r.useRef(null),A=(0,a.e)(t,S),x=(0,h.gm)(l),[C=null,R]=(0,c.T)({prop:m,defaultProp:v,onChange:b}),[O,N]=r.useState(!1),D=(0,u.W)(y),M=_(n),B=r.useRef(!1),[I,F]=r.useState(0);return r.useEffect(()=>{let e=S.current;if(e)return e.addEventListener(p,D),()=>e.removeEventListener(p,D)},[D]),(0,f.jsx)(E,{scope:n,orientation:o,dir:x,loop:s,currentTabStopId:C,onItemFocus:r.useCallback(e=>R(e),[R]),onItemShiftTab:r.useCallback(()=>N(!0),[]),onFocusableItemAdd:r.useCallback(()=>F(e=>e+1),[]),onFocusableItemRemove:r.useCallback(()=>F(e=>e-1),[]),children:(0,f.jsx)(d.WV.div,{tabIndex:O||0===I?-1:0,"data-orientation":o,...w,ref:A,style:{outline:"none",...e.style},onMouseDown:(0,i.M)(e.onMouseDown,()=>{B.current=!0}),onFocus:(0,i.M)(e.onFocus,e=>{let t=!B.current;if(e.target===e.currentTarget&&t&&!O){let t=new CustomEvent(p,g);if(e.currentTarget.dispatchEvent(t),!t.defaultPrevented){let e=M().filter(e=>e.focusable);L([e.find(e=>e.active),e.find(e=>e.id===C),...e].filter(Boolean).map(e=>e.ref.current),T)}}B.current=!1}),onBlur:(0,i.M)(e.onBlur,()=>N(!1))})})}),x="RovingFocusGroupItem",C=r.forwardRef((e,t)=>{let{__scopeRovingFocusGroup:n,focusable:o=!0,active:a=!1,tabStopId:s,...u}=e,c=(0,l.M)(),h=s||c,p=w(x,n),g=p.currentTabStopId===h,m=_(n),{onFocusableItemAdd:b,onFocusableItemRemove:y}=p;return r.useEffect(()=>{if(o)return b(),()=>y()},[o,b,y]),(0,f.jsx)(v.ItemSlot,{scope:n,id:h,focusable:o,active:a,children:(0,f.jsx)(d.WV.span,{tabIndex:g?0:-1,"data-orientation":p.orientation,...u,ref:t,onMouseDown:(0,i.M)(e.onMouseDown,e=>{o?p.onItemFocus(h):e.preventDefault()}),onFocus:(0,i.M)(e.onFocus,()=>p.onItemFocus(h)),onKeyDown:(0,i.M)(e.onKeyDown,e=>{if("Tab"===e.key&&e.shiftKey){p.onItemShiftTab();return}if(e.target!==e.currentTarget)return;let t=function(e,t,n){var r;let i=(r=e.key,"rtl"!==n?r:"ArrowLeft"===r?"ArrowRight":"ArrowRight"===r?"ArrowLeft":r);if(!("vertical"===t&&["ArrowLeft","ArrowRight"].includes(i))&&!("horizontal"===t&&["ArrowUp","ArrowDown"].includes(i)))return R[i]}(e,p.orientation,p.dir);if(void 0!==t){if(e.metaKey||e.ctrlKey||e.altKey||e.shiftKey)return;e.preventDefault();let i=m().filter(e=>e.focusable).map(e=>e.ref.current);if("last"===t)i.reverse();else if("prev"===t||"next"===t){var n,r;"prev"===t&&i.reverse();let o=i.indexOf(e.currentTarget);i=p.loop?(n=i,r=o+1,n.map((e,t)=>n[(r+t)%n.length])):i.slice(o+1)}setTimeout(()=>L(i))}})})})});C.displayName=x;var R={ArrowLeft:"prev",ArrowUp:"prev",ArrowRight:"next",ArrowDown:"next",PageUp:"first",Home:"first",PageDown:"last",End:"last"};function L(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=document.activeElement;for(let r of e)if(r===n||(r.focus({preventScroll:t}),document.activeElement!==n))return}var O=S,N=C},24140:function(e,t,n){"use strict";n.d(t,{VY:function(){return eB},ZA:function(){return eF},JO:function(){return eD},ck:function(){return eP},wU:function(){return ez},eT:function(){return eU},__:function(){return ek},h_:function(){return eM},fC:function(){return eL},$G:function(){return eW},u_:function(){return ej},Z0:function(){return eH},xz:function(){return eO},B4:function(){return eN},l_:function(){return eI}});var r=n(10331),i=n(59261);function o(e,[t,n]){return Math.min(n,Math.max(t,e))}var a=n(5857),s=n(53333),l=n(30057),d=n(78722),u=n(36052),c=n(31414),h=n(93468),f=n(40199),p=n(63440),g=n(60226),m=n(65558),v=n(70943),_=n(63677),b=n(81556),y=n(64316),T=n(20686),E=n(11086),w=n(59506),S=n(29443),A=n(14833),x=n(46499),C=[" ","Enter","ArrowUp","ArrowDown"],R=[" ","Enter"],L="Select",[O,N,D]=(0,s.B)(L),[M,B]=(0,d.b)(L,[D,g.D7]),I=(0,g.D7)(),[F,k]=M(L),[P,U]=M(L),z=e=>{let{__scopeSelect:t,children:n,open:i,defaultOpen:o,onOpenChange:a,value:s,defaultValue:l,onValueChange:d,dir:c,name:h,autoComplete:f,disabled:m,required:v,form:_}=e,b=I(t),[T,E]=r.useState(null),[w,S]=r.useState(null),[A,C]=r.useState(!1),R=(0,u.gm)(c),[L=!1,N]=(0,y.T)({prop:i,defaultProp:o,onChange:a}),[D,M]=(0,y.T)({prop:s,defaultProp:l,onChange:d}),B=r.useRef(null),k=!T||_||!!T.closest("form"),[U,z]=r.useState(new Set),j=Array.from(U).map(e=>e.props.value).join(";");return(0,x.jsx)(g.fC,{...b,children:(0,x.jsxs)(F,{required:v,scope:t,trigger:T,onTriggerChange:E,valueNode:w,onValueNodeChange:S,valueNodeHasChildren:A,onValueNodeHasChildrenChange:C,contentId:(0,p.M)(),value:D,onValueChange:M,open:L,onOpenChange:N,dir:R,triggerPointerDownPosRef:B,disabled:m,children:[(0,x.jsx)(O.Provider,{scope:t,children:(0,x.jsx)(P,{scope:e.__scopeSelect,onNativeOptionAdd:r.useCallback(e=>{z(t=>new Set(t).add(e))},[]),onNativeOptionRemove:r.useCallback(e=>{z(t=>{let n=new Set(t);return n.delete(e),n})},[]),children:n})}),k?(0,x.jsxs)(ex,{"aria-hidden":!0,required:v,tabIndex:-1,name:h,autoComplete:f,value:D,onChange:e=>M(e.target.value),disabled:m,form:_,children:[void 0===D?(0,x.jsx)("option",{value:""}):null,Array.from(U)]},j):null]})})};z.displayName=L;var j="SelectTrigger",W=r.forwardRef((e,t)=>{let{__scopeSelect:n,disabled:i=!1,...o}=e,s=I(n),d=k(j,n),u=d.disabled||i,c=(0,l.e)(t,d.onTriggerChange),h=N(n),f=r.useRef("touch"),[p,m,_]=eC(e=>{let t=h().filter(e=>!e.disabled),n=t.find(e=>e.value===d.value),r=eR(t,e,n);void 0!==r&&d.onValueChange(r.value)}),b=e=>{u||(d.onOpenChange(!0),_()),e&&(d.triggerPointerDownPosRef.current={x:Math.round(e.pageX),y:Math.round(e.pageY)})};return(0,x.jsx)(g.ee,{asChild:!0,...s,children:(0,x.jsx)(v.WV.button,{type:"button",role:"combobox","aria-controls":d.contentId,"aria-expanded":d.open,"aria-required":d.required,"aria-autocomplete":"none",dir:d.dir,"data-state":d.open?"open":"closed",disabled:u,"data-disabled":u?"":void 0,"data-placeholder":eA(d.value)?"":void 0,...o,ref:c,onClick:(0,a.M)(o.onClick,e=>{e.currentTarget.focus(),"mouse"!==f.current&&b(e)}),onPointerDown:(0,a.M)(o.onPointerDown,e=>{f.current=e.pointerType;let t=e.target;t.hasPointerCapture(e.pointerId)&&t.releasePointerCapture(e.pointerId),0===e.button&&!1===e.ctrlKey&&"mouse"===e.pointerType&&(b(e),e.preventDefault())}),onKeyDown:(0,a.M)(o.onKeyDown,e=>{let t=""!==p.current;e.ctrlKey||e.altKey||e.metaKey||1!==e.key.length||m(e.key),(!t||" "!==e.key)&&C.includes(e.key)&&(b(),e.preventDefault())})})})});W.displayName=j;var H="SelectValue",Y=r.forwardRef((e,t)=>{let{__scopeSelect:n,className:r,style:i,children:o,placeholder:a="",...s}=e,d=k(H,n),{onValueNodeHasChildrenChange:u}=d,c=void 0!==o,h=(0,l.e)(t,d.onValueNodeChange);return(0,T.b)(()=>{u(c)},[u,c]),(0,x.jsx)(v.WV.span,{...s,ref:h,style:{pointerEvents:"none"},children:eA(d.value)?(0,x.jsx)(x.Fragment,{children:a}):o})});Y.displayName=H;var X=r.forwardRef((e,t)=>{let{__scopeSelect:n,children:r,...i}=e;return(0,x.jsx)(v.WV.span,{"aria-hidden":!0,...i,ref:t,children:r||"▼"})});X.displayName="SelectIcon";var V=e=>(0,x.jsx)(m.h,{asChild:!0,...e});V.displayName="SelectPortal";var G="SelectContent",Z=r.forwardRef((e,t)=>{let n=k(G,e.__scopeSelect),[o,a]=r.useState();return((0,T.b)(()=>{a(new DocumentFragment)},[]),n.open)?(0,x.jsx)($,{...e,ref:t}):o?i.createPortal((0,x.jsx)(J,{scope:e.__scopeSelect,children:(0,x.jsx)(O.Slot,{scope:e.__scopeSelect,children:(0,x.jsx)("div",{children:e.children})})}),o):null});Z.displayName=G;var[J,K]=M(G),$=r.forwardRef((e,t)=>{let{__scopeSelect:n,position:i="item-aligned",onCloseAutoFocus:o,onEscapeKeyDown:s,onPointerDownOutside:d,side:u,sideOffset:p,align:g,alignOffset:m,arrowPadding:v,collisionBoundary:b,collisionPadding:y,sticky:T,hideWhenDetached:E,avoidCollisions:w,...C}=e,R=k(G,n),[L,O]=r.useState(null),[D,M]=r.useState(null),B=(0,l.e)(t,e=>O(e)),[I,F]=r.useState(null),[P,U]=r.useState(null),z=N(n),[j,W]=r.useState(!1),H=r.useRef(!1);r.useEffect(()=>{if(L)return(0,S.Ry)(L)},[L]),(0,h.EW)();let Y=r.useCallback(e=>{let[t,...n]=z().map(e=>e.ref.current),[r]=n.slice(-1),i=document.activeElement;for(let n of e)if(n===i||(null==n||n.scrollIntoView({block:"nearest"}),n===t&&D&&(D.scrollTop=0),n===r&&D&&(D.scrollTop=D.scrollHeight),null==n||n.focus(),document.activeElement!==i))return},[z,D]),X=r.useCallback(()=>Y([I,L]),[Y,I,L]);r.useEffect(()=>{j&&X()},[j,X]);let{onOpenChange:V,triggerPointerDownPosRef:Z}=R;r.useEffect(()=>{if(L){let e={x:0,y:0},t=t=>{var n,r,i,o;e={x:Math.abs(Math.round(t.pageX)-(null!==(i=null===(n=Z.current)||void 0===n?void 0:n.x)&&void 0!==i?i:0)),y:Math.abs(Math.round(t.pageY)-(null!==(o=null===(r=Z.current)||void 0===r?void 0:r.y)&&void 0!==o?o:0))}},n=n=>{e.x<=10&&e.y<=10?n.preventDefault():L.contains(n.target)||V(!1),document.removeEventListener("pointermove",t),Z.current=null};return null!==Z.current&&(document.addEventListener("pointermove",t),document.addEventListener("pointerup",n,{capture:!0,once:!0})),()=>{document.removeEventListener("pointermove",t),document.removeEventListener("pointerup",n,{capture:!0})}}},[L,V,Z]),r.useEffect(()=>{let e=()=>V(!1);return window.addEventListener("blur",e),window.addEventListener("resize",e),()=>{window.removeEventListener("blur",e),window.removeEventListener("resize",e)}},[V]);let[K,$]=eC(e=>{let t=z().filter(e=>!e.disabled),n=t.find(e=>e.ref.current===document.activeElement),r=eR(t,e,n);r&&setTimeout(()=>r.ref.current.focus())}),ee=r.useCallback((e,t,n)=>{let r=!H.current&&!n;(void 0!==R.value&&R.value===t||r)&&(F(e),r&&(H.current=!0))},[R.value]),et=r.useCallback(()=>null==L?void 0:L.focus(),[L]),en=r.useCallback((e,t,n)=>{let r=!H.current&&!n;(void 0!==R.value&&R.value===t||r)&&U(e)},[R.value]),er="popper"===i?Q:q,ei=er===Q?{side:u,sideOffset:p,align:g,alignOffset:m,arrowPadding:v,collisionBoundary:b,collisionPadding:y,sticky:T,hideWhenDetached:E,avoidCollisions:w}:{};return(0,x.jsx)(J,{scope:n,content:L,viewport:D,onViewportChange:M,itemRefCallback:ee,selectedItem:I,onItemLeave:et,itemTextRefCallback:en,focusSelectedItem:X,selectedItemText:P,position:i,isPositioned:j,searchRef:K,children:(0,x.jsx)(A.Z,{as:_.g7,allowPinchZoom:!0,children:(0,x.jsx)(f.M,{asChild:!0,trapped:R.open,onMountAutoFocus:e=>{e.preventDefault()},onUnmountAutoFocus:(0,a.M)(o,e=>{var t;null===(t=R.trigger)||void 0===t||t.focus({preventScroll:!0}),e.preventDefault()}),children:(0,x.jsx)(c.XB,{asChild:!0,disableOutsidePointerEvents:!0,onEscapeKeyDown:s,onPointerDownOutside:d,onFocusOutside:e=>e.preventDefault(),onDismiss:()=>R.onOpenChange(!1),children:(0,x.jsx)(er,{role:"listbox",id:R.contentId,"data-state":R.open?"open":"closed",dir:R.dir,onContextMenu:e=>e.preventDefault(),...C,...ei,onPlaced:()=>W(!0),ref:B,style:{display:"flex",flexDirection:"column",outline:"none",...C.style},onKeyDown:(0,a.M)(C.onKeyDown,e=>{let t=e.ctrlKey||e.altKey||e.metaKey;if("Tab"===e.key&&e.preventDefault(),t||1!==e.key.length||$(e.key),["ArrowUp","ArrowDown","Home","End"].includes(e.key)){let t=z().filter(e=>!e.disabled).map(e=>e.ref.current);if(["ArrowUp","End"].includes(e.key)&&(t=t.slice().reverse()),["ArrowUp","ArrowDown"].includes(e.key)){let n=e.target,r=t.indexOf(n);t=t.slice(r+1)}setTimeout(()=>Y(t)),e.preventDefault()}})})})})})})});$.displayName="SelectContentImpl";var q=r.forwardRef((e,t)=>{let{__scopeSelect:n,onPlaced:i,...a}=e,s=k(G,n),d=K(G,n),[u,c]=r.useState(null),[h,f]=r.useState(null),p=(0,l.e)(t,e=>f(e)),g=N(n),m=r.useRef(!1),_=r.useRef(!0),{viewport:b,selectedItem:y,selectedItemText:E,focusSelectedItem:w}=d,S=r.useCallback(()=>{if(s.trigger&&s.valueNode&&u&&h&&b&&y&&E){let e=s.trigger.getBoundingClientRect(),t=h.getBoundingClientRect(),n=s.valueNode.getBoundingClientRect(),r=E.getBoundingClientRect();if("rtl"!==s.dir){let i=r.left-t.left,a=n.left-i,s=e.left-a,l=e.width+s,d=Math.max(l,t.width),c=o(a,[10,Math.max(10,window.innerWidth-10-d)]);u.style.minWidth=l+"px",u.style.left=c+"px"}else{let i=t.right-r.right,a=window.innerWidth-n.right-i,s=window.innerWidth-e.right-a,l=e.width+s,d=Math.max(l,t.width),c=o(a,[10,Math.max(10,window.innerWidth-10-d)]);u.style.minWidth=l+"px",u.style.right=c+"px"}let a=g(),l=window.innerHeight-20,d=b.scrollHeight,c=window.getComputedStyle(h),f=parseInt(c.borderTopWidth,10),p=parseInt(c.paddingTop,10),v=parseInt(c.borderBottomWidth,10),_=f+p+d+parseInt(c.paddingBottom,10)+v,T=Math.min(5*y.offsetHeight,_),w=window.getComputedStyle(b),S=parseInt(w.paddingTop,10),A=parseInt(w.paddingBottom,10),x=e.top+e.height/2-10,C=y.offsetHeight/2,R=f+p+(y.offsetTop+C);if(R<=x){let e=a.length>0&&y===a[a.length-1].ref.current;u.style.bottom="0px";let t=h.clientHeight-b.offsetTop-b.offsetHeight;u.style.height=R+Math.max(l-x,C+(e?A:0)+t+v)+"px"}else{let e=a.length>0&&y===a[0].ref.current;u.style.top="0px";let t=Math.max(x,f+b.offsetTop+(e?S:0)+C);u.style.height=t+(_-R)+"px",b.scrollTop=R-x+b.offsetTop}u.style.margin="".concat(10,"px 0"),u.style.minHeight=T+"px",u.style.maxHeight=l+"px",null==i||i(),requestAnimationFrame(()=>m.current=!0)}},[g,s.trigger,s.valueNode,u,h,b,y,E,s.dir,i]);(0,T.b)(()=>S(),[S]);let[A,C]=r.useState();(0,T.b)(()=>{h&&C(window.getComputedStyle(h).zIndex)},[h]);let R=r.useCallback(e=>{e&&!0===_.current&&(S(),null==w||w(),_.current=!1)},[S,w]);return(0,x.jsx)(ee,{scope:n,contentWrapper:u,shouldExpandOnScrollRef:m,onScrollButtonChange:R,children:(0,x.jsx)("div",{ref:c,style:{display:"flex",flexDirection:"column",position:"fixed",zIndex:A},children:(0,x.jsx)(v.WV.div,{...a,ref:p,style:{boxSizing:"border-box",maxHeight:"100%",...a.style}})})})});q.displayName="SelectItemAlignedPosition";var Q=r.forwardRef((e,t)=>{let{__scopeSelect:n,align:r="start",collisionPadding:i=10,...o}=e,a=I(n);return(0,x.jsx)(g.VY,{...a,...o,ref:t,align:r,collisionPadding:i,style:{boxSizing:"border-box",...o.style,"--radix-select-content-transform-origin":"var(--radix-popper-transform-origin)","--radix-select-content-available-width":"var(--radix-popper-available-width)","--radix-select-content-available-height":"var(--radix-popper-available-height)","--radix-select-trigger-width":"var(--radix-popper-anchor-width)","--radix-select-trigger-height":"var(--radix-popper-anchor-height)"}})});Q.displayName="SelectPopperPosition";var[ee,et]=M(G,{}),en="SelectViewport",er=r.forwardRef((e,t)=>{let{__scopeSelect:n,nonce:i,...o}=e,s=K(en,n),d=et(en,n),u=(0,l.e)(t,s.onViewportChange),c=r.useRef(0);return(0,x.jsxs)(x.Fragment,{children:[(0,x.jsx)("style",{dangerouslySetInnerHTML:{__html:"[data-radix-select-viewport]{scrollbar-width:none;-ms-overflow-style:none;-webkit-overflow-scrolling:touch;}[data-radix-select-viewport]::-webkit-scrollbar{display:none}"},nonce:i}),(0,x.jsx)(O.Slot,{scope:n,children:(0,x.jsx)(v.WV.div,{"data-radix-select-viewport":"",role:"presentation",...o,ref:u,style:{position:"relative",flex:1,overflow:"hidden auto",...o.style},onScroll:(0,a.M)(o.onScroll,e=>{let t=e.currentTarget,{contentWrapper:n,shouldExpandOnScrollRef:r}=d;if((null==r?void 0:r.current)&&n){let e=Math.abs(c.current-t.scrollTop);if(e>0){let r=window.innerHeight-20,i=Math.max(parseFloat(n.style.minHeight),parseFloat(n.style.height));if(i<r){let o=i+e,a=Math.min(r,o),s=o-a;n.style.height=a+"px","0px"===n.style.bottom&&(t.scrollTop=s>0?s:0,n.style.justifyContent="flex-end")}}}c.current=t.scrollTop})})})]})});er.displayName=en;var ei="SelectGroup",[eo,ea]=M(ei),es=r.forwardRef((e,t)=>{let{__scopeSelect:n,...r}=e,i=(0,p.M)();return(0,x.jsx)(eo,{scope:n,id:i,children:(0,x.jsx)(v.WV.div,{role:"group","aria-labelledby":i,...r,ref:t})})});es.displayName=ei;var el="SelectLabel",ed=r.forwardRef((e,t)=>{let{__scopeSelect:n,...r}=e,i=ea(el,n);return(0,x.jsx)(v.WV.div,{id:i.id,...r,ref:t})});ed.displayName=el;var eu="SelectItem",[ec,eh]=M(eu),ef=r.forwardRef((e,t)=>{let{__scopeSelect:n,value:i,disabled:o=!1,textValue:s,...d}=e,u=k(eu,n),c=K(eu,n),h=u.value===i,[f,g]=r.useState(null!=s?s:""),[m,_]=r.useState(!1),b=(0,l.e)(t,e=>{var t;return null===(t=c.itemRefCallback)||void 0===t?void 0:t.call(c,e,i,o)}),y=(0,p.M)(),T=r.useRef("touch"),E=()=>{o||(u.onValueChange(i),u.onOpenChange(!1))};if(""===i)throw Error("A <Select.Item /> must have a value prop that is not an empty string. This is because the Select value can be set to an empty string to clear the selection and show the placeholder.");return(0,x.jsx)(ec,{scope:n,value:i,disabled:o,textId:y,isSelected:h,onItemTextChange:r.useCallback(e=>{g(t=>{var n;return t||(null!==(n=null==e?void 0:e.textContent)&&void 0!==n?n:"").trim()})},[]),children:(0,x.jsx)(O.ItemSlot,{scope:n,value:i,disabled:o,textValue:f,children:(0,x.jsx)(v.WV.div,{role:"option","aria-labelledby":y,"data-highlighted":m?"":void 0,"aria-selected":h&&m,"data-state":h?"checked":"unchecked","aria-disabled":o||void 0,"data-disabled":o?"":void 0,tabIndex:o?void 0:-1,...d,ref:b,onFocus:(0,a.M)(d.onFocus,()=>_(!0)),onBlur:(0,a.M)(d.onBlur,()=>_(!1)),onClick:(0,a.M)(d.onClick,()=>{"mouse"!==T.current&&E()}),onPointerUp:(0,a.M)(d.onPointerUp,()=>{"mouse"===T.current&&E()}),onPointerDown:(0,a.M)(d.onPointerDown,e=>{T.current=e.pointerType}),onPointerMove:(0,a.M)(d.onPointerMove,e=>{if(T.current=e.pointerType,o){var t;null===(t=c.onItemLeave)||void 0===t||t.call(c)}else"mouse"===T.current&&e.currentTarget.focus({preventScroll:!0})}),onPointerLeave:(0,a.M)(d.onPointerLeave,e=>{if(e.currentTarget===document.activeElement){var t;null===(t=c.onItemLeave)||void 0===t||t.call(c)}}),onKeyDown:(0,a.M)(d.onKeyDown,e=>{var t;(null===(t=c.searchRef)||void 0===t?void 0:t.current)!==""&&" "===e.key||(R.includes(e.key)&&E()," "===e.key&&e.preventDefault())})})})})});ef.displayName=eu;var ep="SelectItemText",eg=r.forwardRef((e,t)=>{let{__scopeSelect:n,className:o,style:a,...s}=e,d=k(ep,n),u=K(ep,n),c=eh(ep,n),h=U(ep,n),[f,p]=r.useState(null),g=(0,l.e)(t,e=>p(e),c.onItemTextChange,e=>{var t;return null===(t=u.itemTextRefCallback)||void 0===t?void 0:t.call(u,e,c.value,c.disabled)}),m=null==f?void 0:f.textContent,_=r.useMemo(()=>(0,x.jsx)("option",{value:c.value,disabled:c.disabled,children:m},c.value),[c.disabled,c.value,m]),{onNativeOptionAdd:b,onNativeOptionRemove:y}=h;return(0,T.b)(()=>(b(_),()=>y(_)),[b,y,_]),(0,x.jsxs)(x.Fragment,{children:[(0,x.jsx)(v.WV.span,{id:c.textId,...s,ref:g}),c.isSelected&&d.valueNode&&!d.valueNodeHasChildren?i.createPortal(s.children,d.valueNode):null]})});eg.displayName=ep;var em="SelectItemIndicator",ev=r.forwardRef((e,t)=>{let{__scopeSelect:n,...r}=e;return eh(em,n).isSelected?(0,x.jsx)(v.WV.span,{"aria-hidden":!0,...r,ref:t}):null});ev.displayName=em;var e_="SelectScrollUpButton",eb=r.forwardRef((e,t)=>{let n=K(e_,e.__scopeSelect),i=et(e_,e.__scopeSelect),[o,a]=r.useState(!1),s=(0,l.e)(t,i.onScrollButtonChange);return(0,T.b)(()=>{if(n.viewport&&n.isPositioned){let e=function(){a(t.scrollTop>0)},t=n.viewport;return e(),t.addEventListener("scroll",e),()=>t.removeEventListener("scroll",e)}},[n.viewport,n.isPositioned]),o?(0,x.jsx)(eE,{...e,ref:s,onAutoScroll:()=>{let{viewport:e,selectedItem:t}=n;e&&t&&(e.scrollTop=e.scrollTop-t.offsetHeight)}}):null});eb.displayName=e_;var ey="SelectScrollDownButton",eT=r.forwardRef((e,t)=>{let n=K(ey,e.__scopeSelect),i=et(ey,e.__scopeSelect),[o,a]=r.useState(!1),s=(0,l.e)(t,i.onScrollButtonChange);return(0,T.b)(()=>{if(n.viewport&&n.isPositioned){let e=function(){let e=t.scrollHeight-t.clientHeight;a(Math.ceil(t.scrollTop)<e)},t=n.viewport;return e(),t.addEventListener("scroll",e),()=>t.removeEventListener("scroll",e)}},[n.viewport,n.isPositioned]),o?(0,x.jsx)(eE,{...e,ref:s,onAutoScroll:()=>{let{viewport:e,selectedItem:t}=n;e&&t&&(e.scrollTop=e.scrollTop+t.offsetHeight)}}):null});eT.displayName=ey;var eE=r.forwardRef((e,t)=>{let{__scopeSelect:n,onAutoScroll:i,...o}=e,s=K("SelectScrollButton",n),l=r.useRef(null),d=N(n),u=r.useCallback(()=>{null!==l.current&&(window.clearInterval(l.current),l.current=null)},[]);return r.useEffect(()=>()=>u(),[u]),(0,T.b)(()=>{var e;let t=d().find(e=>e.ref.current===document.activeElement);null==t||null===(e=t.ref.current)||void 0===e||e.scrollIntoView({block:"nearest"})},[d]),(0,x.jsx)(v.WV.div,{"aria-hidden":!0,...o,ref:t,style:{flexShrink:0,...o.style},onPointerDown:(0,a.M)(o.onPointerDown,()=>{null===l.current&&(l.current=window.setInterval(i,50))}),onPointerMove:(0,a.M)(o.onPointerMove,()=>{var e;null===(e=s.onItemLeave)||void 0===e||e.call(s),null===l.current&&(l.current=window.setInterval(i,50))}),onPointerLeave:(0,a.M)(o.onPointerLeave,()=>{u()})})}),ew=r.forwardRef((e,t)=>{let{__scopeSelect:n,...r}=e;return(0,x.jsx)(v.WV.div,{"aria-hidden":!0,...r,ref:t})});ew.displayName="SelectSeparator";var eS="SelectArrow";function eA(e){return""===e||void 0===e}r.forwardRef((e,t)=>{let{__scopeSelect:n,...r}=e,i=I(n),o=k(eS,n),a=K(eS,n);return o.open&&"popper"===a.position?(0,x.jsx)(g.Eh,{...i,...r,ref:t}):null}).displayName=eS;var ex=r.forwardRef((e,t)=>{let{value:n,...i}=e,o=r.useRef(null),a=(0,l.e)(t,o),s=(0,E.D)(n);return r.useEffect(()=>{let e=o.current,t=Object.getOwnPropertyDescriptor(window.HTMLSelectElement.prototype,"value").set;if(s!==n&&t){let r=new Event("change",{bubbles:!0});t.call(e,n),e.dispatchEvent(r)}},[s,n]),(0,x.jsx)(w.T,{asChild:!0,children:(0,x.jsx)("select",{...i,ref:a,defaultValue:n})})});function eC(e){let t=(0,b.W)(e),n=r.useRef(""),i=r.useRef(0),o=r.useCallback(e=>{let r=n.current+e;t(r),function e(t){n.current=t,window.clearTimeout(i.current),""!==t&&(i.current=window.setTimeout(()=>e(""),1e3))}(r)},[t]),a=r.useCallback(()=>{n.current="",window.clearTimeout(i.current)},[]);return r.useEffect(()=>()=>window.clearTimeout(i.current),[]),[n,o,a]}function eR(e,t,n){var r;let i=t.length>1&&Array.from(t).every(e=>e===t[0])?t[0]:t,o=(r=Math.max(n?e.indexOf(n):-1,0),e.map((t,n)=>e[(r+n)%e.length]));1===i.length&&(o=o.filter(e=>e!==n));let a=o.find(e=>e.textValue.toLowerCase().startsWith(i.toLowerCase()));return a!==n?a:void 0}ex.displayName="BubbleSelect";var eL=z,eO=W,eN=Y,eD=X,eM=V,eB=Z,eI=er,eF=es,ek=ed,eP=ef,eU=eg,ez=ev,ej=eb,eW=eT,eH=ew},63677:function(e,t,n){"use strict";n.d(t,{A4:function(){return l},g7:function(){return a}});var r=n(10331),i=n(30057),o=n(46499),a=r.forwardRef((e,t)=>{let{children:n,...i}=e,a=r.Children.toArray(n),l=a.find(d);if(l){let e=l.props.children,n=a.map(t=>t!==l?t:r.Children.count(e)>1?r.Children.only(null):r.isValidElement(e)?e.props.children:null);return(0,o.jsx)(s,{...i,ref:t,children:r.isValidElement(e)?r.cloneElement(e,void 0,n):null})}return(0,o.jsx)(s,{...i,ref:t,children:n})});a.displayName="Slot";var s=r.forwardRef((e,t)=>{let{children:n,...o}=e;if(r.isValidElement(n)){let e,a;let s=(e=Object.getOwnPropertyDescriptor(n.props,"ref")?.get)&&"isReactWarning"in e&&e.isReactWarning?n.ref:(e=Object.getOwnPropertyDescriptor(n,"ref")?.get)&&"isReactWarning"in e&&e.isReactWarning?n.props.ref:n.props.ref||n.ref;return r.cloneElement(n,{...function(e,t){let n={...t};for(let r in t){let i=e[r],o=t[r];/^on[A-Z]/.test(r)?i&&o?n[r]=(...e)=>{o(...e),i(...e)}:i&&(n[r]=i):"style"===r?n[r]={...i,...o}:"className"===r&&(n[r]=[i,o].filter(Boolean).join(" "))}return{...e,...n}}(o,n.props),ref:t?(0,i.F)(t,s):s})}return r.Children.count(n)>1?r.Children.only(null):null});s.displayName="SlotClone";var l=({children:e})=>(0,o.jsx)(o.Fragment,{children:e});function d(e){return r.isValidElement(e)&&e.type===l}},20956:function(e,t,n){"use strict";n.d(t,{g7:function(){return a}});var r=n(10331),i=n(30057),o=n(46499),a=r.forwardRef((e,t)=>{let{children:n,...i}=e,a=r.Children.toArray(n),l=a.find(d);if(l){let e=l.props.children,n=a.map(t=>t!==l?t:r.Children.count(e)>1?r.Children.only(null):r.isValidElement(e)?e.props.children:null);return(0,o.jsx)(s,{...i,ref:t,children:r.isValidElement(e)?r.cloneElement(e,void 0,n):null})}return(0,o.jsx)(s,{...i,ref:t,children:n})});a.displayName="Slot";var s=r.forwardRef((e,t)=>{let{children:n,...o}=e;if(r.isValidElement(n)){let e,a;let s=(e=Object.getOwnPropertyDescriptor(n.props,"ref")?.get)&&"isReactWarning"in e&&e.isReactWarning?n.ref:(e=Object.getOwnPropertyDescriptor(n,"ref")?.get)&&"isReactWarning"in e&&e.isReactWarning?n.props.ref:n.props.ref||n.ref,l=function(e,t){let n={...t};for(let r in t){let i=e[r],o=t[r];/^on[A-Z]/.test(r)?i&&o?n[r]=(...e)=>{o(...e),i(...e)}:i&&(n[r]=i):"style"===r?n[r]={...i,...o}:"className"===r&&(n[r]=[i,o].filter(Boolean).join(" "))}return{...e,...n}}(o,n.props);return n.type!==r.Fragment&&(l.ref=t?(0,i.F)(t,s):s),r.cloneElement(n,l)}return r.Children.count(n)>1?r.Children.only(null):null});s.displayName="SlotClone";var l=({children:e})=>(0,o.jsx)(o.Fragment,{children:e});function d(e){return r.isValidElement(e)&&e.type===l}},81556:function(e,t,n){"use strict";n.d(t,{W:function(){return i}});var r=n(10331);function i(e){let t=r.useRef(e);return r.useEffect(()=>{t.current=e}),r.useMemo(()=>(...e)=>t.current?.(...e),[])}},64316:function(e,t,n){"use strict";n.d(t,{T:function(){return o}});var r=n(10331),i=n(81556);function o({prop:e,defaultProp:t,onChange:n=()=>{}}){let[o,a]=function({defaultProp:e,onChange:t}){let n=r.useState(e),[o]=n,a=r.useRef(o),s=(0,i.W)(t);return r.useEffect(()=>{a.current!==o&&(s(o),a.current=o)},[o,a,s]),n}({defaultProp:t,onChange:n}),s=void 0!==e,l=s?e:o,d=(0,i.W)(n);return[l,r.useCallback(t=>{if(s){let n="function"==typeof t?t(e):t;n!==e&&d(n)}else a(t)},[s,e,a,d])]}},20686:function(e,t,n){"use strict";n.d(t,{b:function(){return i}});var r=n(10331),i=globalThis?.document?r.useLayoutEffect:()=>{}},11086:function(e,t,n){"use strict";n.d(t,{D:function(){return i}});var r=n(10331);function i(e){let t=r.useRef({value:e,previous:e});return r.useMemo(()=>(t.current.value!==e&&(t.current.previous=t.current.value,t.current.value=e),t.current.previous),[e])}},98162:function(e,t,n){"use strict";n.d(t,{t:function(){return o}});var r=n(10331),i=n(20686);function o(e){let[t,n]=r.useState(void 0);return(0,i.b)(()=>{if(e){n({width:e.offsetWidth,height:e.offsetHeight});let t=new ResizeObserver(t=>{let r,i;if(!Array.isArray(t)||!t.length)return;let o=t[0];if("borderBoxSize"in o){let e=o.borderBoxSize,t=Array.isArray(e)?e[0]:e;r=t.inlineSize,i=t.blockSize}else r=e.offsetWidth,i=e.offsetHeight;n({width:r,height:i})});return t.observe(e,{box:"border-box"}),()=>t.unobserve(e)}n(void 0)},[e]),t}},59506:function(e,t,n){"use strict";n.d(t,{T:function(){return a},f:function(){return s}});var r=n(10331),i=n(70943),o=n(46499),a=r.forwardRef((e,t)=>(0,o.jsx)(i.WV.span,{...e,ref:t,style:{position:"absolute",border:0,width:1,height:1,padding:0,margin:-1,overflow:"hidden",clip:"rect(0, 0, 0, 0)",whiteSpace:"nowrap",wordWrap:"normal",...e.style}}));a.displayName="VisuallyHidden";var s=a},96579:function(e,t,n){"use strict";n.d(t,{j:function(){return a}});var r=n(26327);let i=e=>"boolean"==typeof e?`${e}`:0===e?"0":e,o=r.W,a=(e,t)=>n=>{var r;if((null==t?void 0:t.variants)==null)return o(e,null==n?void 0:n.class,null==n?void 0:n.className);let{variants:a,defaultVariants:s}=t,l=Object.keys(a).map(e=>{let t=null==n?void 0:n[e],r=null==s?void 0:s[e];if(null===t)return null;let o=i(t)||i(r);return a[e][o]}),d=n&&Object.entries(n).reduce((e,t)=>{let[n,r]=t;return void 0===r||(e[n]=r),e},{});return o(e,l,null==t?void 0:null===(r=t.compoundVariants)||void 0===r?void 0:r.reduce((e,t)=>{let{class:n,className:r,...i}=t;return Object.entries(i).every(e=>{let[t,n]=e;return Array.isArray(n)?n.includes({...s,...d}[t]):({...s,...d})[t]===n})?[...e,n,r]:e},[]),null==n?void 0:n.class,null==n?void 0:n.className)}},31259:function(e,t,n){"use strict";n.d(t,{F:function(){return u},f:function(){return c}});var r=n(10331),i=(e,t,n,r,i,o,a,s)=>{let l=document.documentElement,d=["light","dark"];function u(t){(Array.isArray(e)?e:[e]).forEach(e=>{let n="class"===e,r=n&&o?i.map(e=>o[e]||e):i;n?(l.classList.remove(...r),l.classList.add(t)):l.setAttribute(e,t)}),s&&d.includes(t)&&(l.style.colorScheme=t)}if(r)u(r);else try{let e=localStorage.getItem(t)||n,r=a&&"system"===e?window.matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light":e;u(r)}catch(e){}},o=["light","dark"],a="(prefers-color-scheme: dark)",s="undefined"==typeof window,l=r.createContext(void 0),d={setTheme:e=>{},themes:[]},u=()=>{var e;return null!=(e=r.useContext(l))?e:d},c=e=>r.useContext(l)?r.createElement(r.Fragment,null,e.children):r.createElement(f,{...e}),h=["light","dark"],f=e=>{let{forcedTheme:t,disableTransitionOnChange:n=!1,enableSystem:i=!0,enableColorScheme:s=!0,storageKey:d="theme",themes:u=h,defaultTheme:c=i?"system":"light",attribute:f="data-theme",value:_,children:b,nonce:y,scriptProps:T}=e,[E,w]=r.useState(()=>g(d,c)),[S,A]=r.useState(()=>g(d)),x=_?Object.values(_):u,C=r.useCallback(e=>{let t=e;if(!t)return;"system"===e&&i&&(t=v());let r=_?_[t]:t,a=n?m(y):null,l=document.documentElement,d=e=>{"class"===e?(l.classList.remove(...x),r&&l.classList.add(r)):e.startsWith("data-")&&(r?l.setAttribute(e,r):l.removeAttribute(e))};if(Array.isArray(f)?f.forEach(d):d(f),s){let e=o.includes(c)?c:null,n=o.includes(t)?t:e;l.style.colorScheme=n}null==a||a()},[y]),R=r.useCallback(e=>{let t="function"==typeof e?e(E):e;w(t);try{localStorage.setItem(d,t)}catch(e){}},[E]),L=r.useCallback(e=>{A(v(e)),"system"===E&&i&&!t&&C("system")},[E,t]);r.useEffect(()=>{let e=window.matchMedia(a);return e.addListener(L),L(e),()=>e.removeListener(L)},[L]),r.useEffect(()=>{let e=e=>{e.key===d&&(e.newValue?w(e.newValue):R(c))};return window.addEventListener("storage",e),()=>window.removeEventListener("storage",e)},[R]),r.useEffect(()=>{C(null!=t?t:E)},[t,E]);let O=r.useMemo(()=>({theme:E,setTheme:R,forcedTheme:t,resolvedTheme:"system"===E?S:E,themes:i?[...u,"system"]:u,systemTheme:i?S:void 0}),[E,R,t,S,i,u]);return r.createElement(l.Provider,{value:O},r.createElement(p,{forcedTheme:t,storageKey:d,attribute:f,enableSystem:i,enableColorScheme:s,defaultTheme:c,value:_,themes:u,nonce:y,scriptProps:T}),b)},p=r.memo(e=>{let{forcedTheme:t,storageKey:n,attribute:o,enableSystem:a,enableColorScheme:s,defaultTheme:l,value:d,themes:u,nonce:c,scriptProps:h}=e,f=JSON.stringify([o,n,l,t,u,d,a,s]).slice(1,-1);return r.createElement("script",{...h,suppressHydrationWarning:!0,nonce:"undefined"==typeof window?c:"",dangerouslySetInnerHTML:{__html:"(".concat(i.toString(),")(").concat(f,")")}})}),g=(e,t)=>{let n;if(!s){try{n=localStorage.getItem(e)||void 0}catch(e){}return n||t}},m=e=>{let t=document.createElement("style");return e&&t.setAttribute("nonce",e),t.appendChild(document.createTextNode("*,*::before,*::after{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}")),document.head.appendChild(t),()=>{window.getComputedStyle(document.body),setTimeout(()=>{document.head.removeChild(t)},1)}},v=e=>(e||(e=window.matchMedia(a)),e.matches?"dark":"light")},99556:function(e,t,n){"use strict";n.d(t,{Am:function(){return v},x7:function(){return E}});var r=n(10331),i=n(59261),o=e=>{switch(e){case"success":return l;case"info":return u;case"warning":return d;case"error":return c;default:return null}},a=Array(12).fill(0),s=e=>{let{visible:t,className:n}=e;return r.createElement("div",{className:["sonner-loading-wrapper",n].filter(Boolean).join(" "),"data-visible":t},r.createElement("div",{className:"sonner-spinner"},a.map((e,t)=>r.createElement("div",{className:"sonner-loading-bar",key:"spinner-bar-".concat(t)}))))},l=r.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 20 20",fill:"currentColor",height:"20",width:"20"},r.createElement("path",{fillRule:"evenodd",d:"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z",clipRule:"evenodd"})),d=r.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"currentColor",height:"20",width:"20"},r.createElement("path",{fillRule:"evenodd",d:"M9.401 3.003c1.155-2 4.043-2 5.197 0l7.355 12.748c1.154 2-.29 4.5-2.599 4.5H4.645c-2.309 0-3.752-2.5-2.598-4.5L9.4 3.003zM12 8.25a.75.75 0 01.75.75v3.75a.75.75 0 01-1.5 0V9a.75.75 0 01.75-.75zm0 8.25a.75.75 0 100-1.5.75.75 0 000 1.5z",clipRule:"evenodd"})),u=r.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 20 20",fill:"currentColor",height:"20",width:"20"},r.createElement("path",{fillRule:"evenodd",d:"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a.75.75 0 000 1.5h.253a.25.25 0 01.244.304l-.459 2.066A1.75 1.75 0 0010.747 15H11a.75.75 0 000-1.5h-.253a.25.25 0 01-.244-.304l.459-2.066A1.75 1.75 0 009.253 9H9z",clipRule:"evenodd"})),c=r.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 20 20",fill:"currentColor",height:"20",width:"20"},r.createElement("path",{fillRule:"evenodd",d:"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-5a.75.75 0 01.75.75v4.5a.75.75 0 01-1.5 0v-4.5A.75.75 0 0110 5zm0 10a1 1 0 100-2 1 1 0 000 2z",clipRule:"evenodd"})),h=r.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"12",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"1.5",strokeLinecap:"round",strokeLinejoin:"round"},r.createElement("line",{x1:"18",y1:"6",x2:"6",y2:"18"}),r.createElement("line",{x1:"6",y1:"6",x2:"18",y2:"18"})),f=()=>{let[e,t]=r.useState(document.hidden);return r.useEffect(()=>{let e=()=>{t(document.hidden)};return document.addEventListener("visibilitychange",e),()=>window.removeEventListener("visibilitychange",e)},[]),e},p=1,g=new class{constructor(){this.subscribe=e=>(this.subscribers.push(e),()=>{let t=this.subscribers.indexOf(e);this.subscribers.splice(t,1)}),this.publish=e=>{this.subscribers.forEach(t=>t(e))},this.addToast=e=>{this.publish(e),this.toasts=[...this.toasts,e]},this.create=e=>{var t;let{message:n,...r}=e,i="number"==typeof(null==e?void 0:e.id)||(null==(t=e.id)?void 0:t.length)>0?e.id:p++,o=this.toasts.find(e=>e.id===i),a=void 0===e.dismissible||e.dismissible;return o?this.toasts=this.toasts.map(t=>t.id===i?(this.publish({...t,...e,id:i,title:n}),{...t,...e,id:i,dismissible:a,title:n}):t):this.addToast({title:n,...r,dismissible:a,id:i}),i},this.dismiss=e=>(e||this.toasts.forEach(e=>{this.subscribers.forEach(t=>t({id:e.id,dismiss:!0}))}),this.subscribers.forEach(t=>t({id:e,dismiss:!0})),e),this.message=(e,t)=>this.create({...t,message:e}),this.error=(e,t)=>this.create({...t,message:e,type:"error"}),this.success=(e,t)=>this.create({...t,type:"success",message:e}),this.info=(e,t)=>this.create({...t,type:"info",message:e}),this.warning=(e,t)=>this.create({...t,type:"warning",message:e}),this.loading=(e,t)=>this.create({...t,type:"loading",message:e}),this.promise=(e,t)=>{let n;if(!t)return;void 0!==t.loading&&(n=this.create({...t,promise:e,type:"loading",message:t.loading,description:"function"!=typeof t.description?t.description:void 0}));let i=e instanceof Promise?e:e(),o=void 0!==n,a,s=i.then(async e=>{if(a=["resolve",e],r.isValidElement(e))o=!1,this.create({id:n,type:"default",message:e});else if(m(e)&&!e.ok){o=!1;let r="function"==typeof t.error?await t.error("HTTP error! status: ".concat(e.status)):t.error,i="function"==typeof t.description?await t.description("HTTP error! status: ".concat(e.status)):t.description;this.create({id:n,type:"error",message:r,description:i})}else if(void 0!==t.success){o=!1;let r="function"==typeof t.success?await t.success(e):t.success,i="function"==typeof t.description?await t.description(e):t.description;this.create({id:n,type:"success",message:r,description:i})}}).catch(async e=>{if(a=["reject",e],void 0!==t.error){o=!1;let r="function"==typeof t.error?await t.error(e):t.error,i="function"==typeof t.description?await t.description(e):t.description;this.create({id:n,type:"error",message:r,description:i})}}).finally(()=>{var e;o&&(this.dismiss(n),n=void 0),null==(e=t.finally)||e.call(t)}),l=()=>new Promise((e,t)=>s.then(()=>"reject"===a[0]?t(a[1]):e(a[1])).catch(t));return"string"!=typeof n&&"number"!=typeof n?{unwrap:l}:Object.assign(n,{unwrap:l})},this.custom=(e,t)=>{let n=(null==t?void 0:t.id)||p++;return this.create({jsx:e(n),id:n,...t}),n},this.subscribers=[],this.toasts=[]}},m=e=>e&&"object"==typeof e&&"ok"in e&&"boolean"==typeof e.ok&&"status"in e&&"number"==typeof e.status,v=Object.assign((e,t)=>{let n=(null==t?void 0:t.id)||p++;return g.addToast({title:e,...t,id:n}),n},{success:g.success,info:g.info,warning:g.warning,error:g.error,custom:g.custom,message:g.message,promise:g.promise,dismiss:g.dismiss,loading:g.loading},{getHistory:()=>g.toasts});function _(e){return void 0!==e.label}function b(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.filter(Boolean).join(" ")}!function(e){let{insertAt:t}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!e||"undefined"==typeof document)return;let n=document.head||document.getElementsByTagName("head")[0],r=document.createElement("style");r.type="text/css","top"===t&&n.firstChild?n.insertBefore(r,n.firstChild):n.appendChild(r),r.styleSheet?r.styleSheet.cssText=e:r.appendChild(document.createTextNode(e))}(':where(html[dir="ltr"]),:where([data-sonner-toaster][dir="ltr"]){--toast-icon-margin-start: -3px;--toast-icon-margin-end: 4px;--toast-svg-margin-start: -1px;--toast-svg-margin-end: 0px;--toast-button-margin-start: auto;--toast-button-margin-end: 0;--toast-close-button-start: 0;--toast-close-button-end: unset;--toast-close-button-transform: translate(-35%, -35%)}:where(html[dir="rtl"]),:where([data-sonner-toaster][dir="rtl"]){--toast-icon-margin-start: 4px;--toast-icon-margin-end: -3px;--toast-svg-margin-start: 0px;--toast-svg-margin-end: -1px;--toast-button-margin-start: 0;--toast-button-margin-end: auto;--toast-close-button-start: unset;--toast-close-button-end: 0;--toast-close-button-transform: translate(35%, -35%)}:where([data-sonner-toaster]){position:fixed;width:var(--width);font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;--gray1: hsl(0, 0%, 99%);--gray2: hsl(0, 0%, 97.3%);--gray3: hsl(0, 0%, 95.1%);--gray4: hsl(0, 0%, 93%);--gray5: hsl(0, 0%, 90.9%);--gray6: hsl(0, 0%, 88.7%);--gray7: hsl(0, 0%, 85.8%);--gray8: hsl(0, 0%, 78%);--gray9: hsl(0, 0%, 56.1%);--gray10: hsl(0, 0%, 52.3%);--gray11: hsl(0, 0%, 43.5%);--gray12: hsl(0, 0%, 9%);--border-radius: 8px;box-sizing:border-box;padding:0;margin:0;list-style:none;outline:none;z-index:999999999;transition:transform .4s ease}:where([data-sonner-toaster][data-lifted="true"]){transform:translateY(-10px)}@media (hover: none) and (pointer: coarse){:where([data-sonner-toaster][data-lifted="true"]){transform:none}}:where([data-sonner-toaster][data-x-position="right"]){right:var(--offset-right)}:where([data-sonner-toaster][data-x-position="left"]){left:var(--offset-left)}:where([data-sonner-toaster][data-x-position="center"]){left:50%;transform:translate(-50%)}:where([data-sonner-toaster][data-y-position="top"]){top:var(--offset-top)}:where([data-sonner-toaster][data-y-position="bottom"]){bottom:var(--offset-bottom)}:where([data-sonner-toast]){--y: translateY(100%);--lift-amount: calc(var(--lift) * var(--gap));z-index:var(--z-index);position:absolute;opacity:0;transform:var(--y);filter:blur(0);touch-action:none;transition:transform .4s,opacity .4s,height .4s,box-shadow .2s;box-sizing:border-box;outline:none;overflow-wrap:anywhere}:where([data-sonner-toast][data-styled="true"]){padding:16px;background:var(--normal-bg);border:1px solid var(--normal-border);color:var(--normal-text);border-radius:var(--border-radius);box-shadow:0 4px 12px #0000001a;width:var(--width);font-size:13px;display:flex;align-items:center;gap:6px}:where([data-sonner-toast]:focus-visible){box-shadow:0 4px 12px #0000001a,0 0 0 2px #0003}:where([data-sonner-toast][data-y-position="top"]){top:0;--y: translateY(-100%);--lift: 1;--lift-amount: calc(1 * var(--gap))}:where([data-sonner-toast][data-y-position="bottom"]){bottom:0;--y: translateY(100%);--lift: -1;--lift-amount: calc(var(--lift) * var(--gap))}:where([data-sonner-toast]) :where([data-description]){font-weight:400;line-height:1.4;color:inherit}:where([data-sonner-toast]) :where([data-title]){font-weight:500;line-height:1.5;color:inherit}:where([data-sonner-toast]) :where([data-icon]){display:flex;height:16px;width:16px;position:relative;justify-content:flex-start;align-items:center;flex-shrink:0;margin-left:var(--toast-icon-margin-start);margin-right:var(--toast-icon-margin-end)}:where([data-sonner-toast][data-promise="true"]) :where([data-icon])>svg{opacity:0;transform:scale(.8);transform-origin:center;animation:sonner-fade-in .3s ease forwards}:where([data-sonner-toast]) :where([data-icon])>*{flex-shrink:0}:where([data-sonner-toast]) :where([data-icon]) svg{margin-left:var(--toast-svg-margin-start);margin-right:var(--toast-svg-margin-end)}:where([data-sonner-toast]) :where([data-content]){display:flex;flex-direction:column;gap:2px}[data-sonner-toast][data-styled=true] [data-button]{border-radius:4px;padding-left:8px;padding-right:8px;height:24px;font-size:12px;color:var(--normal-bg);background:var(--normal-text);margin-left:var(--toast-button-margin-start);margin-right:var(--toast-button-margin-end);border:none;cursor:pointer;outline:none;display:flex;align-items:center;flex-shrink:0;transition:opacity .4s,box-shadow .2s}:where([data-sonner-toast]) :where([data-button]):focus-visible{box-shadow:0 0 0 2px #0006}:where([data-sonner-toast]) :where([data-button]):first-of-type{margin-left:var(--toast-button-margin-start);margin-right:var(--toast-button-margin-end)}:where([data-sonner-toast]) :where([data-cancel]){color:var(--normal-text);background:rgba(0,0,0,.08)}:where([data-sonner-toast][data-theme="dark"]) :where([data-cancel]){background:rgba(255,255,255,.3)}:where([data-sonner-toast]) :where([data-close-button]){position:absolute;left:var(--toast-close-button-start);right:var(--toast-close-button-end);top:0;height:20px;width:20px;display:flex;justify-content:center;align-items:center;padding:0;color:var(--gray12);border:1px solid var(--gray4);transform:var(--toast-close-button-transform);border-radius:50%;cursor:pointer;z-index:1;transition:opacity .1s,background .2s,border-color .2s}[data-sonner-toast] [data-close-button]{background:var(--gray1)}:where([data-sonner-toast]) :where([data-close-button]):focus-visible{box-shadow:0 4px 12px #0000001a,0 0 0 2px #0003}:where([data-sonner-toast]) :where([data-disabled="true"]){cursor:not-allowed}:where([data-sonner-toast]):hover :where([data-close-button]):hover{background:var(--gray2);border-color:var(--gray5)}:where([data-sonner-toast][data-swiping="true"]):before{content:"";position:absolute;left:-50%;right:-50%;height:100%;z-index:-1}:where([data-sonner-toast][data-y-position="top"][data-swiping="true"]):before{bottom:50%;transform:scaleY(3) translateY(50%)}:where([data-sonner-toast][data-y-position="bottom"][data-swiping="true"]):before{top:50%;transform:scaleY(3) translateY(-50%)}:where([data-sonner-toast][data-swiping="false"][data-removed="true"]):before{content:"";position:absolute;inset:0;transform:scaleY(2)}:where([data-sonner-toast]):after{content:"";position:absolute;left:0;height:calc(var(--gap) + 1px);bottom:100%;width:100%}:where([data-sonner-toast][data-mounted="true"]){--y: translateY(0);opacity:1}:where([data-sonner-toast][data-expanded="false"][data-front="false"]){--scale: var(--toasts-before) * .05 + 1;--y: translateY(calc(var(--lift-amount) * var(--toasts-before))) scale(calc(-1 * var(--scale)));height:var(--front-toast-height)}:where([data-sonner-toast])>*{transition:opacity .4s}:where([data-sonner-toast][data-expanded="false"][data-front="false"][data-styled="true"])>*{opacity:0}:where([data-sonner-toast][data-visible="false"]){opacity:0;pointer-events:none}:where([data-sonner-toast][data-mounted="true"][data-expanded="true"]){--y: translateY(calc(var(--lift) * var(--offset)));height:var(--initial-height)}:where([data-sonner-toast][data-removed="true"][data-front="true"][data-swipe-out="false"]){--y: translateY(calc(var(--lift) * -100%));opacity:0}:where([data-sonner-toast][data-removed="true"][data-front="false"][data-swipe-out="false"][data-expanded="true"]){--y: translateY(calc(var(--lift) * var(--offset) + var(--lift) * -100%));opacity:0}:where([data-sonner-toast][data-removed="true"][data-front="false"][data-swipe-out="false"][data-expanded="false"]){--y: translateY(40%);opacity:0;transition:transform .5s,opacity .2s}:where([data-sonner-toast][data-removed="true"][data-front="false"]):before{height:calc(var(--initial-height) + 20%)}[data-sonner-toast][data-swiping=true]{transform:var(--y) translateY(var(--swipe-amount-y, 0px)) translate(var(--swipe-amount-x, 0px));transition:none}[data-sonner-toast][data-swiped=true]{user-select:none}[data-sonner-toast][data-swipe-out=true][data-y-position=bottom],[data-sonner-toast][data-swipe-out=true][data-y-position=top]{animation-duration:.2s;animation-timing-function:ease-out;animation-fill-mode:forwards}[data-sonner-toast][data-swipe-out=true][data-swipe-direction=left]{animation-name:swipe-out-left}[data-sonner-toast][data-swipe-out=true][data-swipe-direction=right]{animation-name:swipe-out-right}[data-sonner-toast][data-swipe-out=true][data-swipe-direction=up]{animation-name:swipe-out-up}[data-sonner-toast][data-swipe-out=true][data-swipe-direction=down]{animation-name:swipe-out-down}@keyframes swipe-out-left{0%{transform:var(--y) translate(var(--swipe-amount-x));opacity:1}to{transform:var(--y) translate(calc(var(--swipe-amount-x) - 100%));opacity:0}}@keyframes swipe-out-right{0%{transform:var(--y) translate(var(--swipe-amount-x));opacity:1}to{transform:var(--y) translate(calc(var(--swipe-amount-x) + 100%));opacity:0}}@keyframes swipe-out-up{0%{transform:var(--y) translateY(var(--swipe-amount-y));opacity:1}to{transform:var(--y) translateY(calc(var(--swipe-amount-y) - 100%));opacity:0}}@keyframes swipe-out-down{0%{transform:var(--y) translateY(var(--swipe-amount-y));opacity:1}to{transform:var(--y) translateY(calc(var(--swipe-amount-y) + 100%));opacity:0}}@media (max-width: 600px){[data-sonner-toaster]{position:fixed;right:var(--mobile-offset-right);left:var(--mobile-offset-left);width:100%}[data-sonner-toaster][dir=rtl]{left:calc(var(--mobile-offset-left) * -1)}[data-sonner-toaster] [data-sonner-toast]{left:0;right:0;width:calc(100% - var(--mobile-offset-left) * 2)}[data-sonner-toaster][data-x-position=left]{left:var(--mobile-offset-left)}[data-sonner-toaster][data-y-position=bottom]{bottom:var(--mobile-offset-bottom)}[data-sonner-toaster][data-y-position=top]{top:var(--mobile-offset-top)}[data-sonner-toaster][data-x-position=center]{left:var(--mobile-offset-left);right:var(--mobile-offset-right);transform:none}}[data-sonner-toaster][data-theme=light]{--normal-bg: #fff;--normal-border: var(--gray4);--normal-text: var(--gray12);--success-bg: hsl(143, 85%, 96%);--success-border: hsl(145, 92%, 91%);--success-text: hsl(140, 100%, 27%);--info-bg: hsl(208, 100%, 97%);--info-border: hsl(221, 91%, 91%);--info-text: hsl(210, 92%, 45%);--warning-bg: hsl(49, 100%, 97%);--warning-border: hsl(49, 91%, 91%);--warning-text: hsl(31, 92%, 45%);--error-bg: hsl(359, 100%, 97%);--error-border: hsl(359, 100%, 94%);--error-text: hsl(360, 100%, 45%)}[data-sonner-toaster][data-theme=light] [data-sonner-toast][data-invert=true]{--normal-bg: #000;--normal-border: hsl(0, 0%, 20%);--normal-text: var(--gray1)}[data-sonner-toaster][data-theme=dark] [data-sonner-toast][data-invert=true]{--normal-bg: #fff;--normal-border: var(--gray3);--normal-text: var(--gray12)}[data-sonner-toaster][data-theme=dark]{--normal-bg: #000;--normal-bg-hover: hsl(0, 0%, 12%);--normal-border: hsl(0, 0%, 20%);--normal-border-hover: hsl(0, 0%, 25%);--normal-text: var(--gray1);--success-bg: hsl(150, 100%, 6%);--success-border: hsl(147, 100%, 12%);--success-text: hsl(150, 86%, 65%);--info-bg: hsl(215, 100%, 6%);--info-border: hsl(223, 100%, 12%);--info-text: hsl(216, 87%, 65%);--warning-bg: hsl(64, 100%, 6%);--warning-border: hsl(60, 100%, 12%);--warning-text: hsl(46, 87%, 65%);--error-bg: hsl(358, 76%, 10%);--error-border: hsl(357, 89%, 16%);--error-text: hsl(358, 100%, 81%)}[data-sonner-toaster][data-theme=dark] [data-sonner-toast] [data-close-button]{background:var(--normal-bg);border-color:var(--normal-border);color:var(--normal-text)}[data-sonner-toaster][data-theme=dark] [data-sonner-toast] [data-close-button]:hover{background:var(--normal-bg-hover);border-color:var(--normal-border-hover)}[data-rich-colors=true][data-sonner-toast][data-type=success],[data-rich-colors=true][data-sonner-toast][data-type=success] [data-close-button]{background:var(--success-bg);border-color:var(--success-border);color:var(--success-text)}[data-rich-colors=true][data-sonner-toast][data-type=info],[data-rich-colors=true][data-sonner-toast][data-type=info] [data-close-button]{background:var(--info-bg);border-color:var(--info-border);color:var(--info-text)}[data-rich-colors=true][data-sonner-toast][data-type=warning],[data-rich-colors=true][data-sonner-toast][data-type=warning] [data-close-button]{background:var(--warning-bg);border-color:var(--warning-border);color:var(--warning-text)}[data-rich-colors=true][data-sonner-toast][data-type=error],[data-rich-colors=true][data-sonner-toast][data-type=error] [data-close-button]{background:var(--error-bg);border-color:var(--error-border);color:var(--error-text)}.sonner-loading-wrapper{--size: 16px;height:var(--size);width:var(--size);position:absolute;inset:0;z-index:10}.sonner-loading-wrapper[data-visible=false]{transform-origin:center;animation:sonner-fade-out .2s ease forwards}.sonner-spinner{position:relative;top:50%;left:50%;height:var(--size);width:var(--size)}.sonner-loading-bar{animation:sonner-spin 1.2s linear infinite;background:var(--gray11);border-radius:6px;height:8%;left:-10%;position:absolute;top:-3.9%;width:24%}.sonner-loading-bar:nth-child(1){animation-delay:-1.2s;transform:rotate(.0001deg) translate(146%)}.sonner-loading-bar:nth-child(2){animation-delay:-1.1s;transform:rotate(30deg) translate(146%)}.sonner-loading-bar:nth-child(3){animation-delay:-1s;transform:rotate(60deg) translate(146%)}.sonner-loading-bar:nth-child(4){animation-delay:-.9s;transform:rotate(90deg) translate(146%)}.sonner-loading-bar:nth-child(5){animation-delay:-.8s;transform:rotate(120deg) translate(146%)}.sonner-loading-bar:nth-child(6){animation-delay:-.7s;transform:rotate(150deg) translate(146%)}.sonner-loading-bar:nth-child(7){animation-delay:-.6s;transform:rotate(180deg) translate(146%)}.sonner-loading-bar:nth-child(8){animation-delay:-.5s;transform:rotate(210deg) translate(146%)}.sonner-loading-bar:nth-child(9){animation-delay:-.4s;transform:rotate(240deg) translate(146%)}.sonner-loading-bar:nth-child(10){animation-delay:-.3s;transform:rotate(270deg) translate(146%)}.sonner-loading-bar:nth-child(11){animation-delay:-.2s;transform:rotate(300deg) translate(146%)}.sonner-loading-bar:nth-child(12){animation-delay:-.1s;transform:rotate(330deg) translate(146%)}@keyframes sonner-fade-in{0%{opacity:0;transform:scale(.8)}to{opacity:1;transform:scale(1)}}@keyframes sonner-fade-out{0%{opacity:1;transform:scale(1)}to{opacity:0;transform:scale(.8)}}@keyframes sonner-spin{0%{opacity:1}to{opacity:.15}}@media (prefers-reduced-motion){[data-sonner-toast],[data-sonner-toast]>*,.sonner-loading-bar{transition:none!important;animation:none!important}}.sonner-loader{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);transform-origin:center;transition:opacity .2s,transform .2s}.sonner-loader[data-visible=false]{opacity:0;transform:scale(.8) translate(-50%,-50%)}\n');var y=e=>{var t,n,i,a,l,d,u,c,p,g,m,v,y,T;let{invert:E,toast:w,unstyled:S,interacting:A,setHeights:x,visibleToasts:C,heights:R,index:L,toasts:O,expanded:N,removeToast:D,defaultRichColors:M,closeButton:B,style:I,cancelButtonStyle:F,actionButtonStyle:k,className:P="",descriptionClassName:U="",duration:z,position:j,gap:W,loadingIcon:H,expandByDefault:Y,classNames:X,icons:V,closeButtonAriaLabel:G="Close toast",pauseWhenPageIsHidden:Z}=e,[J,K]=r.useState(null),[$,q]=r.useState(null),[Q,ee]=r.useState(!1),[et,en]=r.useState(!1),[er,ei]=r.useState(!1),[eo,ea]=r.useState(!1),[es,el]=r.useState(!1),[ed,eu]=r.useState(0),[ec,eh]=r.useState(0),ef=r.useRef(w.duration||z||4e3),ep=r.useRef(null),eg=r.useRef(null),em=0===L,ev=L+1<=C,e_=w.type,eb=!1!==w.dismissible,ey=w.className||"",eT=w.descriptionClassName||"",eE=r.useMemo(()=>R.findIndex(e=>e.toastId===w.id)||0,[R,w.id]),ew=r.useMemo(()=>{var e;return null!=(e=w.closeButton)?e:B},[w.closeButton,B]),eS=r.useMemo(()=>w.duration||z||4e3,[w.duration,z]),eA=r.useRef(0),ex=r.useRef(0),eC=r.useRef(0),eR=r.useRef(null),[eL,eO]=j.split("-"),eN=r.useMemo(()=>R.reduce((e,t,n)=>n>=eE?e:e+t.height,0),[R,eE]),eD=f(),eM=w.invert||E,eB="loading"===e_;ex.current=r.useMemo(()=>eE*W+eN,[eE,eN]),r.useEffect(()=>{ef.current=eS},[eS]),r.useEffect(()=>{ee(!0)},[]),r.useEffect(()=>{let e=eg.current;if(e){let t=e.getBoundingClientRect().height;return eh(t),x(e=>[{toastId:w.id,height:t,position:w.position},...e]),()=>x(e=>e.filter(e=>e.toastId!==w.id))}},[x,w.id]),r.useLayoutEffect(()=>{if(!Q)return;let e=eg.current,t=e.style.height;e.style.height="auto";let n=e.getBoundingClientRect().height;e.style.height=t,eh(n),x(e=>e.find(e=>e.toastId===w.id)?e.map(e=>e.toastId===w.id?{...e,height:n}:e):[{toastId:w.id,height:n,position:w.position},...e])},[Q,w.title,w.description,x,w.id]);let eI=r.useCallback(()=>{en(!0),eu(ex.current),x(e=>e.filter(e=>e.toastId!==w.id)),setTimeout(()=>{D(w)},200)},[w,D,x,ex]);return r.useEffect(()=>{let e;if((!w.promise||"loading"!==e_)&&w.duration!==1/0&&"loading"!==w.type)return N||A||Z&&eD?(()=>{if(eC.current<eA.current){let e=new Date().getTime()-eA.current;ef.current=ef.current-e}eC.current=new Date().getTime()})():ef.current!==1/0&&(eA.current=new Date().getTime(),e=setTimeout(()=>{var e;null==(e=w.onAutoClose)||e.call(w,w),eI()},ef.current)),()=>clearTimeout(e)},[N,A,w,e_,Z,eD,eI]),r.useEffect(()=>{w.delete&&eI()},[eI,w.delete]),r.createElement("li",{tabIndex:0,ref:eg,className:b(P,ey,null==X?void 0:X.toast,null==(t=null==w?void 0:w.classNames)?void 0:t.toast,null==X?void 0:X.default,null==X?void 0:X[e_],null==(n=null==w?void 0:w.classNames)?void 0:n[e_]),"data-sonner-toast":"","data-rich-colors":null!=(i=w.richColors)?i:M,"data-styled":!(w.jsx||w.unstyled||S),"data-mounted":Q,"data-promise":!!w.promise,"data-swiped":es,"data-removed":et,"data-visible":ev,"data-y-position":eL,"data-x-position":eO,"data-index":L,"data-front":em,"data-swiping":er,"data-dismissible":eb,"data-type":e_,"data-invert":eM,"data-swipe-out":eo,"data-swipe-direction":$,"data-expanded":!!(N||Y&&Q),style:{"--index":L,"--toasts-before":L,"--z-index":O.length-L,"--offset":"".concat(et?ed:ex.current,"px"),"--initial-height":Y?"auto":"".concat(ec,"px"),...I,...w.style},onPointerDown:e=>{eB||!eb||(ep.current=new Date,eu(ex.current),e.target.setPointerCapture(e.pointerId),"BUTTON"!==e.target.tagName&&(ei(!0),eR.current={x:e.clientX,y:e.clientY}))},onPointerUp:()=>{var e,t,n,r;if(eo||!eb)return;eR.current=null;let i=Number((null==(e=eg.current)?void 0:e.style.getPropertyValue("--swipe-amount-x").replace("px",""))||0),o=Number((null==(t=eg.current)?void 0:t.style.getPropertyValue("--swipe-amount-y").replace("px",""))||0),a=new Date().getTime()-(null==(n=ep.current)?void 0:n.getTime()),s="x"===J?i:o;if(Math.abs(s)>=20||Math.abs(s)/a>.11){eu(ex.current),null==(r=w.onDismiss)||r.call(w,w),q("x"===J?i>0?"right":"left":o>0?"down":"up"),eI(),ea(!0),el(!1);return}ei(!1),K(null)},onPointerMove:t=>{var n,r,i,o;if(!eR.current||!eb||(null==(n=window.getSelection())?void 0:n.toString().length)>0)return;let a=t.clientY-eR.current.y,s=t.clientX-eR.current.x,l=null!=(r=e.swipeDirections)?r:function(e){let[t,n]=e.split("-"),r=[];return t&&r.push(t),n&&r.push(n),r}(j);!J&&(Math.abs(s)>1||Math.abs(a)>1)&&K(Math.abs(s)>Math.abs(a)?"x":"y");let d={x:0,y:0};"y"===J?(l.includes("top")||l.includes("bottom"))&&(l.includes("top")&&a<0||l.includes("bottom")&&a>0)&&(d.y=a):"x"===J&&(l.includes("left")||l.includes("right"))&&(l.includes("left")&&s<0||l.includes("right")&&s>0)&&(d.x=s),(Math.abs(d.x)>0||Math.abs(d.y)>0)&&el(!0),null==(i=eg.current)||i.style.setProperty("--swipe-amount-x","".concat(d.x,"px")),null==(o=eg.current)||o.style.setProperty("--swipe-amount-y","".concat(d.y,"px"))}},ew&&!w.jsx?r.createElement("button",{"aria-label":G,"data-disabled":eB,"data-close-button":!0,onClick:eB||!eb?()=>{}:()=>{var e;eI(),null==(e=w.onDismiss)||e.call(w,w)},className:b(null==X?void 0:X.closeButton,null==(a=null==w?void 0:w.classNames)?void 0:a.closeButton)},null!=(l=null==V?void 0:V.close)?l:h):null,w.jsx||(0,r.isValidElement)(w.title)?w.jsx?w.jsx:"function"==typeof w.title?w.title():w.title:r.createElement(r.Fragment,null,e_||w.icon||w.promise?r.createElement("div",{"data-icon":"",className:b(null==X?void 0:X.icon,null==(d=null==w?void 0:w.classNames)?void 0:d.icon)},w.promise||"loading"===w.type&&!w.icon?w.icon||(null!=V&&V.loading?r.createElement("div",{className:b(null==X?void 0:X.loader,null==(v=null==w?void 0:w.classNames)?void 0:v.loader,"sonner-loader"),"data-visible":"loading"===e_},V.loading):H?r.createElement("div",{className:b(null==X?void 0:X.loader,null==(y=null==w?void 0:w.classNames)?void 0:y.loader,"sonner-loader"),"data-visible":"loading"===e_},H):r.createElement(s,{className:b(null==X?void 0:X.loader,null==(T=null==w?void 0:w.classNames)?void 0:T.loader),visible:"loading"===e_})):null,"loading"!==w.type?w.icon||(null==V?void 0:V[e_])||o(e_):null):null,r.createElement("div",{"data-content":"",className:b(null==X?void 0:X.content,null==(u=null==w?void 0:w.classNames)?void 0:u.content)},r.createElement("div",{"data-title":"",className:b(null==X?void 0:X.title,null==(c=null==w?void 0:w.classNames)?void 0:c.title)},"function"==typeof w.title?w.title():w.title),w.description?r.createElement("div",{"data-description":"",className:b(U,eT,null==X?void 0:X.description,null==(p=null==w?void 0:w.classNames)?void 0:p.description)},"function"==typeof w.description?w.description():w.description):null),(0,r.isValidElement)(w.cancel)?w.cancel:w.cancel&&_(w.cancel)?r.createElement("button",{"data-button":!0,"data-cancel":!0,style:w.cancelButtonStyle||F,onClick:e=>{var t,n;_(w.cancel)&&eb&&(null==(n=(t=w.cancel).onClick)||n.call(t,e),eI())},className:b(null==X?void 0:X.cancelButton,null==(g=null==w?void 0:w.classNames)?void 0:g.cancelButton)},w.cancel.label):null,(0,r.isValidElement)(w.action)?w.action:w.action&&_(w.action)?r.createElement("button",{"data-button":!0,"data-action":!0,style:w.actionButtonStyle||k,onClick:e=>{var t,n;_(w.action)&&(null==(n=(t=w.action).onClick)||n.call(t,e),e.defaultPrevented||eI())},className:b(null==X?void 0:X.actionButton,null==(m=null==w?void 0:w.classNames)?void 0:m.actionButton)},w.action.label):null))};function T(){if("undefined"==typeof window||"undefined"==typeof document)return"ltr";let e=document.documentElement.getAttribute("dir");return"auto"!==e&&e?e:window.getComputedStyle(document.documentElement).direction}var E=(0,r.forwardRef)(function(e,t){let{invert:n,position:o="bottom-right",hotkey:a=["altKey","KeyT"],expand:s,closeButton:l,className:d,offset:u,mobileOffset:c,theme:h="light",richColors:f,duration:p,style:m,visibleToasts:v=3,toastOptions:_,dir:b=T(),gap:E=14,loadingIcon:w,icons:S,containerAriaLabel:A="Notifications",pauseWhenPageIsHidden:x}=e,[C,R]=r.useState([]),L=r.useMemo(()=>Array.from(new Set([o].concat(C.filter(e=>e.position).map(e=>e.position)))),[C,o]),[O,N]=r.useState([]),[D,M]=r.useState(!1),[B,I]=r.useState(!1),[F,k]=r.useState("system"!==h?h:"undefined"!=typeof window&&window.matchMedia&&window.matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light"),P=r.useRef(null),U=a.join("+").replace(/Key/g,"").replace(/Digit/g,""),z=r.useRef(null),j=r.useRef(!1),W=r.useCallback(e=>{R(t=>{var n;return null!=(n=t.find(t=>t.id===e.id))&&n.delete||g.dismiss(e.id),t.filter(t=>{let{id:n}=t;return n!==e.id})})},[]);return r.useEffect(()=>g.subscribe(e=>{if(e.dismiss){R(t=>t.map(t=>t.id===e.id?{...t,delete:!0}:t));return}setTimeout(()=>{i.flushSync(()=>{R(t=>{let n=t.findIndex(t=>t.id===e.id);return -1!==n?[...t.slice(0,n),{...t[n],...e},...t.slice(n+1)]:[e,...t]})})})}),[]),r.useEffect(()=>{if("system"!==h){k(h);return}if("system"===h&&(window.matchMedia&&window.matchMedia("(prefers-color-scheme: dark)").matches?k("dark"):k("light")),"undefined"==typeof window)return;let e=window.matchMedia("(prefers-color-scheme: dark)");try{e.addEventListener("change",e=>{let{matches:t}=e;k(t?"dark":"light")})}catch(t){e.addListener(e=>{let{matches:t}=e;try{k(t?"dark":"light")}catch(e){console.error(e)}})}},[h]),r.useEffect(()=>{C.length<=1&&M(!1)},[C]),r.useEffect(()=>{let e=e=>{var t,n;a.every(t=>e[t]||e.code===t)&&(M(!0),null==(t=P.current)||t.focus()),"Escape"===e.code&&(document.activeElement===P.current||null!=(n=P.current)&&n.contains(document.activeElement))&&M(!1)};return document.addEventListener("keydown",e),()=>document.removeEventListener("keydown",e)},[a]),r.useEffect(()=>{if(P.current)return()=>{z.current&&(z.current.focus({preventScroll:!0}),z.current=null,j.current=!1)}},[P.current]),r.createElement("section",{ref:t,"aria-label":"".concat(A," ").concat(U),tabIndex:-1,"aria-live":"polite","aria-relevant":"additions text","aria-atomic":"false",suppressHydrationWarning:!0},L.map((t,i)=>{var o;let a;let[h,g]=t.split("-");return C.length?r.createElement("ol",{key:t,dir:"auto"===b?T():b,tabIndex:-1,ref:P,className:d,"data-sonner-toaster":!0,"data-theme":F,"data-y-position":h,"data-lifted":D&&C.length>1&&!s,"data-x-position":g,style:{"--front-toast-height":"".concat((null==(o=O[0])?void 0:o.height)||0,"px"),"--width":"".concat(356,"px"),"--gap":"".concat(E,"px"),...m,...(a={},[u,c].forEach((e,t)=>{let n=1===t,r=n?"--mobile-offset":"--offset",i=n?"16px":"32px";function o(e){["top","right","bottom","left"].forEach(t=>{a["".concat(r,"-").concat(t)]="number"==typeof e?"".concat(e,"px"):e})}"number"==typeof e||"string"==typeof e?o(e):"object"==typeof e?["top","right","bottom","left"].forEach(t=>{void 0===e[t]?a["".concat(r,"-").concat(t)]=i:a["".concat(r,"-").concat(t)]="number"==typeof e[t]?"".concat(e[t],"px"):e[t]}):o(i)}),a)},onBlur:e=>{j.current&&!e.currentTarget.contains(e.relatedTarget)&&(j.current=!1,z.current&&(z.current.focus({preventScroll:!0}),z.current=null))},onFocus:e=>{e.target instanceof HTMLElement&&"false"===e.target.dataset.dismissible||j.current||(j.current=!0,z.current=e.relatedTarget)},onMouseEnter:()=>M(!0),onMouseMove:()=>M(!0),onMouseLeave:()=>{B||M(!1)},onPointerDown:e=>{e.target instanceof HTMLElement&&"false"===e.target.dataset.dismissible||I(!0)},onPointerUp:()=>I(!1)},C.filter(e=>!e.position&&0===i||e.position===t).map((i,o)=>{var a,d;return r.createElement(y,{key:i.id,icons:S,index:o,toast:i,defaultRichColors:f,duration:null!=(a=null==_?void 0:_.duration)?a:p,className:null==_?void 0:_.className,descriptionClassName:null==_?void 0:_.descriptionClassName,invert:n,visibleToasts:v,closeButton:null!=(d=null==_?void 0:_.closeButton)?d:l,interacting:B,position:t,style:null==_?void 0:_.style,unstyled:null==_?void 0:_.unstyled,classNames:null==_?void 0:_.classNames,cancelButtonStyle:null==_?void 0:_.cancelButtonStyle,actionButtonStyle:null==_?void 0:_.actionButtonStyle,removeToast:W,toasts:C.filter(e=>e.position==i.position),heights:O.filter(e=>e.position==i.position),setHeights:N,expandByDefault:s,gap:E,loadingIcon:w,expanded:D,pauseWhenPageIsHidden:x,swipeDirections:e.swipeDirections})})):null}))})},60302:function(e,t,n){"use strict";n.d(t,{FC:function(){return l},KL:function(){return u},V2:function(){return d},_T:function(){return i},ev:function(){return a},mG:function(){return o},pi:function(){return r},qq:function(){return s}});var r=function(){return(r=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var i in t=arguments[n])Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i]);return e}).apply(this,arguments)};function i(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&0>t.indexOf(r)&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols)for(var i=0,r=Object.getOwnPropertySymbols(e);i<r.length;i++)0>t.indexOf(r[i])&&Object.prototype.propertyIsEnumerable.call(e,r[i])&&(n[r[i]]=e[r[i]]);return n}function o(e,t,n,r){return new(n||(n=Promise))(function(i,o){function a(e){try{l(r.next(e))}catch(e){o(e)}}function s(e){try{l(r.throw(e))}catch(e){o(e)}}function l(e){var t;e.done?i(e.value):((t=e.value)instanceof n?t:new n(function(e){e(t)})).then(a,s)}l((r=r.apply(e,t||[])).next())})}function a(e,t,n){if(n||2==arguments.length)for(var r,i=0,o=t.length;i<o;i++)!r&&i in t||(r||(r=Array.prototype.slice.call(t,0,i)),r[i]=t[i]);return e.concat(r||Array.prototype.slice.call(t))}function s(e){return this instanceof s?(this.v=e,this):new s(e)}function l(e,t,n){if(!Symbol.asyncIterator)throw TypeError("Symbol.asyncIterator is not defined.");var r,i=n.apply(e,t||[]),o=[];return r=Object.create(("function"==typeof AsyncIterator?AsyncIterator:Object).prototype),a("next"),a("throw"),a("return",function(e){return function(t){return Promise.resolve(t).then(e,u)}}),r[Symbol.asyncIterator]=function(){return this},r;function a(e,t){i[e]&&(r[e]=function(t){return new Promise(function(n,r){o.push([e,t,n,r])>1||l(e,t)})},t&&(r[e]=t(r[e])))}function l(e,t){try{var n;(n=i[e](t)).value instanceof s?Promise.resolve(n.value.v).then(d,u):c(o[0][2],n)}catch(e){c(o[0][3],e)}}function d(e){l("next",e)}function u(e){l("throw",e)}function c(e,t){e(t),o.shift(),o.length&&l(o[0][0],o[0][1])}}function d(e){var t,n;return t={},r("next"),r("throw",function(e){throw e}),r("return"),t[Symbol.iterator]=function(){return this},t;function r(r,i){t[r]=e[r]?function(t){return(n=!n)?{value:s(e[r](t)),done:!1}:i?i(t):t}:i}}function u(e){if(!Symbol.asyncIterator)throw TypeError("Symbol.asyncIterator is not defined.");var t,n=e[Symbol.asyncIterator];return n?n.call(e):(e=function(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")}(e),t={},r("next"),r("throw"),r("return"),t[Symbol.asyncIterator]=function(){return this},t);function r(n){t[n]=e[n]&&function(t){return new Promise(function(r,i){!function(e,t,n,r){Promise.resolve(r).then(function(t){e({value:t,done:n})},t)}(r,i,(t=e[n](t)).done,t.value)})}}}"function"==typeof SuppressedError&&SuppressedError},47720:function(e,t,n){"use strict";function r(e,t){let n;try{n=e()}catch(e){return}return{getItem:e=>{var r;let i=e=>null===e?null:JSON.parse(e,null==t?void 0:t.reviver),o=null!=(r=n.getItem(e))?r:null;return o instanceof Promise?o.then(i):i(o)},setItem:(e,r)=>n.setItem(e,JSON.stringify(r,null==t?void 0:t.replacer)),removeItem:e=>n.removeItem(e)}}n.d(t,{FL:function(){return r},tJ:function(){return s}});let i=e=>t=>{try{let n=e(t);if(n instanceof Promise)return n;return{then:e=>i(e)(n),catch(e){return this}}}catch(e){return{then(e){return this},catch:t=>i(t)(e)}}},o=(e,t)=>(n,r,o)=>{let a,s,l={getStorage:()=>localStorage,serialize:JSON.stringify,deserialize:JSON.parse,partialize:e=>e,version:0,merge:(e,t)=>({...t,...e}),...t},d=!1,u=new Set,c=new Set;try{a=l.getStorage()}catch(e){}if(!a)return e((...e)=>{console.warn(`[zustand persist middleware] Unable to update item '${l.name}', the given storage is currently unavailable.`),n(...e)},r,o);let h=i(l.serialize),f=()=>{let e;let t=h({state:l.partialize({...r()}),version:l.version}).then(e=>a.setItem(l.name,e)).catch(t=>{e=t});if(e)throw e;return t},p=o.setState;o.setState=(e,t)=>{p(e,t),f()};let g=e((...e)=>{n(...e),f()},r,o),m=()=>{var e;if(!a)return;d=!1,u.forEach(e=>e(r()));let t=(null==(e=l.onRehydrateStorage)?void 0:e.call(l,r()))||void 0;return i(a.getItem.bind(a))(l.name).then(e=>{if(e)return l.deserialize(e)}).then(e=>{if(e){if("number"!=typeof e.version||e.version===l.version)return e.state;if(l.migrate)return l.migrate(e.state,e.version);console.error("State loaded from storage couldn't be migrated since no migrate function was provided")}}).then(e=>{var t;return n(s=l.merge(e,null!=(t=r())?t:g),!0),f()}).then(()=>{null==t||t(s,void 0),d=!0,c.forEach(e=>e(s))}).catch(e=>{null==t||t(void 0,e)})};return o.persist={setOptions:e=>{l={...l,...e},e.getStorage&&(a=e.getStorage())},clearStorage:()=>{null==a||a.removeItem(l.name)},getOptions:()=>l,rehydrate:()=>m(),hasHydrated:()=>d,onHydrate:e=>(u.add(e),()=>{u.delete(e)}),onFinishHydration:e=>(c.add(e),()=>{c.delete(e)})},m(),s||g},a=(e,t)=>(n,o,a)=>{let s,l={storage:r(()=>localStorage),partialize:e=>e,version:0,merge:(e,t)=>({...t,...e}),...t},d=!1,u=new Set,c=new Set,h=l.storage;if(!h)return e((...e)=>{console.warn(`[zustand persist middleware] Unable to update item '${l.name}', the given storage is currently unavailable.`),n(...e)},o,a);let f=()=>{let e=l.partialize({...o()});return h.setItem(l.name,{state:e,version:l.version})},p=a.setState;a.setState=(e,t)=>{p(e,t),f()};let g=e((...e)=>{n(...e),f()},o,a);a.getInitialState=()=>g;let m=()=>{var e,t;if(!h)return;d=!1,u.forEach(e=>{var t;return e(null!=(t=o())?t:g)});let r=(null==(t=l.onRehydrateStorage)?void 0:t.call(l,null!=(e=o())?e:g))||void 0;return i(h.getItem.bind(h))(l.name).then(e=>{if(e){if("number"!=typeof e.version||e.version===l.version)return[!1,e.state];if(l.migrate)return[!0,l.migrate(e.state,e.version)];console.error("State loaded from storage couldn't be migrated since no migrate function was provided")}return[!1,void 0]}).then(e=>{var t;let[r,i]=e;if(n(s=l.merge(i,null!=(t=o())?t:g),!0),r)return f()}).then(()=>{null==r||r(s,void 0),s=o(),d=!0,c.forEach(e=>e(s))}).catch(e=>{null==r||r(void 0,e)})};return a.persist={setOptions:e=>{l={...l,...e},e.storage&&(h=e.storage)},clearStorage:()=>{null==h||h.removeItem(l.name)},getOptions:()=>l,rehydrate:()=>m(),hasHydrated:()=>d,onHydrate:e=>(u.add(e),()=>{u.delete(e)}),onFinishHydration:e=>(c.add(e),()=>{c.delete(e)})},l.skipHydration||m(),s||g},s=(e,t)=>"getStorage"in t||"serialize"in t||"deserialize"in t?(console.warn("[DEPRECATED] `getStorage`, `serialize` and `deserialize` options are deprecated. Use `storage` option instead."),o(e,t)):a(e,t)},60981:function(e,t,n){"use strict";n.d(t,{F:function(){return c}});var r=n(10331),i=n(35108);let o=e=>{let t;let n=new Set,r=(e,r)=>{let i="function"==typeof e?e(t):e;if(!Object.is(i,t)){let e=t;t=(null!=r?r:"object"!=typeof i||null===i)?i:Object.assign({},t,i),n.forEach(n=>n(t,e))}},i=()=>t,o={setState:r,getState:i,getInitialState:()=>a,subscribe:e=>(n.add(e),()=>n.delete(e)),destroy:()=>{console.warn("[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected."),n.clear()}},a=t=e(r,i,o);return o},a=e=>e?o(e):o,{useDebugValue:s}=r,{useSyncExternalStoreWithSelector:l}=i,d=e=>e,u=(e,t)=>{let n=a(e),r=(e,r=t)=>(function(e,t=d,n){let r=l(e.subscribe,e.getState,e.getServerState||e.getInitialState,t,n);return s(r),r})(n,e,r);return Object.assign(r,n),r},c=(e,t)=>e?u(e,t):u}}]);",    //
     "application/javascript", //
     "/_next/static/chunks/559-2d5e7d4007d79fa2.js/", //
};
}
